{"version":3,"sources":["my-apps/app-content/auth/agents/agent-details/agent-details.view.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAeA;gBAUC,0BAAa,MAAa,EAAE,KAAoB,EAAE,iBAAmC;oBAVtF,iBAmCC;oBA5BQ,eAAU,GAAW,IAAI,CAAC;oBAC1B,SAAI,GAAU,+BAAK,CAAC,IAAI,CAAC;oBAGhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAE5B,IAAI,CAAC,GAAG,GAAG,iBAAiB,CAAC,SAAS,CAAC;oBACvC,iBAAiB,CAAC,eAAe,CAAC,SAAS,CAAE,UAAE,GAAO;wBACrD,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;wBACf,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,UAAU,CAAE,cAAQ,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAA,CAAC,EAAE,CAAC,CAAE,CAAC;oBACnD,CAAC,CAAE,CAAC;gBACL,CAAC;gBAED,mCAAQ,GAAR;oBAAA,iBAOC;oBANA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAE,UAAE,IAAmC;wBACtE,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,CAAC,CAAE,CAAC;oBACJ,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAE,UAAE,MAAM;wBAClD,KAAI,CAAC,IAAI,GAAG,MAAM,CAAE,MAAM,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,GAAG,+BAAK,CAAC,IAAI,CAAC;oBAC9D,CAAC,CAAE,CAAC;gBACL,CAAC;gBAEO,oCAAS,GAAjB;oBACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAE,KAAK,CAAE,CAAE,CAAA;gBAClC,CAAC;gBAtCF;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,iCAAQ;wBAClB,MAAM,EAAE,CAAE,2BAA2B,CAAE;qBACvC,CAAE;;oCAAA;gBAoCH,uBAAC;YAAD,CAnCA,AAmCC,IAAA;YAnCD,+CAmCC,CAAA;YAED,oBAAe,gBAAgB,EAAC","file":"agent-details.view.js","sourcesContent":["import { Component } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\nimport { PersistedAgent } from \"carbonldp/Auth\";\n\nimport { AppContentService } from \"carbonldp-panel/my-apps/app-content/app-content.service\";\nimport { Modes } from \"./agent-details.component\";\n\nimport template from \"./agent-details.view.html!\";\n\n@Component( {\n\tselector: \"cp-agent-details-view\",\n\ttemplate: template,\n\tstyles: [ \":host { display: block; }\" ]\n} )\nexport class AgentDetailsView {\n\n\tprivate router:Router;\n\tprivate activatedRoute:ActivatedRoute;\n\n\tprivate app:any;\n\tprivate agent:PersistedAgent.Class;\n\tprivate canDisplay:boolean = true;\n\tprivate mode:string = Modes.READ;\n\n\tconstructor( router:Router, route:ActivatedRoute, appContentService:AppContentService ) {\n\t\tthis.router = router;\n\t\tthis.activatedRoute = route;\n\n\t\tthis.app = appContentService.activeApp;\n\t\tappContentService.onAppHasChanged.subscribe( ( app:any ) => {\n\t\t\tthis.app = app;\n\t\t\tthis.canDisplay = false;\n\t\t\tsetTimeout( () => { this.canDisplay = true;}, 0 );\n\t\t} );\n\t}\n\n\tngOnInit() {\n\t\tthis.activatedRoute.data.forEach( ( data:{ agent:PersistedAgent.Class } ) => {\n\t\t\tthis.agent = data.agent;\n\t\t} );\n\t\tthis.activatedRoute.queryParams.subscribe( ( params ) => {\n\t\t\tthis.mode = params[ \"mode\" ] ? params[ \"mode\" ] : Modes.READ;\n\t\t} );\n\t}\n\n\tprivate goToAgent():void {\n\t\tthis.router.navigate( [ \"../\" ] )\n\t}\n\n}\n\nexport default AgentDetailsView;\n"]}