{"version":3,"sources":["my-apps/app-content/app-content.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAgE;AAIhE,IAAa,iBAAiB;IAe7B;QAFO,oBAAe,GAA2B,IAAI,mBAAY,EAAa,CAAC;IAE/D,CAAC;IAXjB,sBAAW,wCAAS;aAKpB;YACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;aAPD,UAAsB,GAAa;YAClC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;QAC7C,CAAC;;;OAAA;IAUF,wBAAC;AAAD,CAjBA,AAiBC,IAAA;AAjBY,iBAAiB;IAD7B,iBAAU,EAAE;;GACA,iBAAiB,CAiB7B;AAjBY,8CAAiB","file":"app-content.service.js","sourcesContent":["import { Injectable, Input, EventEmitter } from '@angular/core';\nimport * as App from \"./app\";\n\n@Injectable()\nexport class AppContentService {\n\n\tprivate _activeapp:App.Class;\n\n\tpublic set activeApp( app:App.Class ) {\n\t\tthis._activeapp = app;\n\t\tthis.onAppHasChanged.emit( this.activeApp );\n\t}\n\n\tpublic get activeApp():App.Class {\n\t\treturn this._activeapp;\n\t}\n\n\tpublic onAppHasChanged:EventEmitter<App.Class> = new EventEmitter<App.Class>();\n\n\tconstructor() { }\n\n}"]}