{"version":3,"sources":["my-apps/app-content/configuration/backup/backups-list/backups-list.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA8H;AAE9H,mCAAqC;AAErC,+DAAiE;AACjE,uCAA8D;AAG9D,sDAAoD;AACpD,qFAAiF;AAEjF,0BAA4B;AAC5B,gCAA8B;AAQ9B,IAAa,oBAAoB;IAqBhC,8BAAa,OAAkB,EAAE,cAA6B;QAA9D,iBAUC;QArBD,mBAAc,GAAW,KAAK,CAAC;QAC/B,mBAAc,GAAW,KAAK,CAAC;QAC/B,kBAAa,GAAa,EAAE,CAAC;QAC7B,kBAAa,GAAU,KAAK,CAAC;QAC7B,mBAAc,GAAa,EAAE,CAAC;QAK9B,qBAAgB,GAAyB,IAAI,mBAAY,EAAW,CAAC;QAGpE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAE,UAAE,OAAO;YACzC,EAAE,CAAA,CAAE,CAAE,OAAQ,CAAC;gBAAC,MAAM,CAAC;YACvB,KAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAE,UAAE,OAAiC;gBAC1D,aAAa,CAAE,KAAI,CAAC,wBAAwB,CAAE,CAAC;gBAC/C,KAAI,CAAC,cAAc,EAAE,CAAC;YACvB,CAAC,CAAE,CAAC;QACL,CAAC,CAAE,CAAC;IACL,CAAC;IAED,8CAAe,GAAf;QACC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAE,CAAC;QAChD,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,sBAAsB,CAAE,CAAC;QACnF,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACzB,CAAC;IAED,0CAAW,GAAX,UAAa,OAA0C;QAAvD,iBAQC;QAPA,EAAE,CAAA,CAAE,OAAO,CAAE,WAAW,CAAE,IAAI,CAAE,CAAE,OAAO,CAAE,WAAW,CAAE,CAAC,YAAY,IAAI,OAAO,CAAE,WAAW,CAAE,CAAC,YAAY,KAAK,OAAO,CAAE,WAAW,CAAE,CAAC,aAAc,CAAC,CAAC,CAAC;YACxJ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAE,UAAE,OAAiC;gBAC1D,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC7B,CAAC,CAAE,CAAC,KAAK,CAAE,cAAM,OAAA,KAAI,CAAC,cAAc,GAAG,KAAK,EAA3B,CAA2B,CAAE,CAAC;YAC/C,IAAI,CAAC,cAAc,EAAE,CAAC;QACvB,CAAC;IACF,CAAC;IAED,0CAAW,GAAX;QACC,aAAa,CAAE,IAAI,CAAC,wBAAwB,CAAE,CAAC;IAChD,CAAC;IAED,+CAAgB,GAAhB;QACC,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAE;YAC1C,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,cAAM,OAAA,KAAK,EAAL,CAAK;SACtB,CAAE,CAAC;IACL,CAAC;IAED,6CAAc,GAAd;QAAA,iBAGC;QAFA,yHAAyH;QACzH,IAAI,CAAC,wBAAwB,GAAQ,WAAW,CAAE,cAAM,OAAA,KAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;IACjG,CAAC;IAED,yCAAU,GAAV;QAAA,iBAoBC;QAnBA,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC,IAAI,CACxD,UAAE,EAAmE;gBAAjE,eAAO,EAAE,gBAAQ;YACpB,OAAO,GAAG,OAAO,CAAC,IAAI,CAAE,UAAE,CAAK,EAAE,CAAK,IAAM,OAAA,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,EAA/D,CAA+D,CAAE,CAAC;YAC9G,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,MAAM,CAAC,OAAO,CAAC;QAChB,CAAC,CACD,CAAC,KAAK,CAAE,UAAE,KAAe;YACzB,IAAI,YAAY,GAAoB;gBACnC,KAAK,EAAE,KAAK,CAAC,IAAI;gBACjB,IAAI,EAAE,yBAAK,CAAC,KAAK;gBACjB,OAAO,EAAE,+CAA6C,CAAC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAW;gBAC5F,QAAQ,EAAQ,KAAK,CAAC,QAAQ,CAAC,OAAQ,CAAC,WAAW;gBACnD,UAAU,EAAE,EAAE,GAAoB,KAAK,CAAC,QAAQ,CAAC,OAAQ,CAAC,MAAM;gBAChE,aAAa,EAAmB,KAAK,CAAC,QAAQ,CAAC,OAAQ,CAAC,UAAU;aAClE,CAAC;YACF,KAAI,CAAC,aAAa,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC;QACd,CAAC,CAAE,CAAC;IACL,CAAC;IAED,6CAAc,GAAd,UAAgB,GAAU,EAAE,cAAgC;QAA5D,iBAiBC;QAhBA,cAAc,CAAC,SAAS,CAAC,GAAG,CAAE,SAAS,CAAE,CAAC;QAC1C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAE,GAAG,CAAE,CAAC,IAAI,CAAE,UAAE,cAAqB;YACtE,MAAM,CAAC,IAAI,CAAE,cAAc,CAAE,CAAC;QAC/B,CAAC,CAAE,CAAC,KAAK,CAAE,UAAE,KAAe;YAC3B,IAAI,aAAqB,CAAC;YAC1B,aAAa,GAAY;gBACxB,KAAK,EAAc,KAAM,CAAC,IAAI;gBAC9B,IAAI,EAAE,yBAAK,CAAC,KAAK;gBACjB,OAAO,EAAE,kCAAkC;gBAC3C,QAAQ,EAAoB,KAAM,CAAC,QAAQ,CAAC,OAAQ,CAAC,WAAW;gBAChE,UAAU,EAAE,EAAE,GAAgC,KAAM,CAAC,QAAQ,CAAC,OAAQ,CAAC,MAAM;gBAC7E,aAAa,EAA+B,KAAM,CAAC,QAAQ,CAAC,OAAQ,CAAC,UAAU;aAC/E,CAAC;YACF,KAAI,CAAC,qBAAqB,GAAG,aAAa,CAAC;QAC5C,CAAC,CAAE,CAAC,IAAI,CAAE,cAAO,cAAc,CAAC,SAAS,CAAC,MAAM,CAAE,SAAS,CAAE,CAAC,CAAA,CAAC,CAAE,CAAC;IACnE,CAAC;IAED,yDAA0B,GAA1B;QACC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,gDAAiB,GAAjB,UAAmB,oBAA4C;QAC9D,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAE,MAAM,CAAE,CAAC;IACrD,CAAC;IAED,2CAAY,GAAZ,UAAc,MAA8B;QAA5C,iBAiCC;QAhCA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC,IAAI,CAAE,UAAE,QAAuB;YAC9F,EAAE,CAAA,CAAE,QAAQ,CAAC,MAAM,KAAK,iBAAc,CAAC,EAAG,CAAC;gBAAC,MAAM,CAAM,OAAO,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;YACnF,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,MAAM,CAAC,QAAQ,CAAC;QACjB,CAAC,CAAE,CAAC,KAAK,CAAE,UAAE,eAAwC;YACpD,IAAI,aAAqB,CAAC;YAC1B,EAAE,CAAA,CAAE,eAAe,CAAC,cAAc,CAAE,UAAU,CAAG,CAAC,CAAC,CAAC;gBACnD,aAAa,GAAY;oBACxB,KAAK,EAAc,eAAgB,CAAC,IAAI;oBACxC,IAAI,EAAE,yBAAK,CAAC,KAAK;oBACjB,OAAO,EAAE,6BAA6B;oBACtC,QAAQ,EAAoB,eAAgB,CAAC,QAAQ,CAAC,OAAQ,CAAC,WAAW;oBAC1E,UAAU,EAAE,EAAE,GAAgC,eAAgB,CAAC,QAAQ,CAAC,OAAQ,CAAC,MAAM;oBACvF,aAAa,EAA+B,eAAgB,CAAC,QAAQ,CAAC,OAAQ,CAAC,UAAU;iBACzF,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,aAAa,GAAY;oBACxB,KAAK,EAAoC,eAAgB,CAAC,OAAQ,CAAC,UAAU;oBAC7E,IAAI,EAAE,yBAAK,CAAC,KAAK;oBACjB,OAAO,EAAE,6BAA6B;oBACtC,QAAQ,EAAyB,eAAgB,CAAC,OAAQ,CAAC,WAAW;oBACtE,UAAU,EAAE,EAAE,GAAoB,eAAgB,CAAC,MAAM;oBACzD,aAAa,EAAoC,eAAgB,CAAC,OAAQ,CAAC,UAAU;iBACrF,CAAC;YACH,CAAC;YACD,KAAI,CAAC,cAAc,CAAC,IAAI,CAAE,aAAa,CAAE,CAAC;QAC3C,CAAC,CAAE,CAAC,IAAI,CAAE,UAAE,QAAuB;YAClC,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC;QACjB,CAAC,CAAE,CAAC;IACL,CAAC;IAED,0CAAW,GAAX;QAAA,iBAOC;QANA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAE,UAAE,OAAiC;YAC1D,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAE,CAAC,KAAK,CAAE,cAAM,OAAA,KAAI,CAAC,cAAc,GAAG,KAAK,EAA3B,CAA2B,CAAE,CAAC;QAC/C,aAAa,CAAE,IAAI,CAAC,wBAAwB,CAAE,CAAC;QAC/C,IAAI,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAED,uDAAwB,GAAxB,UAA0B,KAAY;QACrC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAE,KAAK,CAAE,CAAC;IACpC,CAAC;IAED,+CAAgB,GAAhB;QACC,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAE,MAAM,CAAE,CAAC;IACrD,CAAC;IAEF,2BAAC;AAAD,CAxKA,AAwKC,IAAA;AAvJS;IAAR,YAAK,EAAE;;uDAAmC;AAClC;IAAR,YAAK,EAAE;8BAAY,GAAG,CAAC,OAAO;wDAAC;AAlBpB,oBAAoB;IANhC,gBAAS,CAAE;QACX,QAAQ,EAAE,iBAAiB;QAC3B,WAAW,EAAE,+BAA+B;QAC5C,SAAS,EAAE,CAAG,+BAA+B,CAAG;KAChD,CAAE;qCAuBmB,iBAAU,EAAiB,gCAAc;GArBlD,oBAAoB,CAwKhC;AAxKY,oDAAoB;;AA0KjC,kBAAe,oBAAoB,CAAC","file":"backups-list.component.js","sourcesContent":["import { Component, ElementRef, Input, EventEmitter, SimpleChange, AfterViewInit, OnChanges, OnDestroy } from \"@angular/core\";\n\nimport * as App from \"carbonldp/App\";\nimport * as Response from \"carbonldp/HTTP/Response\";\nimport * as PersistedDocument from \"carbonldp/PersistedDocument\";\nimport { StatusCode as HTTPStatusCode } from \"carbonldp/HTTP\";\nimport { Error as HTTPError } from \"carbonldp/HTTP/Errors\";\n\nimport { BackupsService } from \"../backups.service\";\nimport { Message, Types } from \"carbonldp-panel/messages-area/message.component\";\n\nimport * as $ from \"jquery\";\nimport \"semantic-ui/semantic\";\n\n@Component( {\n\tselector: \"cp-backups-list\",\n\ttemplateUrl: \"./backups-list.component.html\",\n\tstyleUrls: [  \"./backups-list.component.scss\"  ],\n} )\n\nexport class BackupsListComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n\telement:ElementRef;\n\t$element:JQuery;\n\t$deleteBackupConfirmationModal:JQuery;\n\tfetchBackupsListInterval:number;\n\n\tbackupsService:BackupsService;\n\tbackups:PersistedDocument.Class[];\n\taskingBackupToRemove:PersistedDocument.Class;\n\tloadingBackups:boolean = false;\n\tdeletingBackup:boolean = false;\n\terrorMessages:Message[] = [];\n\trefreshPeriod:number = 15000;\n\tdeleteMessages:Message[] = [];\n\tfailedDownloadMessage:Message;\n\n\t@Input() backupJob:PersistedDocument.Class;\n\t@Input() appContext:App.Context;\n\tfetchBackupsList:EventEmitter<boolean> = new EventEmitter<boolean>();\n\n\tconstructor( element:ElementRef, backupsService:BackupsService ) {\n\t\tthis.element = element;\n\t\tthis.backupsService = backupsService;\n\t\tthis.fetchBackupsList.subscribe( ( doFetch ) => {\n\t\t\tif( ! doFetch ) return;\n\t\t\tthis.getBackups().then( ( backups:PersistedDocument.Class[] ) => {\n\t\t\t\tclearInterval( this.fetchBackupsListInterval );\n\t\t\t\tthis.monitorBackups();\n\t\t\t} );\n\t\t} );\n\t}\n\n\tngAfterViewInit():void {\n\t\tthis.$element = $( this.element.nativeElement );\n\t\tthis.$deleteBackupConfirmationModal = this.$element.find( \".delete.backup.modal\" );\n\t\tthis.initializeModals();\n\t}\n\n\tngOnChanges( changes:{ [propName:string]:SimpleChange } ):void {\n\t\tif( changes[ \"backupJob\" ] && ! ! changes[ \"backupJob\" ].currentValue && changes[ \"backupJob\" ].currentValue !== changes[ \"backupJob\" ].previousValue ) {\n\t\t\tthis.loadingBackups = true;\n\t\t\tthis.getBackups().then( ( backups:PersistedDocument.Class[] ) => {\n\t\t\t\tthis.loadingBackups = false;\n\t\t\t} ).catch( () => this.loadingBackups = false );\n\t\t\tthis.monitorBackups();\n\t\t}\n\t}\n\n\tngOnDestroy():void {\n\t\tclearInterval( this.fetchBackupsListInterval );\n\t}\n\n\tinitializeModals():void {\n\t\tthis.$deleteBackupConfirmationModal.modal( {\n\t\t\tclosable: false,\n\t\t\tblurring: true,\n\t\t\tonApprove: () => false\n\t\t} );\n\t}\n\n\tmonitorBackups():void {\n\t\t// Node typings are overriding setInterval, that's why we need to cast it to any before assigning it to a number variable\n\t\tthis.fetchBackupsListInterval = <any>setInterval( () => this.getBackups(), this.refreshPeriod );\n\t}\n\n\tgetBackups():Promise<PersistedDocument.Class[]> {\n\t\tthis.errorMessages = [];\n\t\treturn this.backupsService.getAll( this.appContext ).then(\n\t\t\t( [ backups, response ]:[ PersistedDocument.Class[], Response.Class ] ) => {\n\t\t\t\tbackups = backups.sort( ( a:any, b:any ) => b.modified < a.modified ? - 1 : b.modified > a.modified ? 1 : 0 );\n\t\t\t\tthis.backups = backups;\n\t\t\t\treturn backups;\n\t\t\t}\n\t\t).catch( ( error:HTTPError ) => {\n\t\t\tlet errorMessage:Message = <Message>{\n\t\t\t\ttitle: error.name,\n\t\t\t\ttype: Types.ERROR,\n\t\t\t\tcontent: `Couldn't fetch backups. I'll try again in ${(this.refreshPeriod / 1000)} seconds.`,\n\t\t\t\tendpoint: (<any>error.response.request).responseURL,\n\t\t\t\tstatusCode: \"\" + (<XMLHttpRequest>error.response.request).status,\n\t\t\t\tstatusMessage: (<XMLHttpRequest>error.response.request).statusText\n\t\t\t};\n\t\t\tthis.errorMessages.push( errorMessage );\n\t\t\treturn error;\n\t\t} );\n\t}\n\n\tdownloadBackup( uri:string, downLoadButton:HTMLButtonElement ):void {\n\t\tdownLoadButton.classList.add( \"loading\" );\n\t\tthis.failedDownloadMessage = null;\n\t\tthis.backupsService.getDownloadURL( uri ).then( ( getDownloadURL:string ) => {\n\t\t\twindow.open( getDownloadURL );\n\t\t} ).catch( ( error:HTTPError ) => {\n\t\t\tlet deleteMessage:Message;\n\t\t\tdeleteMessage = <Message>{\n\t\t\t\ttitle: (<HTTPError>error).name,\n\t\t\t\ttype: Types.ERROR,\n\t\t\t\tcontent: \"Couldn't generate download link.\",\n\t\t\t\tendpoint: (<any>(<HTTPError>error).response.request).responseURL,\n\t\t\t\tstatusCode: \"\" + (<XMLHttpRequest>(<HTTPError>error).response.request).status,\n\t\t\t\tstatusMessage: (<XMLHttpRequest>(<HTTPError>error).response.request).statusText\n\t\t\t};\n\t\t\tthis.failedDownloadMessage = deleteMessage;\n\t\t} ).then( () => {downLoadButton.classList.remove( \"loading\" );} );\n\t}\n\n\tcloseFailedDownloadMessage():void {\n\t\tthis.failedDownloadMessage = null;\n\t}\n\n\taskToDeleteBackup( askingBackupToRemove:PersistedDocument.Class ):void {\n\t\tthis.askingBackupToRemove = askingBackupToRemove;\n\t\tthis.$deleteBackupConfirmationModal.modal( \"show\" );\n\t}\n\n\tdeleteBackup( backup:PersistedDocument.Class ):Promise<Response.Class> {\n\t\tthis.deletingBackup = true;\n\t\treturn this.backupsService.delete( backup.id, this.appContext ).then( ( response:Response.Class ):Response.Class => {\n\t\t\tif( response.status !== HTTPStatusCode.OK ) return <any>Promise.reject( response );\n\t\t\tthis.getBackups();\n\t\t\tthis.closeDeleteModal();\n\t\t\treturn response;\n\t\t} ).catch( ( errorOrResponse:HTTPError|Response.Class ) => {\n\t\t\tlet deleteMessage:Message;\n\t\t\tif( errorOrResponse.hasOwnProperty( \"response\" ) ) {\n\t\t\t\tdeleteMessage = <Message>{\n\t\t\t\t\ttitle: (<HTTPError>errorOrResponse).name,\n\t\t\t\t\ttype: Types.ERROR,\n\t\t\t\t\tcontent: \"Couldn't delete the backup.\",\n\t\t\t\t\tendpoint: (<any>(<HTTPError>errorOrResponse).response.request).responseURL,\n\t\t\t\t\tstatusCode: \"\" + (<XMLHttpRequest>(<HTTPError>errorOrResponse).response.request).status,\n\t\t\t\t\tstatusMessage: (<XMLHttpRequest>(<HTTPError>errorOrResponse).response.request).statusText\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tdeleteMessage = <Message>{\n\t\t\t\t\ttitle: (<XMLHttpRequest>(<Response.Class>errorOrResponse).request).statusText,\n\t\t\t\t\ttype: Types.ERROR,\n\t\t\t\t\tcontent: \"Couldn't delete the backup.\",\n\t\t\t\t\tendpoint: (<any>(<Response.Class>errorOrResponse).request).responseURL,\n\t\t\t\t\tstatusCode: \"\" + (<Response.Class>errorOrResponse).status,\n\t\t\t\t\tstatusMessage: (<XMLHttpRequest>(<Response.Class>errorOrResponse).request).statusText\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.deleteMessages.push( deleteMessage );\n\t\t} ).then( ( response:Response.Class ) => {\n\t\t\tthis.deletingBackup = false;\n\t\t\treturn response;\n\t\t} );\n\t}\n\n\trefreshList():void {\n\t\tthis.loadingBackups = true;\n\t\tthis.getBackups().then( ( backups:PersistedDocument.Class[] ) => {\n\t\t\tthis.loadingBackups = false;\n\t\t} ).catch( () => this.loadingBackups = false );\n\t\tclearInterval( this.fetchBackupsListInterval );\n\t\tthis.monitorBackups();\n\t}\n\n\tremoveDeleteErrorMessage( index:number ):void {\n\t\tthis.deleteMessages.slice( index );\n\t}\n\n\tcloseDeleteModal():void {\n\t\tthis.$deleteBackupConfirmationModal.modal( \"hide\" );\n\t}\n\n}\n\nexport default BackupsListComponent;\n"]}