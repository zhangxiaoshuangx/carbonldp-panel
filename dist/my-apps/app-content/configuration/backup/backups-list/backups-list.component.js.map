{"version":3,"sources":["my-apps/app-content/configuration/backup/backups-list/backups-list.component.ts"],"names":[],"mappings":"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","file":"my-apps/app-content/configuration/backup/backups-list/backups-list.component.js","sourcesContent":["import { Component, ElementRef, Input, EventEmitter, SimpleChange, AfterViewInit, OnChanges, OnDestroy } from \"@angular/core\";\n\nimport * as App from \"carbonldp/App\";\nimport * as Response from \"carbonldp/HTTP/Response\";\nimport * as PersistedDocument from \"carbonldp/PersistedDocument\";\nimport { StatusCode as HTTPStatusCode } from \"carbonldp/HTTP\";\nimport { Error as HTTPError } from \"carbonldp/HTTP/Errors\";\n\nimport { BackupsService } from \"../backups.service\";\nimport { Message } from \"./../../../../../errors-area/error-message.component\";\n\nimport $ from \"jquery\";\nimport \"semantic-ui/semantic\";\n\nimport template from \"./backups-list.component.html!\";\nimport style from \"./backups-list.component.css!text\";\n\n@Component( {\n\tselector: \"cp-backups-list\",\n\ttemplate: template,\n\tstyles: [ style ],\n} )\n\nexport class BackupsListComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n\telement:ElementRef;\n\t$element:JQuery;\n\t$deleteBackupConfirmationModal:JQuery;\n\tfetchBackupsListInterval:number;\n\n\tbackupsService:BackupsService;\n\tbackups:PersistedDocument.Class[];\n\taskingBackupToRemove:PersistedDocument.Class;\n\tloadingBackups:boolean = false;\n\tdeletingBackup:boolean = false;\n\terrorMessages:Message[] = [];\n\trefreshPeriod:number = 15000;\n\tdeleteMessages:Message[] = [];\n\tfailedDownloadMessage:Message;\n\n\t@Input() backupJob:PersistedDocument.Class;\n\t@Input() appContext:App.Context;\n\tfetchBackupsList:EventEmitter<boolean> = new EventEmitter<boolean>();\n\n\tconstructor( element:ElementRef, backupsService:BackupsService ) {\n\t\tthis.element = element;\n\t\tthis.backupsService = backupsService;\n\t\tthis.fetchBackupsList.subscribe( ( doFetch )=> {\n\t\t\tif( ! doFetch ) return;\n\t\t\tthis.getBackups().then( ( backups:PersistedDocument.Class[] )=> {\n\t\t\t\tclearInterval( this.fetchBackupsListInterval );\n\t\t\t\tthis.monitorBackups();\n\t\t\t} );\n\t\t} );\n\t}\n\n\tngAfterViewInit():void {\n\t\tthis.$element = $( this.element.nativeElement );\n\t\tthis.$deleteBackupConfirmationModal = this.$element.find( \".delete.backup.modal\" );\n\t\tthis.initializeModals();\n\t}\n\n\tngOnChanges( changes:{[propName:string]:SimpleChange} ):void {\n\t\tif( changes[ \"backupJob\" ] && ! ! changes[ \"backupJob\" ].currentValue && changes[ \"backupJob\" ].currentValue !== changes[ \"backupJob\" ].previousValue ) {\n\t\t\tthis.loadingBackups = true;\n\t\t\tthis.getBackups().then( ( backups:PersistedDocument.Class[] ) => {\n\t\t\t\tthis.loadingBackups = false;\n\t\t\t} ).catch( ()=>this.loadingBackups = false );\n\t\t\tthis.monitorBackups();\n\t\t}\n\t}\n\n\tngOnDestroy():void {\n\t\tclearInterval( this.fetchBackupsListInterval );\n\t}\n\n\tinitializeModals():void {\n\t\tthis.$deleteBackupConfirmationModal.modal( {\n\t\t\tclosable: false,\n\t\t\tblurring: true,\n\t\t\tonApprove: ()=>false\n\t\t} );\n\t}\n\n\tmonitorBackups():void {\n\t\t// Node typings are overriding setInterval, that's why we need to cast it to any before assigning it to a number variable\n\t\tthis.fetchBackupsListInterval = <any>setInterval( ()=> this.getBackups(), this.refreshPeriod );\n\t}\n\n\tgetBackups():Promise<PersistedDocument.Class[]> {\n\t\tthis.errorMessages = [];\n\t\treturn this.backupsService.getAll( this.appContext ).then(\n\t\t\t( [backups, response]:[PersistedDocument.Class[],Response.Class] ) => {\n\t\t\t\tbackups = backups.sort( ( a:any, b:any ) => b.modified < a.modified ? - 1 : b.modified > a.modified ? 1 : 0 );\n\t\t\t\tthis.backups = backups;\n\t\t\t\treturn backups;\n\t\t\t}\n\t\t).catch( ( error:HTTPError ) => {\n\t\t\tlet errorMessage:Message = <Message>{\n\t\t\t\ttitle: error.name,\n\t\t\t\tcontent: `Couldn't fetch backups. I'll try again in ${(this.refreshPeriod / 1000)} seconds.`,\n\t\t\t\tendpoint: (<any>error.response.request).responseURL,\n\t\t\t\tstatusCode: \"\" + (<XMLHttpRequest>error.response.request).status,\n\t\t\t\tstatusMessage: (<XMLHttpRequest>error.response.request).statusText\n\t\t\t};\n\t\t\tthis.errorMessages.push( errorMessage );\n\t\t\treturn error;\n\t\t} );\n\t}\n\n\tdownloadBackup( uri:string, downLoadButton:HTMLButtonElement ):void {\n\t\tdownLoadButton.classList.add( \"loading\" );\n\t\tthis.failedDownloadMessage = null;\n\t\tthis.backupsService.getDownloadURL( uri ).then( ( getDownloadURL:string ) => {\n\t\t\twindow.open( getDownloadURL );\n\t\t} ).catch( ( error:HTTPError )=> {\n\t\t\tlet deleteMessage:Message;\n\t\t\tdeleteMessage = <Message>{\n\t\t\t\ttitle: (<HTTPError>error).name,\n\t\t\t\tcontent: \"Couldn't generate download link.\",\n\t\t\t\tendpoint: (<any>(<HTTPError>error).response.request).responseURL,\n\t\t\t\tstatusCode: \"\" + (<XMLHttpRequest>(<HTTPError>error).response.request).status,\n\t\t\t\tstatusMessage: (<XMLHttpRequest>(<HTTPError>error).response.request).statusText\n\t\t\t};\n\t\t\tthis.failedDownloadMessage = deleteMessage;\n\t\t} ).then( ()=> {downLoadButton.classList.remove( \"loading\" );} );\n\t}\n\n\tcloseFailedDownloadMessage():void {\n\t\tthis.failedDownloadMessage = null;\n\t}\n\n\taskToDeleteBackup( askingBackupToRemove:PersistedDocument.Class ):void {\n\t\tthis.askingBackupToRemove = askingBackupToRemove;\n\t\tthis.$deleteBackupConfirmationModal.modal( \"show\" );\n\t}\n\n\tdeleteBackup( backup:PersistedDocument.Class ):Promise<Response.Class> {\n\t\tthis.deletingBackup = true;\n\t\treturn this.backupsService.delete( backup.id, this.appContext ).then( ( response:Response.Class ):Response.Class => {\n\t\t\tif( response.status !== HTTPStatusCode.OK ) return <any>Promise.reject( response );\n\t\t\tthis.getBackups();\n\t\t\tthis.closeDeleteModal();\n\t\t\treturn response;\n\t\t} ).catch( ( errorOrResponse:HTTPError|Response.Class )=> {\n\t\t\tlet deleteMessage:Message;\n\t\t\tif( errorOrResponse.hasOwnProperty( \"response\" ) ) {\n\t\t\t\tdeleteMessage = <Message>{\n\t\t\t\t\ttitle: (<HTTPError>errorOrResponse).name,\n\t\t\t\t\tcontent: \"Couldn't delete the backup.\",\n\t\t\t\t\tendpoint: (<any>(<HTTPError>errorOrResponse).response.request).responseURL,\n\t\t\t\t\tstatusCode: \"\" + (<XMLHttpRequest>(<HTTPError>errorOrResponse).response.request).status,\n\t\t\t\t\tstatusMessage: (<XMLHttpRequest>(<HTTPError>errorOrResponse).response.request).statusText\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tdeleteMessage = <Message>{\n\t\t\t\t\ttitle: (<XMLHttpRequest>(<Response.Class>errorOrResponse).request).statusText,\n\t\t\t\t\tcontent: \"Couldn't delete the backup.\",\n\t\t\t\t\tendpoint: (<any>(<Response.Class>errorOrResponse).request).responseURL,\n\t\t\t\t\tstatusCode: \"\" + (<Response.Class>errorOrResponse).status,\n\t\t\t\t\tstatusMessage: (<XMLHttpRequest>(<Response.Class>errorOrResponse).request).statusText\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.deleteMessages.push( deleteMessage );\n\t\t} ).then( ( response:Response.Class )=> {\n\t\t\tthis.deletingBackup = false;\n\t\t\treturn response;\n\t\t} );\n\t}\n\n\trefreshList():void {\n\t\tthis.loadingBackups = true;\n\t\tthis.getBackups().then( ( backups:PersistedDocument.Class[] ) => {\n\t\t\tthis.loadingBackups = false;\n\t\t} ).catch( ()=>this.loadingBackups = false );\n\t\tclearInterval( this.fetchBackupsListInterval );\n\t\tthis.monitorBackups();\n\t}\n\n\tremoveDeleteErrorMessage( index:number ):void {\n\t\tthis.deleteMessages.slice( index );\n\t}\n\n\tcloseDeleteModal():void {\n\t\tthis.$deleteBackupConfirmationModal.modal( \"hide\" );\n\t}\n\n}\n\nexport default BackupsListComponent;\n"],"sourceRoot":"/source/"}