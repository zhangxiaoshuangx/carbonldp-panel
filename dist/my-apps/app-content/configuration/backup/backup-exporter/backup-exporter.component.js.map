{"version":3,"sources":["my-apps/app-content/configuration/backup/backup-exporter/backup-exporter.component.ts"],"names":[],"mappings":"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","file":"my-apps/app-content/configuration/backup/backup-exporter/backup-exporter.component.js","sourcesContent":["import { Component, Input } from \"@angular/core\";\n\nimport * as App from \"carbonldp/App\";\nimport * as PersistedDocument from \"carbonldp/PersistedDocument\";\nimport { Error as HTTPError } from \"carbonldp/HTTP/Errors\";\n\nimport { Message, ErrorMessageComponent } from \"carbon-panel/errors-area/error-message.component\";\nimport { JobsService } from \"../../job/jobs.service\";\nimport * as Job from \"../../job/job\";\n\nimport \"semantic-ui/semantic\";\n\nimport template from \"./backup-exporter.component.html!\";\nimport style from \"./backup-exporter.component.css!text\";\n\n@Component( {\n\tselector: \"cp-backup-exporter\",\n\ttemplate: template,\n\tstyles: [ style ],\n\tdirectives: [ ErrorMessageComponent ],\n} )\n\nexport class BackupExporterComponent {\n\n\texecutingBackup:boolean = false;\n\n\t@Input() appContext:App.Context;\n\t@Input() backupJob:PersistedDocument.Class;\n\terrorMessages:Message[] = [];\n\tjobsService:JobsService;\n\texportSuccess:boolean;\n\n\tconstructor( jobsService:JobsService ) {\n\t\tthis.jobsService = jobsService;\n\t}\n\n\tonGenerateBackup():void {\n\t\tthis.executingBackup = true;\n\n\t\tthis.jobsService.runJob( this.backupJob ).then( ( execution:PersistedDocument.Class )=> {\n\t\t\treturn this.monitorExecution( execution ).catch( ( executionOrError:HTTPError|PersistedDocument.Class ) => {\n\t\t\t\tif( executionOrError.hasOwnProperty( \"response\" ) ) return Promise.reject( executionOrError );\n\t\t\t\tlet errorMessage:Message = <Message>{\n\t\t\t\t\ttitle: \"Couldn't execute backup.\",\n\t\t\t\t\tcontent: \"An error occurred while executing your export backup job. This may be caused due to a bad configuration during the creation of your job.\",\n\t\t\t\t\tstatusMessage: execution[ Job.Execution.ERROR_DESCRIPTION ]\n\t\t\t\t};\n\t\t\t\tthis.errorMessages.push( errorMessage );\n\t\t\t} );\n\t\t} ).then( ()=> {\n\t\t\tthis.exportSuccess = true;\n\t\t} ).catch( ( error:HTTPError )=> {\n\t\t\tlet errorMessage:Message = <Message>{\n\t\t\t\ttitle: error.name,\n\t\t\t\tcontent: \"Couldn't execute backup.\",\n\t\t\t\tendpoint: (<any>error.response.request).responseURL,\n\t\t\t\tstatusCode: \"\" + (<XMLHttpRequest>error.response.request).status,\n\t\t\t\tstatusMessage: (<XMLHttpRequest>error.response.request).statusText\n\t\t\t};\n\t\t\tthis.errorMessages.push( errorMessage );\n\t\t} ).then( ()=> {\n\t\t\tthis.executingBackup = false;\n\t\t} );\n\t}\n\n\tmonitorExecution( execution:PersistedDocument.Class ):Promise<PersistedDocument.Class> {\n\t\treturn new Promise<PersistedDocument.Class>( ( resolve:( result:any ) => void, reject:( error:HTTPError|PersistedDocument.Class ) => void ) => {\n\t\t\t// setInterval in the browser returns a number but in NodeJS it returns a Time object, that's why this variable needs to be of type \"any\"\n\t\t\tlet interval:any = setInterval( ()=> {\n\t\t\t\texecution.refresh().then( ()=> {\n\t\t\t\t\tswitch( execution[ Job.Execution.STATUS ].id ) {\n\t\t\t\t\t\tcase Job.ExecutionStatus.FINISHED:\n\t\t\t\t\t\t\tclearInterval( interval );\n\t\t\t\t\t\t\tresolve( execution );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Job.ExecutionStatus.ERROR:\n\t\t\t\t\t\t\tclearInterval( interval );\n\t\t\t\t\t\t\treject( execution );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} ).catch( ( error:HTTPError ) => {\n\t\t\t\t\tlet errorMessage:Message = <Message>{\n\t\t\t\t\t\ttitle: error.name,\n\t\t\t\t\t\tcontent: \"Couldn't monitor the exporting backup status.\",\n\t\t\t\t\t\tendpoint: (<any>error.response.request).responseURL,\n\t\t\t\t\t\tstatusCode: \"\" + (<XMLHttpRequest>error.response.request).status,\n\t\t\t\t\t\tstatusMessage: (<XMLHttpRequest>error.response.request).statusText\n\t\t\t\t\t};\n\t\t\t\t\tthis.errorMessages = [ errorMessage ];\n\t\t\t\t\tclearInterval( interval );\n\t\t\t\t\tthis.executingBackup = false;\n\t\t\t\t} );\n\t\t\t}, 3000 );\n\t\t} );\n\t}\n\n\tremoveMessage( index:number ):void {\n\t\tthis.errorMessages.splice( index, 1 );\n\t}\n\n\tonCloseSuccess():void {\n\t\tthis.exportSuccess = false;\n\t}\n}\n\nexport default BackupExporterComponent;\n"],"sourceRoot":"/source/"}