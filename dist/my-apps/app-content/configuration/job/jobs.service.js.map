{"version":3,"sources":["my-apps/app-content/configuration/job/jobs.service.ts"],"names":[],"mappings":"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","file":"jobs.service.js","sourcesContent":["import { Injectable } from \"@angular/core\";\n\nimport Carbon from \"carbonldp/Carbon\";\nimport * as App from \"carbonldp/App\";\nimport * as HTTP from \"carbonldp/HTTP\";\nimport * as Response from \"carbonldp/HTTP/Response\";\nimport * as PersistedDocument from \"carbonldp/PersistedDocument\";\nimport * as Utils from \"carbonldp/Utils\";\nimport * as Pointer from \"carbonldp/Pointer\";\n\nimport * as Job from \"./job\"\n\n@Injectable()\nexport class JobsService {\n\n\tcarbon:Carbon;\n\n\tappContextsJobs:Map<string, Map<string, PersistedDocument.Class>>;\n\n\tconstructor( carbon:Carbon ) {\n\t\tthis.carbon = carbon;\n\t\tthis.appContextsJobs = new Map < string, Map < string, PersistedDocument.Class >>();\n\t}\n\n\tgetJobOfType( type:string, appContext:App.Context ):Promise<PersistedDocument.Class> {\n\t\tif( ! type ) return <any> Promise.reject( new Error( \"Provide a job type.\" ) );\n\t\tif( ! appContext ) return <any> Promise.reject( new Error( \"Provide an appContext.\" ) );\n\n\t\tif( ! this.appContextsJobs.has( appContext.getBaseURI() ) ) this.appContextsJobs.set( appContext.getBaseURI(), new Map<string, PersistedDocument.Class>() );\n\t\tlet jobs:Map < string, PersistedDocument.Class > = this.appContextsJobs.get( appContext.getBaseURI() );\n\n\t\tlet jobsArray:PersistedDocument.Class[] = Utils.A.from( jobs.values() );\n\t\tlet job:PersistedDocument.Class = jobsArray.find( ( job:PersistedDocument.Class ) => job.types.indexOf( type ) !== - 1 );\n\t\tif( ! ! job ) return Promise.resolve( job );\n\n\t\treturn this.getAll( appContext ).then(\n\t\t\t( jobs:PersistedDocument.Class[] ) => {\n\t\t\t\tlet jobsArray:PersistedDocument.Class[] = Utils.A.from( jobs.values() );\n\t\t\t\treturn jobsArray.find( ( job:PersistedDocument.Class ) => job.types.indexOf( type ) !== - 1 );\n\t\t\t}\n\t\t);\n\t}\n\n\tgetAll( appContext:App.Context ):Promise<PersistedDocument.Class[]> {\n\t\tlet uri:string = appContext.app.id + \"jobs/\";\n\t\tlet jobs:Map < string, PersistedDocument.Class > = this.appContextsJobs.get( appContext.getBaseURI() );\n\t\treturn this.carbon.documents.getChildren( uri ).then( ( [ existingJobs, response ]:[ PersistedDocument.Class[], HTTP.Response.Class ] ) => {\n\t\t\texistingJobs.filter( ( job:PersistedDocument.Class ) => ! jobs.has( job.id ) )\n\t\t\t\t.forEach( ( job:PersistedDocument.Class ) => jobs.set( job.id, job ) );\n\t\t\treturn Utils.A.from( jobs.values() );\n\t\t} );\n\t}\n\n\tcreateExportBackup( appContext:App.Context ):Promise<PersistedDocument.Class> {\n\t\tlet jobs:Map < string, PersistedDocument.Class > = this.appContextsJobs.get( appContext.getBaseURI() );\n\t\treturn new Promise<PersistedDocument.Class>(\n\t\t\t( resolve:( result:any ) => void, reject:( error:Error ) => void ) => {\n\t\t\t\tlet uri:string = appContext.app.id + \"jobs/\";\n\t\t\t\tlet tempJob:any = {};\n\t\t\t\ttempJob[ \"types\" ] = [ Job.Type.EXPORT_BACKUP ];\n\t\t\t\tthis.carbon.documents.createChild( uri, tempJob ).then( ( [ pointer, response ]:[ Pointer.Class, Response.Class ] ) => {\n\t\t\t\t\tpointer.resolve().then( ( [ importJob, response ]:[ PersistedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\t\t\t\tresolve( importJob );\n\t\t\t\t\t\tjobs.set( importJob.id, importJob );\n\t\t\t\t\t} );\n\t\t\t\t} ).catch( ( error ) => reject( error ) );\n\t\t\t}\n\t\t);\n\t}\n\n\tcreateImportBackup( backupURI:string, appContext:App.Context ):Promise<PersistedDocument.Class> {\n\t\tlet uri:string = appContext.app.id + \"jobs/\",\n\t\t\ttempJob:any = {},\n\t\t\tbackup = appContext.documents.getPointer( backupURI );\n\t\ttempJob[ \"types\" ] = [ Job.Type.IMPORT_BACKUP ];\n\t\ttempJob[ Job.namespace + \"backup\" ] = appContext.documents.getPointer( backupURI );\n\n\t\tlet jobs:Map < string, PersistedDocument.Class > = this.appContextsJobs.get( appContext.getBaseURI() );\n\t\treturn this.carbon.documents.createChild( uri, tempJob ).then( ( [ pointer, response ]:[ Pointer.Class, Response.Class ] ) => {\n\t\t\treturn pointer.resolve();\n\t\t} ).then( ( [ importJob, response ]:[ PersistedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\tjobs.set( importJob.id, importJob );\n\t\t\treturn importJob;\n\t\t} );\n\t}\n\n\trunJob( job:PersistedDocument.Class ):Promise<PersistedDocument.Class> {\n\t\tlet tempJob:any = {};\n\t\ttempJob[ \"types\" ] = [ Job.namespace + \"Execution\" ];\n\t\treturn this.carbon.documents.createChild( job.id, tempJob ).then( ( [ pointer, response ]:[ Pointer.Class, Response.Class ] ) => {\n\t\t\treturn pointer.resolve();\n\t\t} ).then( ( [ importJob, response ]:[ PersistedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\treturn importJob;\n\t\t} );\n\t}\n\n\tcheckJobExecution( jobExecution:PersistedDocument.Class ):Promise<PersistedDocument.Class> {\n\t\tif( jobExecution.isResolved() ) {\n\t\t\treturn jobExecution.refresh().then(\n\t\t\t\t( [ resolvedJobExecution, response ]:[ PersistedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\t\t\treturn resolvedJobExecution;\n\t\t\t\t} ).catch( ( error ) => { return Promise.reject( error ) } );\n\t\t} else {\n\t\t\treturn this.carbon.documents.get( jobExecution.id ).then(\n\t\t\t\t( [ resolvedJobExecution, response ]:[ PersistedDocument.Class, HTTP.Response.Class ] ) => {\n\t\t\t\t\treturn resolvedJobExecution;\n\t\t\t\t} ).catch( ( error ) => { return Promise.reject( error ) } );\n\t\t}\n\t}\n}\n\nexport default JobsService;"]}