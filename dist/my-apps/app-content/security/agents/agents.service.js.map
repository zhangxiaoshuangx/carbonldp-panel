{"version":3,"sources":["my-apps/app-content/security/agents/agents.service.ts"],"names":[],"mappings":"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","file":"agents.service.js","sourcesContent":["import { Injectable, EventEmitter } from \"@angular/core\";\n\nimport Carbon from \"carbonldp/Carbon\";\nimport * as App from \"carbonldp/App\";\nimport * as Agent from \"carbonldp/Auth/Agent\";\nimport * as Agents from \"carbonldp/Auth/Agents\";\nimport * as PersistedAgent from \"carbonldp/Auth/PersistedAgent\";\nimport * as HTTP from \"carbonldp/HTTP\";\nimport * as Utils from \"carbonldp/Utils\";\nimport * as URI from \"carbonldp/RDF/URI\";\nimport * as NS from \"carbonldp/NS\";\nimport * as SPARQL from \"carbonldp/SPARQL\";\nimport { Class as RetrievalPreferences, OrderByProperty } from \"carbonldp/RetrievalPreferences\";\nimport { AppContentService } from \"carbonldp-panel/my-apps/app-content/app-content.service\";\n\n@Injectable()\nexport class AgentsService {\n\n\tprivate carbon:Carbon;\n\tpublic appContextsAgents:Map<string, Map<string, PersistedAgent.Class>>;\n\tprivate appContentService:AppContentService;\n\tprivate _activeAgent:PersistedAgent.Class;\n\tpublic set activeAgent( app:PersistedAgent.Class ) {\n\t\tthis._activeAgent = app;\n\t\tthis.onAgentHasChanged.emit( this.activeAgent );\n\t}\n\n\tpublic get activeAgent():PersistedAgent.Class {\n\t\treturn this._activeAgent;\n\t}\n\n\tpublic onAgentHasChanged:EventEmitter<PersistedAgent.Class> = new EventEmitter<App.Class>();\n\n\tconstructor( carbon:Carbon, appContentService:AppContentService ) {\n\t\tthis.carbon = carbon;\n\t\tthis.appContextsAgents = new Map<string, Map<string, PersistedAgent.Class>>();\n\t\tthis.appContentService = appContentService;\n\t}\n\n\tpublic get( slugOrURI:string, appContext:App.Context ):Promise<PersistedAgent.Class> {\n\t\tlet uri:string = appContext.getBaseURI() + `agents/${slugOrURI}/`;\n\t\tif( URI.Util.isAbsolute( slugOrURI ) ) uri = slugOrURI;\n\t\tlet existingAgents:Map <string, PersistedAgent.Class> = this.appContextsAgents.get( appContext.getBaseURI() );\n\t\texistingAgents = typeof existingAgents === \"undefined\" ? new Map<string, PersistedAgent.Class>() : existingAgents;\n\t\treturn appContext.documents.get<PersistedAgent.Class>( uri ).then( ( [agent, response]:[PersistedAgent.Class, HTTP.Response.Class] ) => {\n\t\t\texistingAgents.set( agent.id, agent );\n\t\t\treturn agent;\n\t\t} );\n\t}\n\n\tpublic getAll( appContext:App.Context, limit?:number, page?:number, orderBy?:string, ascending:boolean = true ):Promise<PersistedAgent.Class[]> {\n\t\tlet uri:string = appContext.getBaseURI() + \"agents/\",\n\t\t\texistingAgents:Map <string, PersistedAgent.Class> = this.appContextsAgents.get( appContext.getBaseURI() );\n\t\texistingAgents = typeof existingAgents === \"undefined\" ? new Map<string, PersistedAgent.Class>() : existingAgents;\n\n\t\tlet preferences:RetrievalPreferences = {},\n\t\t\tproperty:OrderByProperty,\n\t\t\tname:OrderByProperty = {\n\t\t\t\t\"@id\": NS.CS.Predicate.namae,\n\t\t\t\t\"@type\": \"string\",\n\t\t\t},\n\t\t\temail:OrderByProperty = {\n\t\t\t\t\"@id\": NS.VCARD.Predicate.email,\n\t\t\t\t\"@type\": \"string\",\n\t\t\t},\n\t\t\tcreated:OrderByProperty = {\n\t\t\t\t\"@id\": NS.C.Predicate.created,\n\t\t\t\t\"@type\": \"dateTime\",\n\t\t\t},\n\t\t\tmodified:OrderByProperty = {\n\t\t\t\t\"@id\": NS.C.Predicate.modified,\n\t\t\t\t\"@type\": \"dateTime\",\n\t\t\t};\n\t\tswitch( orderBy ) {\n\t\t\tcase \"name\":\n\t\t\t\tproperty = name;\n\t\t\t\tbreak;\n\t\t\tcase \"email\":\n\t\t\t\tproperty = email;\n\t\t\t\tbreak;\n\t\t\tcase \"created\":\n\t\t\t\tproperty = created;\n\t\t\t\tbreak;\n\t\t\tcase \"modified\":\n\t\t\t\tproperty = modified;\n\t\t\t\tbreak;\n\t\t}\n\t\tif( ! orderBy ) preferences.orderBy = [ property ];\n\t\tif( ! ascending ) property[ \"@id\" ] = \"-\" + property[ \"@id\" ];\n\t\tif( typeof limit !== \"undefined\" ) preferences.limit = limit;\n\t\tif( typeof page !== \"undefined\" ) preferences.offset = page * limit;\n\n\n\t\treturn this.carbon.documents.getMembers<PersistedAgent.Class>( uri, false, preferences ).then( ( [agents, response]:[PersistedAgent.Class[], HTTP.Response.Class] ) => {\n\t\t\tagents.filter( ( agent:PersistedAgent.Class ) => ! existingAgents.has( agent.id ) )\n\t\t\t\t.forEach( ( agent:PersistedAgent.Class ) => existingAgents.set( agent.id, agent ) );\n\n\t\t\tlet agentsArray:PersistedAgent.Class[] = Utils.A.from( existingAgents.values() );\n\t\t\tif( orderBy ) agentsArray = this.getSortedAgents( agentsArray, orderBy, ascending );\n\n\t\t\treturn agentsArray;\n\t\t} );\n\t}\n\n\tpublic getNumberOfAgents( appContext:App.Context ):Promise<number> {\n\t\tlet agentsURI:string = appContext.getBaseURI() + \"agents/\",\n\t\t\tquery:string = `SELECT DISTINCT (COUNT(?agent) AS ?count) WHERE {\n\t\t\t?agent a <https://carbonldp.com/ns/v1/security#Agent> . \n\t\t}`;\n\t\treturn appContext.documents.executeSELECTQuery( agentsURI, query ).then( ( [results,response]:[SPARQL.SELECTResults.Class,HTTP.Response.Class] ) => {\n\t\t\tif( typeof results.bindings[ 0 ] === \"undefined\" ) return 0;\n\t\t\treturn results.bindings[ 0 ][ \"count\" ];\n\t\t} );\n\t}\n\n\tpublic saveAgent( appContext:App.Context, agent:PersistedAgent.Class ):Promise<[PersistedAgent.Class, HTTP.Response.Class]> {\n\t\treturn agent.save();\n\t}\n\n\tpublic saveAndRefreshAgent( appContext:App.Context, agent:PersistedAgent.Class ):Promise<[PersistedAgent.Class, [HTTP.Response.Class,HTTP.Response.Class]]> {\n\t\treturn agent.saveAndRefresh();\n\t}\n\n\tpublic createAgent( appContext:App.Context, agent:Agent.Class, slug?:string ):Promise<[PersistedAgent.Class, HTTP.Response.Class]> {\n\t\tlet agents:Agents.Class = appContext.auth.agents;\n\t\treturn agents.register( agent, slug );\n\t}\n\n\tpublic deleteAgent( appContext:App.Context, agent:Agent.Class, slug?:string ):Promise<HTTP.Response.Class> {\n\t\tlet agents:Agents.Class = appContext.auth.agents;\n\t\treturn agents.delete( agent.id );\n\t}\n\n\tprivate getSortedAgents( agents:PersistedAgent.Class[], orderBy:string, ascending:boolean ):PersistedAgent.Class[] {\n\t\treturn agents.sort( ( agentA, agentB ) => {\n\t\t\tif( typeof agentA[ orderBy ] === \"string\" && typeof agentB[ orderBy ] === \"string\" ) {\n\t\t\t\tif( agentA[ orderBy ].toLowerCase() > agentB[ orderBy ].toLowerCase() ) return ascending ? - 1 : 1;\n\t\t\t\tif( agentA[ orderBy ].toLowerCase() < agentB[ orderBy ].toLowerCase() ) return ascending ? 1 : - 1;\n\t\t\t} else {\n\t\t\t\tif( agentA[ orderBy ] > agentB[ orderBy ] ) return ascending ? - 1 : 1;\n\t\t\t\tif( agentA[ orderBy ] < agentB[ orderBy ] ) return ascending ? 1 : - 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} );\n\t}\n}\n\nexport default AgentsService;"]}