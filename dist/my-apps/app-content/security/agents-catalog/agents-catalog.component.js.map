{"version":3,"sources":["my-apps/app-content/security/agents-catalog/agents-catalog.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAoBA;gBAUC;oBAPQ,WAAM,GAA6B,EAAE,CAAC;oBACtC,YAAO,GAAW,KAAK,CAAC;gBAMhB,CAAC;gBAEjB,yCAAQ,GAAR;oBACC,IAAI,CAAC,UAAU,EAAE,CAAC;gBACnB,CAAC;gBAEO,2CAAU,GAAlB;oBAAA,iBAYC;oBAXA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBAEpB,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM,CAAE,CAAC;oBAGpE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAwB,SAAS,CAAE,CAAC,IAAI,CAAE,UAAE,EAAgE;4BAA/D,cAAM,EAAE,gBAAQ;wBACjG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAE,UAAE,KAA0B,IAAO,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAE,aAAa,CAAE,KAAK,CAAE,CAAC,CAAA,CAAC,CAAC,CAAE,CAAC;wBAChH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;oBACvB,CAAC,CAAE,CAAC;gBACL,CAAC;gBAEO,wCAAO,GAAf,UAAiB,IAAW;oBAC3B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;gBACjC,CAAC;gBAzBD;oBAAC,YAAK,EAAE;kDAAgB,OAAO;0EAAvB;gBAbT;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,mBAAmB;wBAC7B,QAAQ,EAAE,uCAAQ;qBAElB,CAAE;;0CAAA;gBAmCH,6BAAC;YAAD,CAjCA,AAiCC,IAAA;YAjCD,2DAiCC,CAAA;YAED,oBAAe,sBAAsB,EAAC","file":"agents-catalog.component.js","sourcesContent":["import { Component, Input } from \"@angular/core\";\n\nimport * as App from \"carbonldp/App\";\nimport * as Agent from \"carbonldp/Auth/Agent\";\nimport * as PersistedAgent from \"carbonldp/Auth/PersistedAgent\";\nimport * as PersistedDocument from \"carbonldp/PersistedDocument\";\nimport * as Pointer from \"carbonldp/Pointer\";\nimport * as HTTP from \"carbonldp/HTTP\";\nimport * as URI from \"carbonldp/RDF/URI\";\n\nimport \"semantic-ui/semantic\";\n\nimport template from \"./agents-catalog.component.html!\";\n\n@Component( {\n\tselector: \"cp-agents-catalog\",\n\ttemplate: template,\n\t// styles: [ style ],\n} )\n\nexport class AgentsCatalogComponent {\n\n\n\tprivate agents:PersistedDocument.Class[] = [];\n\tprivate loading:boolean = false;\n\n\n\t@Input() appContext:App.Context;\n\n\n\tconstructor() { }\n\n\tngOnInit():void {\n\t\tthis.loadAgents();\n\t}\n\n\tprivate loadAgents():void {\n\t\tthis.loading = true;\n\n\t\tthis.appContext.extendObjectSchema( Agent.RDF_CLASS, Agent.SCHEMA );\n\n\n\t\tthis.appContext.documents.getChildren<PersistedAgent.Class>( \"agents/\" ).then( ( [agents, response]:[PersistedAgent.Class[], HTTP.Response.Class] ) => {\n\t\t\tagents = agents.filter( ( agent:PersistedAgent.Class )=> { return agent.id.indexOf( \"/agents/me/\" ) === - 1 } );\n\t\t\tthis.loading = false;\n\t\t\tthis.agents = agents;\n\t\t\tconsole.log( agents );\n\t\t} );\n\t}\n\n\tprivate getSlug( slug:string ):string {\n\t\treturn URI.Util.getSlug( slug );\n\t}\n}\n\nexport default AgentsCatalogComponent;\n"]}