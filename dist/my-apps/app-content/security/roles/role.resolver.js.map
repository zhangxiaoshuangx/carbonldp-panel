{"version":3,"sources":["my-apps/app-content/security/roles/role.resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAYA;gBAQC,sBAAa,MAAa,EAAE,KAAoB,EAAE,YAAyB,EAAE,iBAAmC,EAAU,QAAiB;oBAAjB,aAAQ,GAAR,QAAQ,CAAS;oBAC1I,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;gBAC5C,CAAC;gBAGD,yJAAyJ;gBACzJ,8BAAO,GAAP,UAAS,KAA4B;oBAArC,iBAsBC;oBArBA,IAAI,IAAI,GAAU,KAAK,CAAC,MAAM,CAAE,WAAW,CAAE,CAAC;oBAC9C,gFAAgF;oBAChF,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAE,IAAI,CAAC,SAAS,EAAE;wBAC5E,aAAa,EAAE;4BACd,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW;4BAClC,OAAO,EAAE,QAAQ;yBACjB;wBACD,WAAW,EAAE;4BACZ,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,SAAS;4BAChC,YAAY,EAAE,MAAM;yBACpB;qBACD,CAAE,CAAC;oBACJ,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAE,CAAC,IAAI,CAAE,UAAE,IAAwB;wBAC9G,MAAM,CAAC,IAAI,CAAC;oBACb,CAAC,CAAE,CAAC,KAAK,CAAE,UAAE,KAAS;wBACrB,IAAI,GAAG,GAAU,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EACpC,YAAY,GAAU,GAAG,CAAC,WAAW,CAAE,GAAG,CAAE,EAC5C,QAAQ,GAAU,GAAG,CAAC,MAAM,CAAE,CAAC,EAAE,YAAY,CAAE,GAAG,iBAAiB,CAAC;wBACrE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAE,QAAQ,CAAE,CAAE,CAAC;wBACrC,MAAM,CAAC,KAAK,CAAC;oBACd,CAAC,CAAE,CAAC;gBACL,CAAC;gBAxCF;oBAAC,iBAAU,EAAE;;gCAAA;gBAyCb,mBAAC;YAAD,CAxCA,AAwCC,IAAA;YAxCD,uCAwCC,CAAA","file":"role.resolver.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, Resolve, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\n\nimport * as Role from \"carbonldp/App/Role\";\nimport * as NS from \"carbonldp/NS\";\nimport * as PersistedRole from \"carbonldp/Auth/PersistedRole\";\n\nimport { RolesService } from \"./roles.service\";\nimport { AppContentService } from \"carbonldp-panel/my-apps/app-content/app-content.service\";\n\n@Injectable()\nexport class RoleResolver implements Resolve<PersistedRole.Class> {\n\n\tprivate router:Router;\n\tprivate activatedRoute:ActivatedRoute;\n\tprivate rolesService:RolesService;\n\tprivate appContentService:AppContentService;\n\n\n\tconstructor( router:Router, route:ActivatedRoute, rolesService:RolesService, appContentService:AppContentService, private location:Location ) {\n\t\tthis.router = router;\n\t\tthis.activatedRoute = route;\n\t\tthis.rolesService = rolesService;\n\t\tthis.appContentService = appContentService;\n\t}\n\n\n\t// TODO: Change the use of location to the righ way of navigate with an activatedRoute, check if this 'bug' has been resolved on further angular versions\n\tresolve( route:ActivatedRouteSnapshot ):Promise<PersistedRole.Class> | PersistedRole.Class {\n\t\tlet slug:string = route.params[ \"role-slug\" ];\n\t\t// TODO: Remove extendObjectSchema when SDK implements description and childRole\n\t\tthis.appContentService.activeApp.context.extendObjectSchema( Role.RDF_CLASS, {\n\t\t\t\"description\": {\n\t\t\t\t\"@id\": NS.CS.Predicate.description,\n\t\t\t\t\"@type\": \"string\"\n\t\t\t},\n\t\t\t\"childRole\": {\n\t\t\t\t\"@id\": NS.CS.Predicate.childRole,\n\t\t\t\t\"@container\": \"@set\"\n\t\t\t}\n\t\t} );\n\t\treturn this.rolesService.get( slug, this.appContentService.activeApp.context ).then( ( role:PersistedRole.Class ) => {\n\t\t\treturn role;\n\t\t} ).catch( ( error:any ):boolean => {\n\t\t\tlet url:string = this.location.path(),\n\t\t\t\tlastSlashIdx:number = url.lastIndexOf( \"/\" ),\n\t\t\t\tfinalURL:string = url.substr( 0, lastSlashIdx ) + \"/role-not-found\";\n\t\t\tthis.router.navigate( [ finalURL ] );\n\t\t\treturn false;\n\t\t} );\n\t}\n}"]}