{"version":3,"sources":["my-apps/app-content/app-content.view.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAgBA;gBASC,wBAAa,MAAa,EAAE,KAAoB,EAAE,oBAAyC;oBAC1F,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;gBAClD,CAAC;gBAED,iCAAQ,GAAR;oBAAA,iBAMC;oBALA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAE,UAAE,IAAsB;wBACzD,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;wBACpB,KAAI,CAAC,oBAAoB,CAAC,MAAM,CAAE,KAAI,CAAC,GAAG,CAAE,CAAC;wBAC7C,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAE,KAAI,CAAC,GAAG,CAAE,CAAC;oBAC/C,CAAC,CAAE,CAAC;gBACL,CAAC;gBA1BF;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,+BAAQ;wBAClB,MAAM,EAAE,CAAE,mCAAK,CAAE;qBACjB,CAAE;;kCAAA;gBA6CH,qBAAC;YAAD,CA5CA,AA4CC,IAAA;YA5CD,2CA4CC,CAAA;YAED,oBAAe,cAAc,EAAC","file":"my-apps/app-content/app-content.view.js","sourcesContent":["import { Component } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\nimport * as CarbonApp from \"carbonldp/App\";\n\nimport { MyAppsSidebarService } from \"./../my-apps-sidebar.service\";\nimport * as App from \"./app\";\n\nimport template from \"./app-content.view.html!\";\nimport style from \"./app-content.view.css!text\";\n\n@Component( {\n\tselector: \"cp-app-content\",\n\ttemplate: template,\n\tstyles: [ style ],\n} )\nexport class AppContentView {\n\n\tprivate app:App.Class;\n\n\tprivate router:Router;\n\tprivate activatedRoute:ActivatedRoute;\n\tprivate myAppsSidebarService:MyAppsSidebarService;\n\n\n\tconstructor( router:Router, route:ActivatedRoute, myAppsSidebarService:MyAppsSidebarService ) {\n\t\tthis.router = router;\n\t\tthis.activatedRoute = route;\n\t\tthis.myAppsSidebarService = myAppsSidebarService;\n\t}\n\n\tngOnInit() {\n\t\tthis.activatedRoute.data.forEach( ( data:{ app:App.Class } ) => {\n\t\t\tthis.app = data.app;\n\t\t\tthis.myAppsSidebarService.addApp( this.app );\n\t\t\tthis.myAppsSidebarService.openApp( this.app );\n\t\t} );\n\t}\n\n\t// resolve( route:ActivatedRouteSnapshot ):any {\n\t// \tlet slug:string = route.params[ \"slug\" ];\n\t// \treturn this.appContextService.get( slug ).then( ( appContext:CarbonApp.Context ):boolean => {\n\t// \t\tthis.app = App.Factory.createFrom( appContext );\n\t// \t\tthis.myAppsSidebarService.addApp( this.app );\n\t// \t\tthis.myAppsSidebarService.openApp( this.app );\n\t// \t\treturn true;\n\t//\n\t// \t} ).catch( ( error:any ):boolean => {\n\t// \t\tthis.timer = 5;\n\t// \t\tlet countDown:any = setInterval( ():boolean => {\n\t// \t\t\tthis.timer --;\n\t// \t\t\tif( this.timer === 0 ) {\n\t// \t\t\t\tthis.router.navigate( [ \"/my-apps/\" ] );\n\t// \t\t\t\tclearInterval( countDown );\n\t// \t\t\t\treturn false;\n\t// \t\t\t}\n\t// \t\t}, 1000 );\n\t// \t\treturn false;\n\t// \t} );\n\t// }\n}\n\nexport default AppContentView;\n"],"sourceRoot":"/source/"}