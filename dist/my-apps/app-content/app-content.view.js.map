{"version":3,"sources":["my-apps/app-content/app-content.view.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAoBA;gBAWC,yIAAyI;gBACzI,wBAAa,MAAa,EAAE,oBAAyC,EAAE,iBAAmC;oBACzG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,iCAAiC;oBACjC,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;oBACjD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;gBAE5C,CAAC;gBAED,yCAAgB,GAAhB;oBAAA,iBAiBC;oBAhBA,mDAAmD;oBACnD,IAAI,IAAI,GAAU,WAAW,CAAC;oBAC9B,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC,IAAI,CAAE,UAAE,UAA4B;wBACtE,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,CAAE,UAAU,CAAE,CAAC;wBAChD,KAAI,CAAC,oBAAoB,CAAC,MAAM,CAAE,KAAI,CAAC,GAAG,CAAE,CAAC;wBAC7C,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAE,KAAI,CAAC,GAAG,CAAE,CAAC;oBAC/C,CAAC,CAAE,CAAC,KAAK,CAAE,UAAE,KAAS;wBACrB,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;wBACf,IAAI,SAAS,GAAO,WAAW,CAAE;4BAChC,KAAI,CAAC,KAAK,EAAG,CAAC;4BACd,EAAE,CAAA,CAAE,KAAI,CAAC,KAAK,KAAK,CAAE,CAAC,CAAC,CAAC;gCACvB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAE,MAAM,CAAE,CAAE,CAAC;gCACnC,aAAa,CAAE,SAAS,CAAE,CAAC;4BAC5B,CAAC;wBACF,CAAC,EAAE,IAAI,CAAE,CAAC;oBACX,CAAC,CAAE,CAAC;gBACL,CAAC;gBA5CF;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,+BAAQ;wBAClB,MAAM,EAAE,CAAE,mCAAK,CAAE;qBAGjB,CAAE;;kCAAA;gBAuCH,qBAAC;YAAD,CAtCA,AAsCC,IAAA;YAtCD,2CAsCC,CAAA;YAED,oBAAe,cAAc,EAAC","file":"my-apps/app-content/app-content.view.js","sourcesContent":["import { Component } from \"@angular/core\";\n//import { ROUTER_DIRECTIVES, RouteConfig, Router, RouterOutlet, RouteParams } from \"@angular/router-deprecated\";\nimport { Router } from \"@angular/router\";\n\nimport * as CarbonApp from \"carbonldp/App\";\n\nimport { MyAppsSidebarService } from \"./../my-apps-sidebar.service\";\nimport { AppContextService } from \"./../app-context.service\";\nimport * as App from \"./app\";\n\nimport template from \"./app-content.view.html!\";\nimport style from \"./app-content.view.css!text\";\n\n@Component( {\n\tselector: \"cp-app-content\",\n\ttemplate: template,\n\tstyles: [ style ],\n\t//directives: [ ROUTER_DIRECTIVES, RouterOutlet ],\n\t//providers: [ AppContextService, ],\n} )\nexport class AppContentView {\n\tapp:App.Class;\n\n\tprivate router:Router;\n\t//private routeParams:RouteParams;\n\n\tprivate myAppsSidebarService:MyAppsSidebarService;\n\tprivate appContextService:AppContextService;\n\n\tprivate timer:number;\n\n\t//constructor( router:Router, routeParams:RouteParams, myAppsSidebarService:MyAppsSidebarService, appContextService:AppContextService ) {\n\tconstructor( router:Router, myAppsSidebarService:MyAppsSidebarService, appContextService:AppContextService ) {\n\t\tthis.router = router;\n\t\t//this.routeParams = routeParams;\n\t\tthis.myAppsSidebarService = myAppsSidebarService;\n\t\tthis.appContextService = appContextService;\n\n\t}\n\n\trouterOnActivate():void {\n\t\t//let slug:string = this.routeParams.get( \"slug\" );\n\t\tlet slug:string = \"test-slug\";\n\t\tthis.appContextService.get( slug ).then( ( appContext:CarbonApp.Context ):void => {\n\t\t\tthis.app = App.Factory.createFrom( appContext );\n\t\t\tthis.myAppsSidebarService.addApp( this.app );\n\t\t\tthis.myAppsSidebarService.openApp( this.app );\n\t\t} ).catch( ( error:any ):void => {\n\t\t\tthis.timer = 5;\n\t\t\tlet countDown:any = setInterval( ():void => {\n\t\t\t\tthis.timer --;\n\t\t\t\tif( this.timer === 0 ) {\n\t\t\t\t\tthis.router.navigate( [ \"List\" ] );\n\t\t\t\t\tclearInterval( countDown );\n\t\t\t\t}\n\t\t\t}, 1000 );\n\t\t} );\n\t}\n}\n\nexport default AppContentView;\n"],"sourceRoot":"/source/"}