{"version":3,"sources":["my-apps/app-content/explorer/document-explorer/blank-nodes/blank-node.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAkBA;gBA2CC,4BAAa,OAAkB;oBAvC/B,UAAK,GAAS,0BAAK,CAAC;oBAEpB,0BAAqB,GAAU,EAAE,CAAC;oBAGlC,wBAAmB,GAAY,EAAE,CAAC;oBAuBzB,eAAU,GAAkB,EAAE,CAAC;oBAC/B,mBAAc,GAAmB,EAAE,CAAC;oBACpC,YAAO,GAAW,IAAI,CAAC;oBACvB,gBAAW,GAAU,EAAE,CAAC;oBAGvB,gBAAW,GAAwB,IAAI,mBAAY,EAAU,CAAC;oBAC9D,wBAAmB,GAAwB,IAAI,mBAAY,EAAU,CAAC;oBACtE,cAAS,GAA8B,IAAI,mBAAY,EAAgB,CAAC;oBAIjF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACxB,CAAC;gBAlCD,sBAAI,+CAAe;yBAiBnB;wBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;oBAC9B,CAAC;yBAnBD,UAAqB,UAAkB;wBACtC,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC;wBACnC,EAAE,CAAA,CAAE,UAAW,CAAC,CAAC,CAAC;4BACjB,EAAE,CAAA,CAAE,CAAE,CAAE,IAAI,CAAC,SAAS,CAAC,IAAK,CAAC,CAAC,CAAC;gCAC9B,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;4BAC9C,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACP,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;4BAC3C,CAAC;4BACD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;wBACvC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACP,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;4BAC/B,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;wBAC7B,CAAC;wBACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;oBACvC,CAAC;;;mBAAA;gBAqBD,4CAAe,GAAf;oBACC,IAAI,CAAC,QAAQ,GAAG,gBAAC,CAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAE,CAAC;gBACjD,CAAC;gBAED,wCAAW,GAAX,UAAa,OAAwC;oBACpD,EAAE,CAAA,CAAE,CAAE,OAAO,CAAE,WAAW,CAAE,CAAC,YAAY,KAAK,OAAO,CAAE,WAAW,CAAE,CAAC,aAAa,CAAG,CAAC,CAAC,CAAC;wBACvF,OAAO,CAAC,GAAG,CAAE,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAE,CAAC;wBAChD,IAAI,CAAC,qBAAqB,GAAG,CAAE,CAAE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAE,CAAE,CAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,GAAG,MAAM,CAAE,GAAG,OAAO,CAAC;wBACvH,EAAE,CAAA,CAAE,CAAE,CAAE,IAAI,CAAC,SAAS,CAAC,OAAQ,CAAC;4BAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;wBACvE,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,qBAAqB,CAAE,CAAE,CAAC;wBACvF,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;wBAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;oBAC5D,CAAC;gBACF,CAAC;gBAED,sCAAS,GAAT,UAAW,EAAS;oBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;gBAC7B,CAAC;gBAED,8CAAiB,GAAjB,UAAmB,EAAS;oBAC3B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;gBACrC,CAAC;gBAED,2CAAc,GAAd,UAAgB,QAAoB,EAAE,KAAY;oBACjD,EAAE,CAAA,CAAE,OAAO,IAAI,CAAC,OAAO,KAAK,WAAY,CAAC;wBAAC,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC;oBAChF,EAAE,CAAA,CAAE,OAAO,QAAQ,CAAC,QAAQ,KAAK,WAAY,CAAC,CAAC,CAAC;wBAC/C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAE,CAAC;oBAC5D,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAE,CAAC;oBACjD,CAAC;oBACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC5H,CAAC;gBAED,2CAAc,GAAd,UAAgB,QAAoB,EAAE,KAAY;oBACjD,EAAE,CAAA,CAAE,OAAO,IAAI,CAAC,OAAO,KAAK,WAAY,CAAC;wBAAC,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC;oBAChF,EAAE,CAAA,CAAE,OAAO,QAAQ,CAAC,KAAK,KAAK,WAAY,CAAC,CAAC,CAAC;wBAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAE,CAAC;wBACnD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;oBACxC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAA,CAAE,OAAO,QAAQ,CAAC,OAAO,KAAK,WAAY,CAAC,CAAC,CAAC;wBACrD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAE,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAE,QAAQ,CAAE,CAAC;oBAC7D,CAAC;oBACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC5H,CAAC;gBAED,wCAAW,GAAX,UAAa,QAAoB,EAAE,KAAY;oBAC9C,EAAE,CAAA,CAAE,OAAO,IAAI,CAAC,OAAO,KAAK,WAAY,CAAC;wBAAC,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC;oBAChF,EAAE,CAAA,CAAE,OAAO,QAAQ,CAAC,KAAK,KAAK,WAAY,CAAC,CAAC,CAAC;wBAC5C,EAAE,CAAA,CAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,QAAQ,CAAC,KAAK,CAAC,IAAK,CAAC,CAAC,CAAC;4BAChD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAE,CAAC;wBAC3D,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACP,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAE,CAAC;4BACnD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAE,CAAC;wBAC7D,CAAC;oBACF,CAAC;oBACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC5H,CAAC;gBAED,2CAAc,GAAd,UAAgB,QAAiB,EAAE,WAAuB;oBAA1D,iBAUC;oBATA,IAAI,WAAW,GAA4B;wBAC1C,KAAK,EAAY;4BAChB,EAAE,EAAE,EAAE;4BACN,IAAI,EAAE,cAAc;4BACpB,KAAK,EAAE,EAAE;yBACT;qBACD,CAAC;oBACF,IAAI,CAAC,cAAc,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAE,CAAC;oBAChD,EAAE,CAAA,CAAE,CAAE,CAAE,IAAI,CAAC,QAAS,CAAC;wBAAC,UAAU,CAAE,cAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,4BAA4B,CAAE,CAAC,KAAK,EAAE,CAAC,UAAU,CAAE,MAAM,CAAE,EAA/E,CAA+E,CAAE,CAAC;gBAC3H,CAAC;gBAED,+CAAkB,GAAlB,UAAoB,MAAU;oBAC7B,IAAI,SAAS,GAAY,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;oBAC/C,4DAA4D;oBAC5D,yCAAyC;oBACzC,EAAE;oBACF,kBAAkB;oBAClB,2EAA2E;oBAC3E,mCAAmC;oBACnC,iDAAiD;oBACjD,OAAO;oBACP,yEAAyE;oBACzE,mCAAmC;oBACnC,6EAA6E;oBAC7E,OAAO;oBACP,2EAA2E;oBAC3E,kCAAkC;oBAClC,OAAO;oBACP,yDAAyD;oBACzD,MAAM,CAAC,SAAS,CAAC;gBAClB,CAAC;gBAED,0CAAa,GAAb,UAAe,SAAsB;oBACpC,IAAI,cAAc,GAAiB,EAAE,EACpC,WAAW,GAAU,SAAS,CAAC,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC;oBACzD,IAAI,eAAe,GAAY,MAAM,CAAC,IAAI,CAAE,SAAS,CAAE,WAAW,CAAE,CAAE,CAAC;oBACvE,eAAe,CAAC,OAAO,CAAE,UAAE,QAAe;wBACzC,cAAc,CAAC,IAAI,CAAe;4BACjC,IAAI,EAAY;gCACf,EAAE,EAAE,QAAQ;gCACZ,IAAI,EAAE,QAAQ;gCACd,KAAK,EAAE,SAAS,CAAE,WAAW,CAAE,CAAE,QAAQ,CAAE;6BAC3C;yBACD,CAAE,CAAC;oBACL,CAAC,CAAE,CAAC;oBAGJ,EAAE,CAAA,CAAE,CAAE,IAAI,CAAC,OAAQ,CAAC;wBAAC,MAAM,CAAC,cAAc,CAAC;oBAC3C,IAAI,GAAU,CAAC;oBACf,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAE,UAAE,QAAQ,EAAE,GAAG;wBAC9C,GAAG,GAAG,cAAc,CAAC,SAAS,CAAE,UAAE,WAAuB,IAAO,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,CAAC,CAAA,CAAC,CAAE,CAAC;wBACvG,cAAc,CAAC,MAAM,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;oBACjC,CAAC,CAAE,CAAC;oBACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE,UAAE,QAAQ,EAAE,GAAG;wBAC5C,GAAG,GAAG,cAAc,CAAC,SAAS,CAAE,UAAE,WAAuB,IAAO,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,CAAC,CAAA,CAAC,CAAE,CAAC;wBACvG,cAAc,CAAC,MAAM,CAAE,GAAG,EAAE,CAAC,EAAE,QAAQ,CAAE,CAAC;oBAC3C,CAAC,CAAE,CAAC;oBACJ,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAE,UAAE,QAAQ,EAAE,GAAG;wBAC9C,cAAc,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAE,CAAC;oBACzC,CAAC,CAAE,CAAC;oBACJ,MAAM,CAAC,cAAc,CAAC;gBACvB,CAAC;gBAED,iDAAoB,GAApB;oBAAA,iBAiBC;oBAhBA,EAAE,CAAA,CAAE,CAAE,IAAI,CAAC,OAAQ,CAAC;wBAAC,MAAM,CAAC;oBAC5B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAE,UAAE,QAAQ,EAAE,GAAG;wBAC9C,OAAO,KAAI,CAAC,aAAa,CAAE,GAAG,CAAE,CAAC;oBAClC,CAAC,CAAE,CAAC;oBACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE,UAAE,QAAQ,EAAE,GAAG;wBAC5C,EAAE,CAAA,CAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,QAAQ,CAAC,IAAK,CAAC,CAAC,CAAC;4BACtD,OAAO,KAAI,CAAC,aAAa,CAAE,GAAG,CAAE,CAAC;4BACjC,KAAI,CAAC,aAAa,CAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;wBACxE,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACP,KAAI,CAAC,aAAa,CAAE,GAAG,CAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;wBACrD,CAAC;oBACF,CAAC,CAAE,CAAC;oBACJ,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAE,UAAE,QAAQ,EAAE,GAAG;wBAC9C,KAAI,CAAC,aAAa,CAAE,GAAG,CAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;oBAClD,CAAC,CAAE,CAAC;oBACJ,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;gBAC9D,CAAC;gBAzJD;oBAAC,YAAK,EAAE;;sEAAA;gBACR;oBAAC,YAAK,EAAE;;0EAAA;gBACR;oBAAC,YAAK,EAAE;;mEAAA;gBACR;oBAAC,YAAK,EAAE;;uEAAA;gBACR;oBAAC,YAAK,EAAE;;qEAAA;gBAER;oBAAC,aAAM,EAAE;;uEAAA;gBACT;oBAAC,aAAM,EAAE;;+EAAA;gBACT;oBAAC,aAAM,EAAE;;qEAAA;gBA/CV;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,eAAe;wBACzB,QAAQ,EAAE,mCAAQ;wBAClB,MAAM,EAAE,CAAE,0BAA0B,CAAE;wBACtC,UAAU,EAAE,CAAE,sCAAiB,CAAE;qBACjC,CAAE;;sCAAA;gBA4LH,yBAAC;YAAD,CA1LA,AA0LC,IAAA;YA1LD,mDA0LC,CAAA;YAUD;gBAAA;gBAGA,CAAC;gBAAD,gBAAC;YAAD,CAHA,AAGC,IAAA;YAHD,iCAGC,CAAA;YACD;gBAAA;oBACC,YAAO,GAA2B,IAAI,GAAG,EAAuB,CAAC;oBACjE,cAAS,GAA2B,IAAI,GAAG,EAAuB,CAAC;oBACnE,cAAS,GAA2B,IAAI,GAAG,EAAuB,CAAC;gBACpE,CAAC;gBAAD,uBAAC;YAAD,CAJA,AAIC,IAAA;YAJD,+CAIC,CAAA;YAED,oBAAe,kBAAkB,EAAC","file":"my-apps/app-content/explorer/document-explorer/blank-nodes/blank-node.component.js","sourcesContent":["import { Component, ElementRef, Input, Output, EventEmitter, AfterViewInit, SimpleChange, OnChanges } from \"@angular/core\";\n\nimport * as RDFNode from \"carbonldp/RDF/RDFNode\";\n\nimport { PropertyComponent, Property, PropertyRow, Modes } from \"./../property/property.component\";\n\nimport $ from \"jquery\";\nimport \"semantic-ui/semantic\";\n\nimport template from \"./blank-node.component.html!\";\n\n@Component( {\n\tselector: \"cp-blank-node\",\n\ttemplate: template,\n\tstyles: [ \":host { display:block; }\" ],\n\tdirectives: [ PropertyComponent ],\n} )\n\nexport class BlankNodeComponent implements AfterViewInit, OnChanges {\n\n\telement:ElementRef;\n\t$element:JQuery;\n\tmodes:Modes = Modes;\n\trecords:BlankNodeRecords;\n\tcopyOrModifiedOrAdded:string = \"\";\n\ttempBlankNode:BlankNodeRow;\n\ttempProperties:PropertyRow[];\n\ttempPropertiesNames:string[] = [];\n\tprivate _bNodeHasChanged:boolean;\n\tset bNodeHasChanged( hasChanged:boolean ) {\n\t\tthis._bNodeHasChanged = hasChanged;\n\t\tif( hasChanged ) {\n\t\t\tif( ! ! this.blankNode.copy ) {\n\t\t\t\tthis.blankNode.modified = this.tempBlankNode;\n\t\t\t} else {\n\t\t\t\tthis.blankNode.added = this.tempBlankNode;\n\t\t\t}\n\t\t\tthis.blankNode.records = this.records;\n\t\t} else {\n\t\t\tdelete this.blankNode.modified;\n\t\t\tdelete this.blankNode.added;\n\t\t}\n\t\tthis.updateTempProperties();\n\t\tthis.onChanges.emit( this.blankNode );\n\t}\n\n\tget bNodeHasChanged() {\n\t\treturn this._bNodeHasChanged;\n\t}\n\n\t@Input() blankNodes:BlankNodeRow[] = [];\n\t@Input() namedFragments:RDFNode.Class[] = [];\n\t@Input() canEdit:boolean = true;\n\t@Input() documentURI:string = \"\";\n\t@Input() blankNode:BlankNodeRow;\n\n\t@Output() onOpenBNode:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onOpenNamedFragment:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onChanges:EventEmitter<BlankNodeRow> = new EventEmitter<BlankNodeRow>();\n\n\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n\n\tngAfterViewInit():void {\n\t\tthis.$element = $( this.element.nativeElement );\n\t}\n\n\tngOnChanges( changes:{[propName:string]:SimpleChange} ):void {\n\t\tif( ( changes[ \"blankNode\" ].currentValue !== changes[ \"blankNode\" ].previousValue ) ) {\n\t\t\tconsole.log( \"Blank Node: %o\", this.blankNode );\n\t\t\tthis.copyOrModifiedOrAdded = ! ! this.blankNode.copy ? ( ! ! this.blankNode.modified ? \"modified\" : \"copy\" ) : \"added\";\n\t\t\tif( ! ! this.blankNode.records ) this.records = this.blankNode.records;\n\t\t\tthis.tempBlankNode = Object.assign( {}, this.blankNode[ this.copyOrModifiedOrAdded ] );\n\t\t\tthis.tempPropertiesNames = Object.keys( this.tempBlankNode );\n\t\t\tthis.tempProperties = this.getProperties( this.blankNode );\n\t\t}\n\t}\n\n\topenBNode( id:string ):void {\n\t\tthis.onOpenBNode.emit( id );\n\t}\n\n\topenNamedFragment( id:string ):void {\n\t\tthis.onOpenNamedFragment.emit( id );\n\t}\n\n\tchangeProperty( property:PropertyRow, index:number ):void {\n\t\tif( typeof this.records === \"undefined\" ) this.records = new BlankNodeRecords();\n\t\tif( typeof property.modified !== \"undefined\" ) {\n\t\t\tthis.records.changes.set( property.modified.id, property );\n\t\t} else {\n\t\t\tthis.records.changes.delete( property.copy.id );\n\t\t}\n\t\tthis.bNodeHasChanged = this.records.changes.size > 0 || this.records.additions.size > 0 || this.records.deletions.size > 0;\n\t}\n\n\tdeleteProperty( property:PropertyRow, index:number ):void {\n\t\tif( typeof this.records === \"undefined\" ) this.records = new BlankNodeRecords();\n\t\tif( typeof property.added !== \"undefined\" ) {\n\t\t\tthis.records.additions.delete( property.added.id );\n\t\t\tthis.tempProperties.splice( index, 1 );\n\t\t} else if( typeof property.deleted !== \"undefined\" ) {\n\t\t\tthis.records.deletions.set( property.deleted.id, property );\n\t\t}\n\t\tthis.bNodeHasChanged = this.records.changes.size > 0 || this.records.additions.size > 0 || this.records.deletions.size > 0;\n\t}\n\n\taddProperty( property:PropertyRow, index:number ):void {\n\t\tif( typeof this.records === \"undefined\" ) this.records = new BlankNodeRecords();\n\t\tif( typeof property.added !== \"undefined\" ) {\n\t\t\tif( property.added.id === property.added.name ) {\n\t\t\t\tthis.records.additions.set( property.added.id, property );\n\t\t\t} else {\n\t\t\t\tthis.records.additions.delete( property.added.id );\n\t\t\t\tthis.records.additions.set( property.added.name, property );\n\t\t\t}\n\t\t}\n\t\tthis.bNodeHasChanged = this.records.changes.size > 0 || this.records.additions.size > 0 || this.records.deletions.size > 0;\n\t}\n\n\tcreateProperty( property:Property, propertyRow:PropertyRow ):void {\n\t\tlet newProperty:PropertyRow = <PropertyRow>{\n\t\t\tadded: <Property>{\n\t\t\t\tid: \"\",\n\t\t\t\tname: \"New Property\",\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t};\n\t\tthis.tempProperties.splice( 1, 0, newProperty );\n\t\tif( ! ! this.$element ) setTimeout( ()=>this.$element.find( \"cp-property.added-property\" ).first().transition( \"drop\" ) );\n\t}\n\n\tgetPropertiesNames( object:any ):string[] {\n\t\tlet tempNames:string[] = Object.keys( object );\n\t\t// console.log( \"Original without records: %o\", tempNames );\n\t\t// if( ! this.records ) return tempNames;\n\t\t//\n\t\t// let idx:number;\n\t\t// this.records.deletions.forEach( ( property:PropertyRow, key:string )=> {\n\t\t// \tidx = tempNames.indexOf( key );\n\t\t// \tif( idx !== - 1 ) tempNames.splice( idx, 1 );\n\t\t// } );\n\t\t// this.records.changes.forEach( ( property:PropertyRow, key:string )=> {\n\t\t// \tidx = tempNames.indexOf( key );\n\t\t// \tif( idx !== - 1 ) tempNames.splice( idx, 1, property.modified[ \"@id\" ] );\n\t\t// } );\n\t\t// this.records.additions.forEach( ( property:PropertyRow, key:string )=> {\n\t\t// \ttempNames.splice( 0, 0, key );\n\t\t// } );\n\t\t// console.log( \"Original with records: %o\", tempNames );\n\t\treturn tempNames;\n\t}\n\n\tgetProperties( blankNode:BlankNodeRow ):PropertyRow[] {\n\t\tlet tempProperties:PropertyRow[] = [],\n\t\t\tcopyOrAdded:string = blankNode.added ? \"added\" : \"copy\";\n\t\tlet propertiesNames:string[] = Object.keys( blankNode[ copyOrAdded ] );\n\t\tpropertiesNames.forEach( ( propName:string )=> {\n\t\t\ttempProperties.push( <PropertyRow>{\n\t\t\t\tcopy: <Property>{\n\t\t\t\t\tid: propName,\n\t\t\t\t\tname: propName,\n\t\t\t\t\tvalue: blankNode[ copyOrAdded ][ propName ]\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\n\t\tif( ! this.records ) return tempProperties;\n\t\tlet idx:number;\n\t\tthis.records.deletions.forEach( ( property, key )=> {\n\t\t\tidx = tempProperties.findIndex( ( propertyRow:PropertyRow )=> { return propertyRow.copy.id === key;} );\n\t\t\ttempProperties.splice( idx, 1 );\n\t\t} );\n\t\tthis.records.changes.forEach( ( property, key )=> {\n\t\t\tidx = tempProperties.findIndex( ( propertyRow:PropertyRow )=> { return propertyRow.copy.id === key;} );\n\t\t\ttempProperties.splice( idx, 1, property );\n\t\t} );\n\t\tthis.records.additions.forEach( ( property, key )=> {\n\t\t\ttempProperties.splice( 0, 0, property );\n\t\t} );\n\t\treturn tempProperties;\n\t}\n\n\tupdateTempProperties():void {\n\t\tif( ! this.records ) return;\n\t\tthis.records.deletions.forEach( ( property, key )=> {\n\t\t\tdelete this.tempBlankNode[ key ];\n\t\t} );\n\t\tthis.records.changes.forEach( ( property, key )=> {\n\t\t\tif( property.modified.id !== property.modified.name ) {\n\t\t\t\tdelete this.tempBlankNode[ key ];\n\t\t\t\tthis.tempBlankNode[ property.modified.name ] = property.modified.value;\n\t\t\t} else {\n\t\t\t\tthis.tempBlankNode[ key ] = property.modified.value;\n\t\t\t}\n\t\t} );\n\t\tthis.records.additions.forEach( ( property, key )=> {\n\t\t\tthis.tempBlankNode[ key ] = property.added.value;\n\t\t} );\n\t\tthis.tempPropertiesNames = Object.keys( this.tempBlankNode );\n\t}\n}\nexport interface BlankNodeRow {\n\tid?:string;\n\tbNodeIdentifier?:string;\n\tcopy?:RDFNode.Class;\n\tadded?:RDFNode.Class;\n\tmodified?:RDFNode.Class;\n\tdeleted?:RDFNode.Class;\n\trecords?:BlankNodeRecords;\n}\nexport class BlankNode {\n\tid:string;\n\tproperties:PropertyRow[];\n}\nexport class BlankNodeRecords {\n\tchanges:Map<string,PropertyRow> = new Map<string, PropertyRow>();\n\tdeletions:Map<string,PropertyRow> = new Map<string, PropertyRow>();\n\tadditions:Map<string,PropertyRow> = new Map<string, PropertyRow>();\n}\n\nexport default BlankNodeComponent;"],"sourceRoot":"/source/"}