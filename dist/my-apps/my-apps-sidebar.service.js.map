{"version":3,"sources":["my-apps/my-apps-sidebar.service.ts"],"names":[],"mappings":"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","file":"my-apps-sidebar.service.js","sourcesContent":["import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { RouterService } from \"carbonldp-panel/router.service\";\r\n\r\nimport { SidebarService, SidebarGroup, SidebarDivider, SidebarSubmenu } from \"./../sidebar.service\";\r\n\r\nimport * as App from \"./app-content/app\";\r\n\r\n@Injectable()\r\nexport class MyAppsSidebarService {\r\n\r\n\t// TODO: Find a more native approach to make this work with different routing levels 'website.com/app-dev/my-apps/slug/...' and 'workbench.com/my-apps/slug/...'\r\n\tprivate base:string = \"\";\r\n\tprivate router:Router;\r\n\tprivate routerService:RouterService;\r\n\tprivate sidebarService:SidebarService;\r\n\tprivate openAppsGroup:SidebarGroup;\r\n\tprivate openApps:Map<App.Class, SidebarSubmenu> = new Map<App.Class, SidebarSubmenu>();\r\n\tprivate openAppsDivider:SidebarDivider = {\r\n\t\ttype: \"divider\",\r\n\t\tname: \"Open Apps\",\r\n\t\ticon: \"cubes icon\",\r\n\t\tindex: 0,\r\n\t};\r\n\r\n\tconstructor( router:Router, routerService:RouterService, sidebarService:SidebarService ) {\r\n\t\tthis.router = router;\r\n\t\tthis.routerService = routerService;\r\n\t\tthis.sidebarService = sidebarService;\r\n\t\tthis.base = this.sidebarService.base;\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit():void {\r\n\t\tif( typeof this.openAppsGroup !== \"undefined\" && this.sidebarService.items.findIndex( ( item ) => item === this.openAppsGroup ) !== - 1 ) return;\r\n\t\tthis.openApps.clear();\r\n\t\tthis.openAppsGroup = {\r\n\t\t\ttype: \"group\",\r\n\t\t\tchildren: [],\r\n\t\t\tindex: 100,\r\n\t\t};\r\n\t\tthis.sidebarService.addItem( this.openAppsGroup );\r\n\t}\r\n\r\n\taddApp( app:App.Class ):void {\r\n\t\tif( this.openApps.has( app ) ) return;\r\n\t\tif( this.openApps.size === 0 ) this.addOpenAppsDivider();\r\n\r\n\t\tlet removeAppEmitter:EventEmitter<SidebarGroup> = new EventEmitter<SidebarGroup>();\r\n\t\tremoveAppEmitter.subscribe( () => {\r\n\t\t\tthis.removeApp( app );\r\n\t\t} );\r\n\r\n\t\tlet appSubmenu:SidebarSubmenu = {\r\n\t\t\ttype: \"submenu\",\r\n\t\t\tname: app.name,\r\n\t\t\tcloseable: true,\r\n\t\t\tonClose: removeAppEmitter,\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"link\",\r\n\t\t\t\t\tname: \"Dashboard\",\r\n\t\t\t\t\ticon: \"bar chart icon\",\r\n\t\t\t\t\troute: [ this.base, \"my-apps\", app.slug ],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"link\",\r\n\t\t\t\t\tname: \"Document Explorer\",\r\n\t\t\t\t\ticon: \"list layout icon\",\r\n\t\t\t\t\troute: [ this.base, \"my-apps\", app.slug, \"explore\" ],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"link\",\r\n\t\t\t\t\tname: \"SPARQL Client\",\r\n\t\t\t\t\ticon: \"terminal icon\",\r\n\t\t\t\t\troute: [ this.base, \"my-apps\", app.slug, \"sparql-client\" ],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"link\",\r\n\t\t\t\t\tname: \"Security\",\r\n\t\t\t\t\ticon: \"lock icon\",\r\n\t\t\t\t\troute: [ this.base, \"my-apps\", app.slug, \"security\", \"agents\" ],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"link\",\r\n\t\t\t\t\tname: \"Configuration\",\r\n\t\t\t\t\ticon: \"settings icon\",\r\n\t\t\t\t\troute: [ this.base, \"my-apps\", app.slug, \"configure\" ],\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.openAppsGroup.children.push( appSubmenu );\r\n\t\tthis.openApps.set( app, appSubmenu );\r\n\t}\r\n\r\n\topenApp( app:App.Class ):void {\r\n\t\tif( ! this.openApps.has( app ) ) return;\r\n\r\n\t\tlet appSubmenu:SidebarSubmenu = this.openApps.get( app );\r\n\t\tappSubmenu.open = true;\r\n\t}\r\n\r\n\tcloseApp( app:App.Class ):void {\r\n\t\tif( ! this.openApps.has( app ) ) return;\r\n\r\n\t\tlet appSubmenu:SidebarSubmenu = this.openApps.get( app );\r\n\t\tappSubmenu.open = false;\r\n\t}\r\n\r\n\tremoveApp( app:App.Class ):void {\r\n\t\tif( ! this.openApps.has( app ) ) return;\r\n\r\n\t\tlet appSubmenu:SidebarSubmenu = this.openApps.get( app );\r\n\t\tthis.openAppsGroup.children.splice( this.openAppsGroup.children.indexOf( appSubmenu ), 1 );\r\n\t\tthis.openApps.delete( app );\r\n\r\n\t\tif( this.openApps.size === 0 ) this.removeOpenAppsDivider();\r\n\t\tif( this.routerService.isActive( [ \"my-apps\", app.slug ], false ) ) this.router.navigate( [ \"my-apps\" ] );\r\n\t}\r\n\r\n\tprivate addOpenAppsDivider():void {\r\n\t\tthis.openAppsGroup.children.push( this.openAppsDivider );\r\n\t}\r\n\r\n\tprivate removeOpenAppsDivider():void {\r\n\t\tthis.openAppsGroup.children.splice( this.openAppsGroup.children.indexOf( this.openAppsDivider ), 1 );\r\n\t}\r\n}\r\n\r\nexport default MyAppsSidebarService;\r\n"]}