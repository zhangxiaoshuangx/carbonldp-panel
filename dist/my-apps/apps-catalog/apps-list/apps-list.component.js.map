{"version":3,"sources":["my-apps/apps-catalog/apps-list/apps-list.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuD,eAAe,CAAC,CAAA;AAIvE,QAAO,sBAAsB,CAAC,CAAA;AAO9B;IASC;QAPU,YAAO,GAA2B,IAAI,mBAAY,EAAa,CAAC;QAChE,cAAS,GAA2B,IAAI,mBAAY,EAAa,CAAC;QAE5E,YAAO,GAAY,CAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,CAAE,CAAC;QACvI,iBAAY,GAAU,IAAI,CAAC;QAC3B,cAAS,GAAW,KAAK,CAAC;IAEX,CAAC;IAEhB,sCAAU,GAAV,UAAY,MAAa;QAAzB,iBASC;QARA,EAAE,CAAA,CAAE,IAAI,CAAC,YAAY,KAAK,MAAM,CAAC,KAAM,CAAC;YAAC,IAAI,CAAC,SAAS,GAAG,CAAE,IAAI,CAAC,SAAS,CAAC;QAC3E,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;QAEjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,UAAE,IAAI,EAAE,IAAI;YAC3B,EAAE,CAAA,CAAE,IAAI,CAAE,KAAI,CAAC,YAAY,CAAE,GAAG,IAAI,CAAE,KAAI,CAAC,YAAY,CAAG,CAAC;gBAAC,MAAM,CAAC,KAAI,CAAC,SAAS,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;YAC5F,EAAE,CAAA,CAAE,IAAI,CAAE,KAAI,CAAC,YAAY,CAAE,GAAG,IAAI,CAAE,KAAI,CAAC,YAAY,CAAG,CAAC;gBAAC,MAAM,CAAC,KAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAE,CAAC,CAAC;YAC5F,MAAM,CAAC,CAAC,CAAC;QACV,CAAC,CAAE,CAAC;IACL,CAAC;IAED,qCAAS,GAAT,UAAW,UAAoB;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;IACjC,CAAC;IAED,uCAAW,GAAX,UAAa,UAAoB;QAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;IACnC,CAAC;IA3BD;QAAC,YAAK,EAAE;;mDAAA;IACR;QAAC,aAAM,EAAE;;sDAAA;IACT;QAAC,aAAM,EAAE;;wDAAA;IARV;QAAC,gBAAS,CAAE;YACX,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAE,4BAA4B,CAAE;SAC3C,CAAE;;yBAAA;IA8BH,wBAAC;AAAD,CA7BA,AA6BC,IAAA;AA7BY,yBAAiB,oBA6B7B,CAAA;AAOD;kBAAe,iBAAiB,CAAC","file":"apps-list.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\nimport * as App from \"../../app-content/app\";\n\nimport \"semantic-ui/semantic\";\n\n@Component( {\n\tselector: \"cp-apps-list\",\n\ttemplateUrl: \"./apps-list.component.html\",\n\tstyleUrls: [ \"./apps-list.component.scss\" ],\n} )\nexport class AppsListComponent {\n\t@Input() apps:App.Class[];\n\t@Output() openApp:EventEmitter<App.Class> = new EventEmitter<App.Class>();\n\t@Output() deleteApp:EventEmitter<App.Class> = new EventEmitter<App.Class>();\n\n\theaders:Header[] = [ { name: \"Name\", value: \"name\" }, { name: \"Created\", value: \"created\" }, { name: \"Modified\", value: \"modified\" } ];\n\tsortedColumn:string = null;\n\tascending:boolean = false;\n\n\tconstructor() {}\n\n\tsortColumn( header:Header ):void {\n\t\tif( this.sortedColumn === header.value ) this.ascending = ! this.ascending;\n\t\tthis.sortedColumn = header.value;\n\n\t\tthis.apps.sort( ( appA, appB ) => {\n\t\t\tif( appA[ this.sortedColumn ] > appB[ this.sortedColumn ] ) return this.ascending ? - 1 : 1;\n\t\t\tif( appA[ this.sortedColumn ] < appB[ this.sortedColumn ] ) return this.ascending ? 1 : - 1;\n\t\t\treturn 0;\n\t\t} );\n\t}\n\n\tonOpenApp( appContext:App.Class ):void {\n\t\tthis.openApp.emit( appContext );\n\t}\n\n\tonDeleteApp( appContext:App.Class ):void {\n\t\tthis.deleteApp.emit( appContext );\n\t}\n}\n\nexport interface Header {\n\tname:string;\n\tvalue:string;\n}\n\nexport default AppsListComponent;\n"]}