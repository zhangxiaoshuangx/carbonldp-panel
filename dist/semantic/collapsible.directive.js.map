{"version":3,"sources":["semantic/collapsible.directive.ts"],"names":[],"mappings":"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","file":"collapsible.directive.js","sourcesContent":["import { Directive, ElementRef, ContentChild, HostBinding, HostListener, Input, Output, EventEmitter, AfterContentInit } from \"@angular/core\";\n\n@Directive( {\n\tselector: \".title\"\n} )\nexport class CollapsibleTitleDirective {\n\t@HostBinding( \"class.active\" ) active:boolean = false;\n\telement:ElementRef;\n\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n}\n@Directive( {\n\tselector: \".content\"\n} )\nexport class CollapsibleContentDirective {\n\t@HostBinding( \"class.active\" ) active:boolean = false;\n}\n\n@Directive( {\n\tselector: \"[suiCollapsible]\"\n} )\nexport class CollapsibleDirective implements AfterContentInit {\n\t@ContentChild( CollapsibleContentDirective )\n\tcontent:CollapsibleContentDirective;\n\n\t@ContentChild( CollapsibleTitleDirective )\n\ttitle:CollapsibleTitleDirective;\n\n\t@Output( \"suiActiveChange\" )\n\tactiveChange:EventEmitter<boolean> = new EventEmitter<boolean>();\n\n\telement:ElementRef;\n\n\tget active():boolean {\n\t\treturn this.content ? this.content.active : this._active;\n\t}\n\n\t@Input( \"suiActive\" )\n\tset active( active:boolean ) {\n\t\tif( active === this._active && this._activeJustChanged ) {\n\t\t\tthis._activeJustChanged = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._active = active;\n\t\tif( this.content ) this.content.active = active;\n\t\tif( this.title ) this.title.active = active;\n\n\t\tthis._activeJustChanged = true;\n\t\tthis.activeChange.emit( active );\n\t}\n\n\tprivate _active:boolean;\n\tprivate _activeJustChanged:boolean = false;\n\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n\n\tngAfterContentInit():void {\n\t\tthis.content.active = this._active;\n\t\tthis.title.active = this._active;\n\t}\n\n\t@HostListener( \"click\", [ \"$event\" ] )\n\tonClick( event:MouseEvent ):void {\n\t\tif( event.target === this.title.element.nativeElement || this.title.element.nativeElement.contains( event.target ) ) this.toggleContent();\n\t}\n\n\ttoggleContent():void {\n\t\tthis.active = ! this.active;\n\t}\n}\n\nexport default CollapsibleDirective;\n"]}