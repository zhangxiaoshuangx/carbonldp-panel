{"version":3,"sources":["semantic/collapsible.directive.ts"],"names":[],"mappings":"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","file":"collapsible.directive.js","sourcesContent":["import { Directive, ElementRef, ContentChild, HostBinding, HostListener, Input, Output, EventEmitter, AfterContentInit } from \"@angular/core\";\n\n@Directive( {\n\tselector: \".title\"\n} )\nexport class CollapsibleTitleDirective {\n\t@HostBinding( \"class.active\" ) active:boolean = false;\n\telement:ElementRef;\n\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n}\n@Directive( {\n\tselector: \".content\"\n} )\nexport class CollapsibleContentDirective {\n\t@HostBinding( \"class.active\" ) active:boolean = false;\n}\n\n@Directive( {\n\tselector: \"[suiCollapsible]\"\n} )\nexport class CollapsibleDirective implements AfterContentInit {\n\t@ContentChild( CollapsibleContentDirective )\n\tcontent:CollapsibleContentDirective;\n\n\t@ContentChild( CollapsibleTitleDirective )\n\ttitle:CollapsibleTitleDirective;\n\n\t@Output( \"suiActiveChange\" )\n\tactiveChange:EventEmitter<boolean> = new EventEmitter<boolean>();\n\n\telement:ElementRef;\n\n\tget active():boolean {\n\t\treturn this.content ? this.content.active : this._active;\n\t}\n\n\t@Input( \"suiActive\" )\n\tset active( active:boolean ) {\n\t\tif( active === this._active && this._activeJustChanged ) {\n\t\t\tthis._activeJustChanged = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._active = active;\n\t\tif( this.content ) this.content.active = active;\n\t\tif( this.title ) this.title.active = active;\n\n\t\tthis._activeJustChanged = true;\n\t\tthis.activeChange.emit( active );\n\t}\n\n\tprivate _active:boolean;\n\tprivate _activeJustChanged:boolean = false;\n\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n\n\tngAfterContentInit():void {\n\t\tthis.content.active = this._active;\n\t\tthis.title.active = this._active;\n\t}\n\n\t@HostListener( \"click\", [ \"$event\" ] )\n\tonClick( event:MouseEvent ):void {\n\t\tif( event.target === this.title.element.nativeElement || this.title.element.nativeElement.contains( event.target ) ) this.toggleContent();\n\t}\n\n\ttoggleContent():void {\n\t\tthis.active = ! this.active;\n\t}\n}\n\nexport default CollapsibleDirective;\n"]}