{"version":3,"sources":["semantic/tabs.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAYA;gBAAA;oBAGuB,cAAS,GAAU,CAAC,CAAC;oBACd,oBAAe,GAAwB,IAAI,mBAAY,EAAU,CAAC;oBAEvF,gBAAW,GAAW,KAAK,CAAC;oBAC5B,WAAM,GAAY,EAAE,CAAC;gBAwC9B,CAAC;gBAtCA,0CAAkB,GAAlB;oBACC,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC;oBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;gBAClD,CAAC;gBAED,mCAAW,GAAX,UAAa,OAAsC;oBAClD,EAAE,CAAA,CAAE,WAAW,IAAI,OAAQ,CAAC,CAAC,CAAC;wBAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,IAAI,CAAC,WAAW,CAAE,OAAO,CAAE,WAAW,CAAE,CAAC,YAAY,CAAE,CAAC;oBACzD,CAAC;gBACF,CAAC;gBAED,wCAAgB,GAAhB;oBACC,CAAC,CAAE,cAAc,CAAE,CAAC,QAAQ,EAAE,CAAC;gBAChC,CAAC;;gBAED,oCAAY,GAAZ;oBACC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,EAAT,CAAS,CAAE,CAAC,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,EAAT,CAAS,CAAE,CAAC;gBACtF,CAAC;gBAED,mCAAW,GAAX,UAAa,KAAgB;oBAA7B,iBAWC;oBAXY,qBAAgB,GAAhB,SAAgB;oBAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBAEvB,EAAE,CAAA,CAAE,IAAI,CAAC,IAAK,CAAC,CAAC,CAAC;wBAChB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE,UAAE,GAAG,EAAE,KAAK;4BACxC,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,SAAS,KAAK,KAAK,CAAC;wBACvC,CAAC,CAAE,CAAC;oBACL,CAAC;oBAED,EAAE,CAAA,CAAE,CAAE,IAAI,CAAC,WAAY,CAAC;wBAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;oBAC5D,IAAI;wBAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC/B,CAAC;gBAED,oCAAY,GAAZ,UAAc,UAAiB;oBAC9B,IAAI,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC;gBAChC,CAAC;gBA7CD;oBAAC,sBAAe,CAAE,4BAAY,CAAE;;2DAAA;gBAEhC;oBAAC,YAAK,CAAE,WAAW,CAAE;;gEAAA;gBACrB;oBAAC,aAAM,CAAE,iBAAiB,CAAE;;sEAAA;gBAT7B;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,6BAAQ;wBAClB,MAAM,EAAE,CAAE,iCAAK,CAAE;qBACjB,CAAE;;iCAAA;gBAgDH,oBAAC;YAAD,CA/CA,AA+CC,IAAA;YA/CD,yCA+CC,CAAA;YAGD,oBAAe,aAAa,EAAC","file":"tabs.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, ContentChildren, QueryList, AfterContentInit, OnChanges, SimpleChange } from \"@angular/core\";\n\nimport { TabComponent } from \"./tab.component\";\n\nimport template from \"./tabs.component.html!\";\nimport style from \"./tabs.component.css!text\";\n\n@Component( {\n\tselector: \"sui-tabs\",\n\ttemplate: template,\n\tstyles: [ style ],\n} )\nexport class TabsComponent implements AfterContentInit, OnChanges {\n\t@ContentChildren( TabComponent ) tabs:QueryList<TabComponent>;\n\n\t@Input( \"activeTab\" ) activeTab:number = 0;\n\t@Output( \"activeTabChange\" ) activeTabChange:EventEmitter<number> = new EventEmitter<number>();\n\n\tprivate justChanged:boolean = false;\n\tprivate titles:string[] = [];\n\n\tngAfterContentInit():void {\n\t\tthis.reloadTitles();\n\t\tthis.activateTab( 0 );\n\t\tthis.activateDropdown();\n\t\tthis.tabs.changes.subscribe( this.reloadTitles );\n\t}\n\n\tngOnChanges( changes:{ [key:string]:SimpleChange; } ):void {\n\t\tif( \"activeTab\" in changes ) {\n\t\t\tthis.justChanged = true;\n\t\t\tthis.activateTab( changes[ \"activeTab\" ].currentValue );\n\t\t}\n\t}\n\n\tactivateDropdown():void {\n\t\t$( \".ui.dropdown\" ).dropdown();\n\t};\n\n\treloadTitles():void {\n\t\tthis.titles = this.tabs.toArray().filter( tab => tab.title ).map( tab => tab.title );\n\t}\n\n\tactivateTab( index:number = 0 ):void {\n\t\tthis.activeTab = index;\n\n\t\tif( this.tabs ) {\n\t\t\tthis.tabs.toArray().forEach( ( tab, index ) => {\n\t\t\t\ttab.active = this.activeTab === index;\n\t\t\t} );\n\t\t}\n\n\t\tif( ! this.justChanged ) this.activeTabChange.emit( index );\n\t\telse this.justChanged = false;\n\t}\n\n\tonTitleClick( titleIndex:number ):void {\n\t\tthis.activateTab( titleIndex );\n\t}\n}\n\n\nexport default TabsComponent;\n"]}