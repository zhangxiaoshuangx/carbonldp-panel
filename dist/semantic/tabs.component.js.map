{"version":3,"sources":["semantic/tabs.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA8I;AAE9I,iDAA+C;AAO/C,IAAa,aAAa;IAL1B;QAQuB,cAAS,GAAU,CAAC,CAAC;QACd,oBAAe,GAAwB,IAAI,mBAAY,EAAU,CAAC;QAEvF,gBAAW,GAAW,KAAK,CAAC;QAC5B,WAAM,GAAY,EAAE,CAAC;IAwC9B,CAAC;IAtCA,0CAAkB,GAAlB;QACC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;IAClD,CAAC;IAED,mCAAW,GAAX,UAAa,OAAsC;QAClD,EAAE,CAAA,CAAE,WAAW,IAAI,OAAQ,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,WAAW,CAAE,OAAO,CAAE,WAAW,CAAE,CAAC,YAAY,CAAE,CAAC;QACzD,CAAC;IACF,CAAC;IAED,wCAAgB,GAAhB;QACC,CAAC,CAAE,cAAc,CAAE,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;IAAA,CAAC;IAEF,oCAAY,GAAZ;QACC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,EAAT,CAAS,CAAE,CAAC,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,EAAT,CAAS,CAAE,CAAC;IACtF,CAAC;IAED,mCAAW,GAAX,UAAa,KAAgB;QAA7B,iBAWC;QAXY,sBAAA,EAAA,SAAgB;QAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,EAAE,CAAA,CAAE,IAAI,CAAC,IAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE,UAAE,GAAG,EAAE,KAAK;gBACxC,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,CAAC,CAAE,CAAC;QACL,CAAC;QAED,EAAE,CAAA,CAAE,CAAE,IAAI,CAAC,WAAY,CAAC;YAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAC5D,IAAI;YAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,oCAAY,GAAZ,UAAc,UAAiB;QAC9B,IAAI,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC;IAChC,CAAC;IACF,oBAAC;AAAD,CA/CA,AA+CC,IAAA;AA9CiC;IAAhC,sBAAe,CAAE,4BAAY,CAAE;8BAAM,gBAAS;2CAAe;AAExC;IAArB,YAAK,CAAE,WAAW,CAAE;;gDAAsB;AACd;IAA5B,aAAM,CAAE,iBAAiB,CAAE;8BAAiB,mBAAY;sDAAsC;AAJnF,aAAa;IALzB,gBAAS,CAAE;QACX,QAAQ,EAAE,UAAU;QACpB,WAAW,EAAE,uBAAuB;QACpC,SAAS,EAAE,CAAG,uBAAuB,CAAG;KACxC,CAAE;GACU,aAAa,CA+CzB;AA/CY,sCAAa;;AAkD1B,kBAAe,aAAa,CAAC","file":"tabs.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, ContentChildren, QueryList, AfterContentInit, OnChanges, SimpleChange } from \"@angular/core\";\n\nimport { TabComponent } from \"./tab.component\";\n\n@Component( {\n\tselector: \"sui-tabs\",\n\ttemplateUrl: \"./tabs.component.html\",\n\tstyleUrls: [  \"./tabs.component.scss\"  ],\n} )\nexport class TabsComponent implements AfterContentInit, OnChanges {\n\t@ContentChildren( TabComponent ) tabs:QueryList<TabComponent>;\n\n\t@Input( \"activeTab\" ) activeTab:number = 0;\n\t@Output( \"activeTabChange\" ) activeTabChange:EventEmitter<number> = new EventEmitter<number>();\n\n\tprivate justChanged:boolean = false;\n\tprivate titles:string[] = [];\n\n\tngAfterContentInit():void {\n\t\tthis.reloadTitles();\n\t\tthis.activateTab( 0 );\n\t\tthis.activateDropdown();\n\t\tthis.tabs.changes.subscribe( this.reloadTitles );\n\t}\n\n\tngOnChanges( changes:{ [key:string]:SimpleChange; } ):void {\n\t\tif( \"activeTab\" in changes ) {\n\t\t\tthis.justChanged = true;\n\t\t\tthis.activateTab( changes[ \"activeTab\" ].currentValue );\n\t\t}\n\t}\n\n\tactivateDropdown():void {\n\t\t$( \".ui.dropdown\" ).dropdown();\n\t};\n\n\treloadTitles():void {\n\t\tthis.titles = this.tabs.toArray().filter( tab => tab.title ).map( tab => tab.title );\n\t}\n\n\tactivateTab( index:number = 0 ):void {\n\t\tthis.activeTab = index;\n\n\t\tif( this.tabs ) {\n\t\t\tthis.tabs.toArray().forEach( ( tab, index ) => {\n\t\t\t\ttab.active = this.activeTab === index;\n\t\t\t} );\n\t\t}\n\n\t\tif( ! this.justChanged ) this.activeTabChange.emit( index );\n\t\telse this.justChanged = false;\n\t}\n\n\tonTitleClick( titleIndex:number ):void {\n\t\tthis.activateTab( titleIndex );\n\t}\n}\n\n\nexport default TabsComponent;\n"]}