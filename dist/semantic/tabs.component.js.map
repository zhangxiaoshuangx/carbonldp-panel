{"version":3,"sources":["semantic/tabs.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;YAeA;gBAAA;oBAGS,WAAM,GAAY,EAAE,CAAC;gBAwB9B,CAAC;gBArBA,0CAAkB,GAAlB;oBACC,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC;oBAEtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;gBAClD,CAAC;gBAED,oCAAY,GAAZ;oBACC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,EAAT,CAAS,CAAE,CAAC,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,EAAT,CAAS,CAAE,CAAC;gBACtF,CAAC;gBAED,mCAAW,GAAX,UAAa,KAAgB;oBAA7B,iBAKC;oBALY,qBAAgB,GAAhB,SAAgB;oBAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE,UAAE,GAAG,EAAE,KAAK;wBACxC,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,SAAS,KAAK,KAAK,CAAC;oBACvC,CAAC,CAAE,CAAC;gBACL,CAAC;gBAED,oCAAY,GAAZ,UAAc,UAAiB;oBAC9B,IAAI,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC;gBAChC,CAAC;gBAzBD;oBAAC,sBAAe,CAAE,4BAAY,CAAE;;2DAAA;gBAPjC;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,6BAAQ;wBAClB,MAAM,EAAE,CAAE,2BAA2B,CAAE;wBACvC,UAAU,EAAE,CAAE,4BAAY,CAAE;qBAC5B,CAAE;;iCAAA;gBA4BH,oBAAC;YAAD,CA3BA,AA2BC,IAAA;YA3BD,yCA2BC,CAAA;YAGD,oBAAe,aAAa,EAAC","file":"semantic/tabs.component.js","sourcesContent":["import {Component, ElementRef, ContentChildren, QueryList, AfterContentInit} from \"@angular/core\";\n\nimport {TabComponent} from \"./tab.component\";\n\nimport $ from \"jquery\";\nimport \"semantic-ui/semantic\";\n\nimport template from \"./tabs.component.html!\";\n\n@Component( {\n\tselector: \"sui-tabs\",\n\ttemplate: template,\n\tstyles: [ \":host { display:block; } \" ],\n\tdirectives: [ TabComponent ],\n} )\nexport class TabsComponent implements AfterContentInit {\n\t@ContentChildren( TabComponent ) tabs:QueryList<TabComponent>;\n\n\tprivate titles:string[] = [];\n\tprivate activeTab:number;\n\n\tngAfterContentInit():void {\n\t\tthis.reloadTitles();\n\t\tthis.activateTab( 0 );\n\n\t\tthis.tabs.changes.subscribe( this.reloadTitles );\n\t}\n\n\treloadTitles():void {\n\t\tthis.titles = this.tabs.toArray().filter( tab => tab.title ).map( tab => tab.title );\n\t}\n\n\tactivateTab( index:number = 0 ):void {\n\t\tthis.activeTab = index;\n\t\tthis.tabs.toArray().forEach( ( tab, index ) => {\n\t\t\ttab.active = this.activeTab === index;\n\t\t} );\n\t}\n\n\tonTitleClick( titleIndex:number ):void {\n\t\tthis.activateTab( titleIndex );\n\t}\n}\n\n\nexport default TabsComponent;\n"],"sourceRoot":"/source/"}