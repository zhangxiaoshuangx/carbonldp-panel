{"version":3,"sources":["document-explorer/named-fragments/named-fragment.component.ts"],"names":[],"mappings":"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","file":"named-fragment.component.js","sourcesContent":["import { Component, ElementRef, Input, Output, EventEmitter, AfterViewInit } from \"@angular/core\";\n\nimport * as RDFNode from \"carbonldp/RDF/RDFNode\";\n\nimport { BlankNodeRow } from \"./../blank-nodes/blank-node.component\";\nimport { Property, PropertyRow, Modes } from \"./../property/property.component\";\n\nimport $ from \"jquery\";\nimport \"semantic-ui/semantic\";\n\nimport template from \"./named-fragment.component.html!\";\n\n@Component( {\n\tselector: \"cp-named-fragment\",\n\ttemplate: template,\n\tstyles: [ \":host { display:block; }\" ],\n} )\n\nexport class NamedFragmentComponent implements AfterViewInit {\n\n\telement:ElementRef;\n\t$element:JQuery;\n\tmodes:Modes = Modes;\n\trecords:NamedFragmentRecords;\n\tcopyOrAdded:string = \"\";\n\ttempPropertiesNames:string[] = [];\n\n\trootNode:RDFNode.Class;\n\tproperties:PropertyRow[];\n\texistingPropertiesNames:string[] = [];\n\n\tprivate _namedFragmentHasChanged:boolean;\n\tset namedFragmentHasChanged( hasChanged:boolean ) {\n\t\tthis._namedFragmentHasChanged = hasChanged;\n\t\tdelete this.namedFragment.modified;\n\t\tdelete this.namedFragment.records;\n\t\tthis.namedFragment.name = this.namedFragment.id;\n\t\tif( hasChanged ) {\n\t\t\tthis.namedFragment.records = this.records;\n\t\t\tif( typeof this.namedFragment.added !== \"undefined\" ) this.namedFragment.added = this.getRawVersion();\n\t\t\telse this.namedFragment.modified = this.getRawVersion();\n\t\t}\n\t\tthis.onChanges.emit( this.records );\n\t}\n\n\tget namedFragmentHasChanged() {\n\t\treturn this.namedFragmentHasChanged;\n\t}\n\n\t@Input() blankNodes:BlankNodeRow[] = [];\n\t@Input() namedFragments:NamedFragmentRow[] = [];\n\t@Input() canEdit:boolean = true;\n\t@Input() documentURI:string = \"\";\n\n\tprivate _namedFragment:NamedFragmentRow;\n\t@Input() set namedFragment( namedFragment:NamedFragmentRow ) {\n\t\tthis._namedFragment = namedFragment;\n\t\tthis.rootNode = namedFragment.copy;\n\t\tif( ! ! namedFragment.records ) this.records = namedFragment.records;\n\t\tthis.getProperties();\n\t}\n\n\tget namedFragment():NamedFragmentRow { return this._namedFragment; }\n\n\t@Output() onOpenBlankNode:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onOpenNamedFragment:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onChanges:EventEmitter<NamedFragmentRow> = new EventEmitter<NamedFragmentRow>();\n\n\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n\n\tngAfterViewInit():void {\n\t\tthis.$element = $( this.element.nativeElement );\n\t}\n\n\topenBlankNode( id:string ):void {\n\t\tthis.onOpenBlankNode.emit( id );\n\t}\n\n\topenNamedFragment( id:string ):void {\n\t\tthis.onOpenNamedFragment.emit( id );\n\t}\n\n\tchangeProperty( property:PropertyRow, index:number ):void {\n\t\tif( typeof this.records === \"undefined\" ) this.records = new NamedFragmentRecords();\n\t\tif( typeof property.modified !== \"undefined\" ) {\n\t\t\tthis.records.changes.set( property.modified.id, property );\n\t\t} else if( typeof property.added === \"undefined\" ) {\n\t\t\tthis.records.changes.delete( property.copy.id );\n\t\t}\n\t\tif( typeof property.added !== \"undefined\" ) {\n\t\t\tthis.records.additions.delete( property.added.id );\n\t\t\tproperty.added.id = property.added.name;\n\t\t\tthis.records.additions.set( property.added.id, property );\n\t\t}\n\t\tthis.updateExistingProperties();\n\t}\n\n\tdeleteProperty( property:PropertyRow, index:number ):void {\n\t\tif( typeof this.records === \"undefined\" ) this.records = new NamedFragmentRecords();\n\t\tif( typeof property.added !== \"undefined\" ) {\n\t\t\tthis.records.additions.delete( property.added.id );\n\t\t\tthis.properties.splice( index, 1 );\n\t\t} else if( typeof property.deleted !== \"undefined\" ) {\n\t\t\tthis.records.deletions.set( property.deleted.id, property );\n\t\t}\n\t\tthis.updateExistingProperties();\n\t}\n\n\taddProperty( property:PropertyRow, index:number ):void {\n\t\tif( typeof this.records === \"undefined\" ) this.records = new NamedFragmentRecords();\n\t\tif( typeof property.added !== \"undefined\" ) {\n\t\t\tif( property.added.id === property.added.name ) {\n\t\t\t\tthis.records.additions.set( property.added.id, property );\n\t\t\t} else {\n\t\t\t\tthis.records.additions.delete( property.added.id );\n\t\t\t\tproperty.added.id = property.added.name;\n\t\t\t\tthis.records.additions.set( property.added.name, property );\n\t\t\t}\n\t\t}\n\t\tthis.updateExistingProperties();\n\t}\n\n\tcreateProperty( property:Property, propertyRow:PropertyRow ):void {\n\t\tlet numberOfProperty:number = ! ! this.records ? (this.records.additions.size + 1) : 1;\n\t\tlet newProperty:PropertyRow = {\n\t\t\tadded: <Property>{\n\t\t\t\tid: \"\",\n\t\t\t\tname: \"http://www.example.com#New Property \" + numberOfProperty,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisBeingCreated: true,\n\t\t\tisBeingModified: false,\n\t\t\tisBeingDeleted: false\n\t\t};\n\t\tthis.properties.splice( 1, 0, newProperty );\n\t\t// Animates created property\n\t\tsetTimeout( ()=> {\n\t\t\tlet createdPropertyComponent:JQuery = this.$element.find( \"cp-property.added-property\" ).first();\n\t\t\tcreatedPropertyComponent.addClass( \"transition hidden\" );\n\t\t\tcreatedPropertyComponent.transition( { animation: \"drop\" } );\n\t\t} );\n\t}\n\n\tgetProperties():void {\n\t\tthis.updateExistingProperties();\n\t}\n\n\tupdateExistingProperties():void {\n\t\tthis.properties = [];\n\t\tthis.existingPropertiesNames = Object.keys( this.rootNode );\n\t\tthis.existingPropertiesNames.forEach( ( propName:string )=> {\n\t\t\tthis.properties.push( {\n\t\t\t\tcopy: {\n\t\t\t\t\tid: propName,\n\t\t\t\t\tname: propName,\n\t\t\t\t\tvalue: this.rootNode[ propName ]\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t\tif( ! this.records ) return;\n\t\tthis.records.additions.forEach( ( value, key )=> {\n\t\t\tthis.existingPropertiesNames.push( key );\n\t\t\tthis.properties.splice( 1, 0, value );\n\t\t} );\n\t\tlet idx:number;\n\t\tthis.records.changes.forEach( ( value, key )=> {\n\t\t\tif( value.modified.id !== value.modified.name ) {\n\t\t\t\tidx = this.existingPropertiesNames.indexOf( value.modified.id );\n\t\t\t\tif( idx !== - 1 ) this.existingPropertiesNames.splice( idx, 1, value.modified.name );\n\t\t\t}\n\t\t\tidx = this.properties.findIndex( ( property:PropertyRow )=> { return ! ! property.copy && property.copy.id === key} );\n\t\t\tif( idx !== - 1 ) this.properties.splice( idx, 1, value );\n\t\t} );\n\t\tthis.records.deletions.forEach( ( value, key )=> {\n\t\t\tidx = this.existingPropertiesNames.indexOf( key );\n\t\t\tif( idx !== - 1 ) this.existingPropertiesNames.splice( idx, 1 );\n\n\t\t\tidx = this.properties.findIndex( ( property:PropertyRow )=> { return ! ! property.copy && property.copy.id === key} );\n\t\t\tif( idx !== - 1 ) this.properties.splice( idx, 1 );\n\t\t} );\n\t\tthis.namedFragmentHasChanged = this.records.changes.size > 0 || this.records.additions.size > 0 || this.records.deletions.size > 0;\n\t}\n\n\tgetRawVersion():RDFNode.Class {\n\t\tlet rawNode:RDFNode.Class = Object.assign( {}, this.namedFragment.added ? this.namedFragment.added : this.namedFragment.copy );\n\t\tthis.records.deletions.forEach( ( property, key )=> {\n\t\t\tdelete rawNode[ key ];\n\t\t} );\n\t\tthis.records.changes.forEach( ( property, key )=> {\n\t\t\tif( property.modified.id === \"@id\" ) this.namedFragment.name = property.modified.value;\n\t\t\tif( property.modified.id !== property.modified.name ) {\n\t\t\t\tdelete rawNode[ key ];\n\t\t\t\trawNode[ property.modified.name ] = property.modified.value;\n\t\t\t} else {\n\t\t\t\trawNode[ key ] = property.modified.value;\n\t\t\t}\n\t\t} );\n\t\tthis.records.additions.forEach( ( property, key )=> {\n\t\t\tif( property.added.id === \"@id\" ) this.namedFragment.name = property.modified.value;\n\t\t\trawNode[ key ] = property.added.value;\n\t\t} );\n\t\treturn rawNode;\n\t}\n}\nexport interface NamedFragmentRow {\n\tid?:string;\n\tname?:string;\n\n\tcopy?:RDFNode.Class;\n\tadded?:RDFNode.Class;\n\tmodified?:RDFNode.Class;\n\tdeleted?:RDFNode.Class;\n\n\trecords?:NamedFragmentRecords;\n}\nexport class NamedFragmentRecords {\n\tchanges:Map<string,PropertyRow> = new Map<string, PropertyRow>();\n\tdeletions:Map<string,PropertyRow> = new Map<string, PropertyRow>();\n\tadditions:Map<string,PropertyRow> = new Map<string, PropertyRow>();\n}\n\nexport default NamedFragmentComponent;\n"]}