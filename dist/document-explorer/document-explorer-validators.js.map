{"version":3,"sources":["document-explorer/document-explorer-validators.ts"],"names":[],"mappings":"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","file":"document-explorer-validators.js","sourcesContent":["import * as NS from \"carbonldp/NS\";\nimport * as Utils from \"carbonldp/Utils\";\nimport * as SDKLiteral from \"carbonldp/RDF/Literal\";\nimport * as URI from \"carbonldp/RDF/URI\";\n\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AbstractControl, Validator, NG_VALIDATORS } from \"@angular/forms\";\n\n@Directive( {\n\tselector: \"[cp-property-name]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: PropertyNameValidator, multi: true } ]\n} )\nexport class PropertyNameValidator implements Validator, OnChanges {\n\t@Input() existingProperties;\n\t@Input() property;\n\t@Input() id;\n\t@Input() originalName;\n\t@Input() control;\n\turl = new RegExp( \"(\\b(https?|ftp|file)://)?[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]\" );\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\n\t\tif( ! ! control ) {\n\t\t\tif( typeof control.value === \"undefined\" || control.value === null || ! control.value ) return null;\n\t\t\tif( this.existingProperties.indexOf( encodeURI( control.value ) ) !== - 1 && (this.property.added ? this.id !== encodeURI( control.value ) : this.originalName !== encodeURI( control.value )) ) return { \"duplicatedPropertyName\": true };\n\t\t\tif( ! this.url.test( control.value ) ) return { \"invalidName\": true };\n\t\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"duplicatedHashtag\": true };\n\t\t}\n\t\treturn null;\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-property-id]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: IdValidator, multi: true } ]\n} )\nexport class IdValidator implements Validator, OnChanges {\n\t@Input() existingFragments;\n\t@Input() property;\n\t@Input() documentURI;\n\t@Input() id;\n\t@Input() originalId;\n\t@Input() control;\n\t// url = new RegExp( \"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\", \"g\" );\n\turl = new RegExp( \"(\\b(https?|ftp|file)://)?[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]\" );\n\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\n\t\tif( ! ! control ) {\n\t\t\tif( typeof control.value === \"undefined\" || control.value === null || ! control.value ) return null;\n\t\t\tif( typeof control.value === \"string\" && ! control.value.startsWith( this.documentURI ) ) return { \"invalidParent\": true };\n\t\t\tif( this.existingFragments.indexOf( control.value ) !== - 1 && (this.property.added ? this.id !== control.value : this.originalId !== control.value) ) return { \"duplicatedNamedFragmentName\": true };\n\t\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"duplicatedHashtag\": true };\n\t\t}\n\t\treturn null;\n\t}\n}\n\n\n@Directive( {\n\tselector: \"[cp-literal-value]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: LiteralValueValidator, multi: true } ]\n} )\n\nexport class LiteralValueValidator implements Validator, OnChanges {\n\t@Input() type;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\t\tlet valid:boolean;\n\t\tswitch( this.type ) {\n\t\t\t// Boolean\n\t\t\tcase NS.XSD.DataType.boolean:\n\t\t\t\tswitch( control.value ) {\n\t\t\t\t\tcase \"true\":\n\t\t\t\t\tcase \"yes\":\n\t\t\t\t\tcase \"y\":\n\t\t\t\t\tcase \"1\":\n\t\t\t\t\tcase \"false\":\n\t\t\t\t\tcase \"no\":\n\t\t\t\t\tcase \"n\":\n\t\t\t\t\tcase \"0\":\n\t\t\t\t\t\tvalid = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// Numbers\n\t\t\tcase NS.XSD.DataType.int :\n\t\t\tcase NS.XSD.DataType.integer :\n\t\t\t\tvalid = ! isNaN( control.value ) && ! isNaN( SDKLiteral.Factory.parse( control.value, this.type ) ) && Utils.isInteger( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\tcase NS.XSD.DataType.byte :\n\t\t\tcase NS.XSD.DataType.decimal :\n\t\t\tcase NS.XSD.DataType.long :\n\t\t\tcase NS.XSD.DataType.negativeInteger :\n\t\t\tcase NS.XSD.DataType.nonNegativeInteger :\n\t\t\tcase NS.XSD.DataType.nonPositiveInteger :\n\t\t\tcase NS.XSD.DataType.positiveInteger :\n\t\t\tcase NS.XSD.DataType.short :\n\t\t\tcase NS.XSD.DataType.unsignedLong :\n\t\t\tcase NS.XSD.DataType.unsignedInt :\n\t\t\tcase NS.XSD.DataType.unsignedShort :\n\t\t\tcase NS.XSD.DataType.unsignedByte :\n\t\t\tcase NS.XSD.DataType.double :\n\t\t\tcase NS.XSD.DataType.float :\n\t\t\t\tvalid = ! isNaN( control.value ) && ! isNaN( SDKLiteral.Factory.parse( control.value, this.type ) ) && Utils.isNumber( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\t// Dates\n\t\t\tcase NS.XSD.DataType.date:\n\t\t\tcase NS.XSD.DataType.dateTime:\n\t\t\tcase NS.XSD.DataType.time:\n\t\t\t\tvalid = Utils.isDate( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\tcase NS.XSD.DataType.string:\n\t\t\t\tvalid = Utils.isString( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalid = Utils.isString( control.value );\n\t\t\t\tbreak;\n\t\t}\n\t\tif( ! valid ) {\n\t\t\treturn { \"invalidTypeError\": true };\n\t\t}\n\t\treturn null;\n\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-pointer-id]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: PointerValidator, multi: true } ]\n} )\nexport class PointerValidator implements Validator {\n\t@Input() documentURI;\n\turl = new RegExp( \"(\\b(https?|ftp|file)://)?[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]\" );\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\t\tif( ! ! control && typeof control.value === \"undefined\" ) {\n\t\t\treturn { \"emptyControl\": true };\n\t\t}\n\t\tif( ! ! control.value ) {\n\t\t\tif( URI.Util.isBNodeID( control.value ) || this.url.test( control.value ) ) return null;\n\t\t\treturn { \"invalidId\": true };\n\t\t}\n\t\treturn null;\n\n\t}\n}"]}