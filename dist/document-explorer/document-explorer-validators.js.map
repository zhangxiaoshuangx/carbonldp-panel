{"version":3,"sources":["document-explorer/document-explorer-validators.ts"],"names":[],"mappings":"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","file":"document-explorer/document-explorer-validators.js","sourcesContent":["import * as NS from \"carbonldp/NS\";\nimport * as Utils from \"carbonldp/Utils\";\nimport * as SDKLiteral from \"carbonldp/RDF/Literal\";\nimport * as URI from \"carbonldp/RDF/URI\";\n\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AbstractControl, Validator, NG_VALIDATORS } from \"@angular/forms\";\n\n@Directive( {\n\tselector: \"[property-name]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: PropertyNameValidator, multi: true } ]\n} )\nexport class PropertyNameValidator implements Validator, OnChanges {\n\t@Input() existingProperties;\n\t@Input() property;\n\t@Input() id;\n\t@Input() originalName;\n\t@Input() control;\n\turl = new RegExp( \"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\", \"g\" );\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\n\t\tif( ! ! control ) {\n\t\t\tif( typeof control.value === \"undefined\" || control.value === null || ! control.value ) return null;\n\t\t\tif( this.existingProperties.indexOf( control.value ) !== - 1 && (this.property.added ? this.id !== control.value : this.originalName !== control.value) ) return { \"duplicatedPropertyName\": true };\n\t\t\tif( ! this.url.test( control.value ) ) return { \"invalidName\": true };\n\t\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"duplicatedHashtag\": true };\n\t\t}\n\t\treturn null;\n\t}\n}\n\n@Directive( {\n\tselector: \"[id-validator]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: IdValidator, multi: true } ]\n} )\nexport class IdValidator implements Validator, OnChanges {\n\t@Input() existingFragments;\n\t@Input() property;\n\t@Input() documentURI;\n\t@Input() id;\n\t@Input() control;\n\turl = new RegExp( \"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\", \"g\" );\n\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\t// if(changes[\"value\"].currentValue) this.control.control.setValue( this.value );\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\n\t\tif( ! ! control ) {\n\t\t\tif( typeof control.value === \"undefined\" || control.value === null || ! control.value ) return null;\n\t\t\tif( typeof control.value === \"string\" && ! control.value.startsWith( this.documentURI ) ) return { \"invalidParent\": true };\n\t\t\tif( this.existingFragments.indexOf( control.value ) !== - 1 && (this.property.added ? this.id !== control.value : true) ) return { \"duplicatedNamedFragmentName\": true };\n\t\t\tif( ! this.url.test( control.value ) ) return { \"invalidValue\": true };\n\t\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"duplicatedHashtag\": true };\n\t\t}\n\t\treturn null;\n\t}\n}\n// private idValidator( control:AbstractControl ):any {\n// \tif( ! ! control ) {\n// \t\tif( typeof control.value === \"undefined\" || control.value === null || ! control.value ) return null;\n// \t\tif( typeof control.value === \"string\" && ! control.value.startsWith( this.documentURI ) ) return { \"invalidParent\": true };\n// \t\tif( this.existingFragments.indexOf( control.value ) !== - 1 && (this.property.added ? this.id !== control.value : this.value !== control.value) ) return { \"duplicatedNamedFragmentName\": true };\n// \t\tlet url = new RegExp( \"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\", \"g\" );\n// \t\tif( ! url.test( control.value ) ) return { \"invalidValue\": true };\n// \t\tif( control.value.split( \"#\" ).length > 2 ) return { \"duplicatedHashtag\": true };\n// \t}\n// \treturn null;\n// }\n// }\n\n\n@Directive( {\n\tselector: \"[literal-value]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: LiteralValueValidator, multi: true } ]\n} )\n\nexport class LiteralValueValidator implements Validator, OnChanges {\n\t@Input() type;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tlet valid:boolean;\n\t\tswitch( this.type ) {\n\t\t\t// Boolean\n\t\t\tcase NS.XSD.DataType.boolean:\n\t\t\t\tswitch( control.value ) {\n\t\t\t\t\tcase \"true\":\n\t\t\t\t\tcase \"yes\":\n\t\t\t\t\tcase \"y\":\n\t\t\t\t\tcase \"1\":\n\t\t\t\t\tcase \"false\":\n\t\t\t\t\tcase \"no\":\n\t\t\t\t\tcase \"n\":\n\t\t\t\t\tcase \"0\":\n\t\t\t\t\t\tvalid = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// Numbers\n\t\t\tcase NS.XSD.DataType.int :\n\t\t\tcase NS.XSD.DataType.integer :\n\t\t\t\tvalid = ! isNaN( control.value ) && ! isNaN( SDKLiteral.Factory.parse( control.value, this.type ) ) && Utils.isInteger( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\tcase NS.XSD.DataType.byte :\n\t\t\tcase NS.XSD.DataType.decimal :\n\t\t\tcase NS.XSD.DataType.long :\n\t\t\tcase NS.XSD.DataType.negativeInteger :\n\t\t\tcase NS.XSD.DataType.nonNegativeInteger :\n\t\t\tcase NS.XSD.DataType.nonPositiveInteger :\n\t\t\tcase NS.XSD.DataType.positiveInteger :\n\t\t\tcase NS.XSD.DataType.short :\n\t\t\tcase NS.XSD.DataType.unsignedLong :\n\t\t\tcase NS.XSD.DataType.unsignedInt :\n\t\t\tcase NS.XSD.DataType.unsignedShort :\n\t\t\tcase NS.XSD.DataType.unsignedByte :\n\t\t\tcase NS.XSD.DataType.double :\n\t\t\tcase NS.XSD.DataType.float :\n\t\t\t\tvalid = ! isNaN( control.value ) && ! isNaN( SDKLiteral.Factory.parse( control.value, this.type ) ) && Utils.isNumber( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\t// Dates\n\t\t\tcase NS.XSD.DataType.date:\n\t\t\tcase NS.XSD.DataType.dateTime:\n\t\t\tcase NS.XSD.DataType.time:\n\t\t\t\tvalid = Utils.isDate( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\tcase NS.XSD.DataType.string:\n\t\t\t\tvalid = Utils.isString( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalid = Utils.isString( control.value );\n\t\t\t\tbreak;\n\t\t}\n\t\tif( ! valid ) {\n\t\t\treturn { \"invalidTypeError\": true };\n\t\t}\n\t\treturn null;\n\n\t}\n}\n\n@Directive( {\n\tselector: \"[pointer-validator]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: PointerValidator, multi: true } ]\n} )\nexport class PointerValidator implements Validator {\n\t@Input() documentURI;\n\turl = new RegExp( \"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\", \"g\" );\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( ! ! control && typeof control.value === \"undefined\" ) {\n\t\t\t//if( ! ! control && (typeof control.value === \"undefined\" || control.value.trim().length === 0) ) {\n\t\t\treturn { \"emptyControl\": true };\n\t\t}\n\t\tif( ! ! control.value ) {\n\t\t\tif( this.url.test( control.value ) ) {\n\t\t\t\tif( ! URI.Util.isBNodeID( control.value ) ) {\n\t\t\t\t\treturn { \"invalidId\": true };\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( typeof control.value === \"string\" && ! control.value.startsWith( this.documentURI ) ) return { \"invalidParent\": true };\n\t\t\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"duplicatedHashtag\": true };\n\t\t\t}\n\t\t}\n\t\treturn null;\n\n\t}\n}"],"sourceRoot":"/source/"}