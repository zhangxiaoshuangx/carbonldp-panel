{"version":3,"sources":["document-explorer/lists/lists.component.ts"],"names":[],"mappings":"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","file":"lists.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\n\nimport * as RDFNode from \"carbonldp/RDF/Node\";\n\nimport { Modes } from \"./../property/property.component\";\nimport { List, ListRow } from \"./list.component\";\n\nimport \"semantic-ui/semantic\";\n\nimport template from \"./lists.component.html!\";\nimport style from \"./lists.component.css!text\";\n\n@Component( {\n\tselector: \"cp-lists\",\n\ttemplate: template,\n\tstyles: [ style ],\n} )\n\nexport class ListsComponent implements OnInit {\n\n\tmodes:Modes = Modes;\n\tcanDisplayLists:boolean = false;\n\n\t@Input() documentURI:string = \"\";\n\t@Input() lists:ListRow[] = [];\n\t@Input() onAddNewList:EventEmitter<boolean> = new EventEmitter<boolean>();\n\t@Input() blankNodes:RDFNode.Class[] = [];\n\t@Input() namedFragments:RDFNode.Class[] = [];\n\t@Input() canEdit:boolean = true;\n\n\t@Output() onListsChanges:EventEmitter<ListRow[]> = new EventEmitter<ListRow[]>();\n\t@Output() onGoToBlankNode:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onGoToNamedFragment:EventEmitter<string> = new EventEmitter<string>();\n\n\tconstructor() { }\n\n\tngOnInit():void {\n\t\tthis.onAddNewList.subscribe( () => {\n\t\t\tthis.addNewList();\n\t\t} );\n\t\tthis.updateCanDisplayLists();\n\t}\n\n\taddNewList():void {\n\t\tlet newListRow:ListRow = <ListRow>{};\n\t\tnewListRow.added = [];\n\t\tnewListRow.isBeingCreated = true;\n\t\tthis.lists.splice( 0, 0, newListRow );\n\t\tthis.saveList( null, null, 0 );\n\t}\n\n\tsaveList( modifiedList:List, originalList:List, index:number ) {\n\t\tif( typeof this.lists[ index ].added !== \"undefined\" ) delete this.lists[ index ].isBeingCreated;\n\t\tthis.onListsChanges.emit( this.lists );\n\t\tthis.updateCanDisplayLists();\n\t}\n\n\tdeleteList( deletingList:ListRow, index:number ):void {\n\t\tif( typeof deletingList.added !== \"undefined\" ) this.lists.splice( index, 1 );\n\t\tthis.onListsChanges.emit( this.lists );\n\t\tthis.updateCanDisplayLists();\n\t}\n\n\tupdateCanDisplayLists():void {\n\t\tthis.canDisplayLists = this.getUntouchedLists().length > 0 || this.getAddedLists().length > 0 || this.getModifiedLists().length > 0;\n\t}\n\n\tgetAddedLists():ListRow[] {\n\t\treturn this.lists.filter( ( list:ListRow ) => typeof list.added !== \"undefined\" );\n\t}\n\n\tgetDeletedLists():ListRow[] {\n\t\treturn this.lists.filter( ( list:ListRow ) => typeof list.deleted !== \"undefined\" );\n\t}\n\n\tgetModifiedLists():ListRow[] {\n\t\treturn this.lists.filter( ( list:ListRow ) => typeof list.modified !== \"undefined\" && typeof list.deleted === \"undefined\" );\n\t}\n\n\tgetUntouchedLists():ListRow[] {\n\t\treturn this.lists.filter( ( list:ListRow ) => typeof list.modified === \"undefined\" && typeof list.deleted === \"undefined\" );\n\t}\n\n\tgoToBlankNode( id:string ):void {\n\t\tthis.onGoToBlankNode.emit( id );\n\t}\n\n\tgoToNamedFragment( id:string ):void {\n\t\tthis.onGoToNamedFragment.emit( id );\n\t}\n}\n\nexport default ListsComponent;"]}