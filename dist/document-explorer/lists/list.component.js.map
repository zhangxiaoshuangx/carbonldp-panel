{"version":3,"sources":["document-explorer/lists/list.component.ts"],"names":[],"mappings":"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","file":"list.component.js","sourcesContent":["import { ElementRef, Component, Input, Output, EventEmitter, AfterViewInit } from \"@angular/core\";\n\nimport \"semantic-ui/semantic\";\n\nimport * as SDKRDFNode from \"carbonldp/RDF/RDFNode\";\nimport * as SDKLiteral from \"carbonldp/RDF/Literal\";\nimport * as RDFNode from \"carbonldp/RDF/RDFNode\";\nimport * as Utils from \"carbonldp/Utils\";\n\nimport { Literal, LiteralRow } from \"./../literals/literal.component\";\nimport { Pointer, PointerRow } from \"./../pointers/pointer.component\";\nimport { Modes } from \"./../property/property.component\";\n\nimport template from \"./list.component.html!\";\nimport style from \"./list.component.css!text\";\n\n@Component( {\n\tselector: \"cp-list\",\n\ttemplate: template,\n\tstyles: [ style ],\n\thost: { \"[class.modified]\": \"list.modified\", \"[class.deleted]\": \"list.deleted\", \"[class.added]\": \"list.added\" },\n} )\n\nexport class ListComponent {\n\n\telement:ElementRef;\n\t$element:JQuery;\n\n\tcopyOrAddedOrModified:string;\n\ttempList:any[] = [];\n\torderHasChanged:boolean = false;\n\n\n\tprivate _list:ListRow;\n\tget list() { return this._list; }\n\n\t@Input() set list( list:ListRow ) {\n\t\tthis.copyOrAddedOrModified = ! ! list.copy ? (! ! list.modified ? \"modified\" : \"copy\") : \"added\";\n\t\tthis._list = list;\n\t\tlist[ this.copyOrAddedOrModified ].forEach( ( literalOrPointer ) => {\n\t\t\t( <Array<any>>this.tempList ).push( Object.assign( {}, literalOrPointer ) );\n\t\t} );\n\t}\n\n\t@Input() documentURI:string = \"\";\n\t@Input() pointers:PointerRow[] = [];\n\t@Input() blankNodes:RDFNode.Class[] = [];\n\t@Input() namedFragments:RDFNode.Class[] = [];\n\n\t@Output() onSave:EventEmitter<ListRow> = new EventEmitter<ListRow>();\n\t@Output() onDeleteList:EventEmitter<ListRow> = new EventEmitter<ListRow>();\n\t@Output() onGoToBlankNode:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onGoToNamedFragment:EventEmitter<string> = new EventEmitter<string>();\n\n\theaders:string[] = [];\n\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n\n\tngAfterViewInit():void {\n\t\tthis.$element = $( this.element.nativeElement );\n\t\tthis.initializeDeletionDimmer();\n\t}\n\n\tisLiteral( item:any ):boolean {\n\t\treturn SDKLiteral.Factory.is( item[ ! ! item.copy ? (! ! item.modified ? \"modified\" : \"copy\") : \"added\" ] );\n\t}\n\n\tisPointer( item:any ):boolean {\n\t\treturn SDKRDFNode.Factory.is( item[ ! ! item.copy ? (! ! item.modified ? \"modified\" : \"copy\") : \"added\" ] );\n\t}\n\n\tmoveUp( pointerOrLiteral:PointerRow | LiteralRow, index:number ):void {\n\t\tthis.tempList.splice( index, 1 );\n\t\tthis.tempList.splice( index - 1, 0, pointerOrLiteral );\n\t\tif( typeof this.list.copy === \"undefined\" ) return;\n\t\tthis.orderHasChanged = ! this.areEquals( this.list.copy, this.tempList );\n\t\tthis.updateTempList();\n\t}\n\n\tmoveDown( pointerOrLiteral:PointerRow | LiteralRow, index:number ):void {\n\t\tthis.tempList.splice( index, 1 );\n\t\tthis.tempList.splice( index + 1, 0, pointerOrLiteral );\n\t\tif( typeof this.list.copy === \"undefined\" ) return;\n\t\tthis.orderHasChanged = ! this.areEquals( this.list.copy, this.tempList );\n\t\tthis.updateTempList();\n\t}\n\n\taddPointer():void {\n\t\tlet newPointerRow:PointerRow = <PointerRow>{};\n\t\tnewPointerRow.added = <Pointer>{ \"@id\": \"\" };\n\t\tnewPointerRow.isBeingCreated = true;\n\t\tthis.tempList.splice( this.tempList.length, 0, newPointerRow );\n\t\tthis.updateTempList();\n\t}\n\n\taddLiteral():void {\n\t\tlet newLiteralRow:LiteralRow = <LiteralRow>{};\n\t\tnewLiteralRow.added = <Literal>{ \"@value\": \"\" };\n\t\tnewLiteralRow.isBeingCreated = true;\n\t\tthis.tempList.splice( this.tempList.length, 0, newLiteralRow );\n\t\tthis.updateTempList();\n\t}\n\n\tsaveItem( modifiedPointer:PointerRow, originalPointer:PointerRow, index:number ) {\n\t\tif( typeof originalPointer.added !== \"undefined\" ) delete originalPointer.isBeingCreated;\n\t\tthis.updateTempList();\n\t}\n\n\tdeleteItem( deletingItem:PointerRow|LiteralRow, index:number ):void {\n\t\tif( typeof deletingItem.added !== \"undefined\" ) this.tempList.splice( index, 1 );\n\t\tthis.updateTempList();\n\t}\n\n\tgetAddedItems():PointerRow[]|LiteralRow[] {\n\t\treturn this.tempList.filter( ( item:PointerRow|LiteralRow ) => typeof item.added !== \"undefined\" );\n\t}\n\n\tgetDeletedItems():PointerRow[]|LiteralRow[] {\n\t\treturn this.tempList.filter( ( item:PointerRow|LiteralRow ) => typeof item.deleted !== \"undefined\" );\n\t}\n\n\tgetModifiedItems():PointerRow[]|LiteralRow[] {\n\t\treturn this.tempList.filter( ( item:PointerRow|LiteralRow ) => typeof item.modified !== \"undefined\" && typeof item.deleted === \"undefined\" );\n\t}\n\n\tgetUntouchedItems():Array<PointerRow|LiteralRow> {\n\t\treturn this.tempList.filter( ( item:PointerRow|LiteralRow ) => typeof item.modified === \"undefined\" && typeof item.deleted === \"undefined\" );\n\t}\n\n\tareEquals( original:Array<LiteralRow|PointerRow>, modified:Array<ListRow|PointerRow> ):boolean {\n\t\treturn Utils.O.areEqual( original, modified, { arrays: true, objects: true } );\n\t}\n\n\tupdateTempList():void {\n\t\tlet hasBeenModified:boolean = this.hasBeenModified();\n\t\tif( typeof this.list.copy !== \"undefined\" && hasBeenModified ) {\n\t\t\tthis.list.modified = this.tempList;\n\t\t} else if( typeof this.list.copy !== \"undefined\" && ! hasBeenModified ) {\n\t\t\tdelete this.list.modified;\n\t\t} else {\n\t\t\tthis.list.added = this.tempList;\n\t\t}\n\t\tthis.onSave.emit( this.list );\n\t}\n\n\thasBeenModified():boolean {\n\t\treturn this.orderHasChanged || (this.tempList.findIndex( ( item:PointerRow|LiteralRow ) => { return typeof item.modified !== \"undefined\" || typeof item.added !== \"undefined\" || typeof item.deleted !== \"undefined\"} ) !== - 1);\n\t}\n\n\tgoToBlankNode( id:string ):void {\n\t\tthis.onGoToBlankNode.emit( id );\n\t}\n\n\tgoToNamedFragment( id:string ):void {\n\t\tthis.onGoToNamedFragment.emit( id );\n\t}\n\n\tinitializeDeletionDimmer():void {\n\t\tthis.$element.find( \".list.confirm-deletion.dimmer\" ).dimmer( { closable: false } );\n\t}\n\n\taskToConfirmDeletion():void {\n\t\tthis.$element.find( \".list.confirm-deletion.dimmer\" ).dimmer( \"show\" );\n\t}\n\n\tcancelDeletion():void {\n\t\tthis.$element.find( \".list.confirm-deletion.dimmer\" ).dimmer( \"hide\" );\n\t}\n\n\tdeleteList():void {\n\t\tif( this.list.added ) this.onDeleteList.emit( this.list );\n\t\tif( this.list.copy ) {\n\t\t\tthis.list.deleted = this.list.copy;\n\t\t\tthis.updateTempList();\n\t\t}\n\t}\n\n}\n\nexport interface ListRow {\n\tcopy?:any;\n\tadded?:any;\n\tmodified?:any;\n\tdeleted?:any;\n\n\tisBeingCreated?:boolean\n}\n\nexport interface List {\n\t\"@list\":any[];\n}\n\nexport default ListComponent;"]}