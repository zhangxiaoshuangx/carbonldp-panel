{"version":3,"sources":["document-explorer/list-viewer/list-viewer.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;YAeA;gBAQC,6BAAa,OAAkB;oBAJrB,gBAAW,GAAwB,IAAI,mBAAY,EAAU,CAAC;oBAExE,YAAO,GAAY,EAAE,CAAC;oBAGrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACxB,CAAC;gBAED,sCAAQ,GAAR;oBACC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClC,CAAC;gBAED,8CAAgB,GAAhB;oBACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,KAAK,CAAE,GAAG,CAAE,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,OAAO,CAAE,GAAG,CAAE,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,QAAQ,CAAE,GAAG,CAAE,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;gBAC1J,CAAC;gBAED,uCAAS,GAAT,UAAW,KAAY;oBACtB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,KAAK,CAAE,GAAG,CAAE,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;gBAC3D,CAAC;gBAED,wCAAU,GAAV;oBACC,IAAI,IAAI,GAAY,EAAE,CAAC;oBAEvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAE,UAAE,IAAI;wBACxB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAE,MAAM,CAAC,IAAI,CAAE,IAAI,CAAE,CAAE,CAAC;oBAC3C,CAAC,CAAE,CAAC;oBAEJ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAE,UAAE,IAAI,EAAE,GAAG;wBAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,IAAI,CAAE,KAAK,GAAG,CAAA;oBACpC,CAAC,CAAE,CAAC;gBACL,CAAC;gBAED,uCAAS,GAAT,UAAW,EAAS;oBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;gBAC7B,CAAC;gBAED,qCAAO,GAAP,UAAS,GAAU;oBAClB,MAAM,CAAC,CAAE,CAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAE,GAAG,CAAE,GAAG,KAAK,CAAC;gBACpD,CAAC;gBAvCD;oBAAC,YAAK,EAAE;;iEAAA;gBACR;oBAAC,aAAM,EAAE;;wEAAA;gBAVV;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,oCAAQ;wBAClB,MAAM,EAAE,CAAE,0BAA0B,CAAE;qBACtC,CAAE;;uCAAA;gBA8CH,0BAAC;YAAD,CA5CA,AA4CC,IAAA;YA5CD,qDA4CC,CAAA;YAED,oBAAe,mBAAmB,EAAC","file":"list-viewer.component.js","sourcesContent":["import { Component, ElementRef, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\n\nimport \"semantic-ui/semantic\";\n\nimport * as RDFNode from \"carbonldp/RDF/RDFNode\";\nimport * as URI from \"carbonldp/RDF/URI\";\n\nimport template from \"./list-viewer.component.html!\";\n\n@Component( {\n\tselector: \"cp-property-list\",\n\ttemplate: template,\n\tstyles: [ \":host { display:block; }\" ],\n} )\n\nexport class ListViewerComponent implements OnInit {\n\n\telement:ElementRef;\n\t@Input() list:RDFNode.Class[];\n\t@Output() onGoToBNode:EventEmitter<string> = new EventEmitter<string>();\n\n\theaders:string[] = [];\n\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n\n\tngOnInit():void {\n\t\tthis.headers = this.getHeaders();\n\t}\n\n\thasCommonHeaders():boolean {\n\t\treturn this.headers.indexOf( \"@id\" ) > - 1 ? true : this.headers.indexOf( \"@type\" ) > - 1 ? true : this.headers.indexOf( \"@value\" ) > - 1 ? true : false;\n\t}\n\n\thasHeader( value:string ):boolean {\n\t\treturn this.headers.indexOf( value ) > - 1 ? true : false;\n\t}\n\n\tgetHeaders():string[] {\n\t\tlet temp:string[] = [];\n\n\t\tthis.list.forEach( ( item )=> {\n\t\t\ttemp = temp.concat( Object.keys( item ) );\n\t\t} );\n\n\t\treturn temp.filter( ( item, pos ) => {\n\t\t\treturn temp.indexOf( item ) === pos\n\t\t} );\n\t}\n\n\tgoToBNode( id:string ):void {\n\t\tthis.onGoToBNode.emit( id );\n\t}\n\n\tisBNode( uri:string ):boolean {\n\t\treturn ! ! uri ? URI.Util.isBNodeID( uri ) : false;\n\t}\n\n}\n\nexport default ListViewerComponent;"]}