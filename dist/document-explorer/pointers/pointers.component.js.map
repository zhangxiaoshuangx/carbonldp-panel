{"version":3,"sources":["document-explorer/pointers/pointers.component.ts"],"names":[],"mappings":"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","file":"pointers.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\n\nimport * as RDFNode from \"carbonldp/RDF/Node\";\n\nimport { Modes } from \"./../property/property.component\";\nimport { Pointer, PointerRow } from \"./pointer.component\";\n\nimport \"semantic-ui/semantic\";\n\n\n@Component( {\n\tselector: \"cp-pointers\",\n\ttemplate: require( \"./pointers.component.html\" ),\n\tstyles: [ require( \"./pointers.component.css\" ) ],\n} )\n\nexport class PointersComponent implements OnInit {\n\n\tmodes:Modes = Modes;\n\ttokens:string[] = [ \"@id\", \"@type\" ];\n\ttempPointers:Pointer[] = [];\n\tisEditingPointer:boolean = false;\n\tcanDisplayPointers:boolean = false;\n\n\t@Input() documentURI:string = \"\";\n\t@Input() pointers:PointerRow[] = [];\n\t@Input() onAddNewPointer:EventEmitter<boolean> = new EventEmitter<boolean>();\n\t@Input() bNodes:RDFNode.Class[] = [];\n\t@Input() namedFragments:RDFNode.Class[] = [];\n\t@Input() canEdit:boolean = true;\n\n\t@Output() onPointersChanges:EventEmitter<PointerRow[]> = new EventEmitter<PointerRow[]>();\n\t@Output() onGoToBNode:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onGoToNamedFragment:EventEmitter<string> = new EventEmitter<string>();\n\n\tconstructor() { }\n\n\tngOnInit():void {\n\t\tthis.onAddNewPointer.subscribe( () => {\n\t\t\tthis.addNewPointer();\n\t\t} );\n\t\tthis.updateCanDisplayPointers();\n\t}\n\n\taddNewPointer():void {\n\t\tlet newPointerRow:PointerRow = <PointerRow>{};\n\t\tnewPointerRow.added = <Pointer>{};\n\t\tnewPointerRow.isBeingCreated = true;\n\t\tthis.pointers.splice( 0, 0, newPointerRow );\n\t\tthis.updateCanDisplayPointers();\n\t}\n\n\tsavePointer( modifiedPointer:Pointer, originalPointer:Pointer, index:number ) {\n\t\tif( typeof this.pointers[ index ].added !== \"undefined\" ) delete this.pointers[ index ].isBeingCreated;\n\t\tthis.onPointersChanges.emit( this.pointers );\n\t\tthis.updateCanDisplayPointers();\n\t}\n\n\tdeletePointer( deletingPointer:PointerRow, index:number ):void {\n\t\tif( typeof deletingPointer.added !== \"undefined\" ) this.pointers.splice( index, 1 );\n\t\tthis.onPointersChanges.emit( this.pointers );\n\t\tthis.updateCanDisplayPointers();\n\t}\n\n\tupdateCanDisplayPointers():void {\n\t\tthis.canDisplayPointers = this.getUntouchedPointers().length > 0 || this.getAddedPointers().length > 0 || this.getModifiedPointers().length > 0;\n\t}\n\n\tgetAddedPointers():PointerRow[] {\n\t\treturn this.pointers.filter( ( pointer:PointerRow ) => typeof pointer.added !== \"undefined\" );\n\t}\n\n\tgetModifiedPointers():PointerRow[] {\n\t\treturn this.pointers.filter( ( pointer:PointerRow ) => typeof pointer.modified !== \"undefined\" && typeof pointer.deleted === \"undefined\" );\n\t}\n\n\tgetDeletedPointers():PointerRow[] {\n\t\treturn this.pointers.filter( ( pointer:PointerRow ) => typeof pointer.deleted !== \"undefined\" );\n\t}\n\n\tgetUntouchedPointers():PointerRow[] {\n\t\treturn this.pointers.filter( ( pointer:PointerRow ) => typeof pointer.modified === \"undefined\" && typeof pointer.deleted === \"undefined\" );\n\t}\n\n\tgoToBNode( id:string ):void {\n\t\tthis.onGoToBNode.emit( id );\n\t}\n\n\tgoToNamedFragment( id:string ):void {\n\t\tthis.onGoToNamedFragment.emit( id );\n\t}\n}\n\nexport default PointersComponent;"]}