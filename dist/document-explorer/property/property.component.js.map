{"version":3,"sources":["document-explorer/property/property.component.ts"],"names":[],"mappings":"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","file":"property.component.js","sourcesContent":["import { Component, ElementRef, Input, Output, EventEmitter, AfterViewInit, OnInit, ViewChild } from \"@angular/core\";\n\nimport * as SDKLiteral from \"carbonldp/RDF/Literal\";\nimport * as SDKList from \"carbonldp/RDF/List\";\nimport * as URI from \"carbonldp/RDF/URI\";\nimport * as RDFNode from \"carbonldp/RDF/Node\";\nimport * as Utils from \"carbonldp/Utils\";\n\nimport { Literal, LiteralRow } from \"./../literals/literal.component\";\nimport { Pointer, PointerRow } from \"./../pointers/pointer.component\";\nimport { List, ListRow } from \"./../lists/list.component\";\nimport { NamedFragmentRow } from \"./../named-fragments/named-fragment.component\";\n\nimport * as $ from \"jquery\";\nimport \"semantic-ui/semantic\";\n\n@Component( {\n\tselector: \"cp-property\",\n\ttemplate: require( \"./property.component.html\" ),\n\tstyles: [ require( \"./property.component.css\" ) ],\n\thost: { \"[class.has-changed]\": \"property.modified\", \"[class.deleted-property]\": \"property.deleted\", \"[class.added-property]\": \"property.added\" },\n} )\n\nexport class PropertyComponent implements AfterViewInit, OnInit {\n\n\telement:ElementRef;\n\t$element:JQuery;\n\tliterals:LiteralRow[] = [];\n\tpointers:PointerRow[] = [];\n\tlists:ListRow[] = [];\n\ttempLiterals:LiteralRow[];\n\ttempPointers:PointerRow[];\n\ttempLists:ListRow[];\n\ttempProperty:Property = <Property>{};\n\tcopyOrAdded:string;\n\texistingFragments:string[] = [];\n\n\tid:string;\n\toriginalId:string;\n\tname:string;\n\toriginalName:string;\n\tvalue:any[]|string = [];\n\n\taddNewLiteral:EventEmitter<boolean> = new EventEmitter<boolean>();\n\taddNewPointer:EventEmitter<boolean> = new EventEmitter<boolean>();\n\taddNewList:EventEmitter<boolean> = new EventEmitter<boolean>();\n\tcommonToken:string[] = [ \"@id\", \"@type\", \"@value\" ];\n\tmodes:Modes = Modes;\n\t@ViewChild( \"nameInput\" ) nameInputControl;\n\t@ViewChild( \"idInput\" ) idInputControl;\n\n\t@Input() mode:string = Modes.READ;\n\t@Input() documentURI:string = \"\";\n\t@Input() bNodes:RDFNode.Class[] = [];\n\t@Input() namedFragments:NamedFragmentRow[] = [];\n\t@Input() isPartOfNamedFragment:boolean = false;\n\t@Input() canEdit:boolean = true;\n\t@Input() existingProperties:string[] = [];\n\tprivate _property:PropertyRow;\n\t@Input() set property( prop:PropertyRow ) {\n\t\tthis.copyOrAdded = ! ! prop.copy ? (! ! prop.modified ? \"modified\" : \"copy\") : \"added\";\n\t\tthis._property = prop;\n\n\t\tthis.id = prop[ this.copyOrAdded ].id;\n\t\tthis.tempProperty.id = prop[ this.copyOrAdded ].id;\n\t\tthis.originalId = prop[ this.copyOrAdded ].value;\n\n\t\tthis.name = prop[ this.copyOrAdded ].name;\n\t\tthis.tempProperty.name = prop[ this.copyOrAdded ].name;\n\t\tthis.originalName = this.name;\n\t\tif( Utils.isArray( prop[ this.copyOrAdded ].value ) ) {\n\t\t\tthis.value = [];\n\t\t\tprop[ this.copyOrAdded ].value.forEach( ( literalOrRDFNode ) => { (<Array<any>>this.value).push( Object.assign( literalOrRDFNode ) ) } )\n\t\t} else {\n\t\t\tthis.value = prop[ this.copyOrAdded ].value;\n\t\t}\n\t}\n\n\tget property():PropertyRow { return this._property; }\n\n\t@Output() onGoToBlankNode:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onGoToNamedFragment:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onChangeProperty:EventEmitter<Property> = new EventEmitter<Property>();\n\t@Output() onDeleteProperty:EventEmitter<PropertyRow> = new EventEmitter<PropertyRow>();\n\t@Output() onDeleteNewProperty:EventEmitter<PropertyRow> = new EventEmitter<PropertyRow>();\n\t@Output() onSaveNewProperty:EventEmitter<PropertyRow> = new EventEmitter<PropertyRow>();\n\t@Output() onChangeNewProperty:EventEmitter<PropertyRow> = new EventEmitter<PropertyRow>();\n\n\tnameHasChanged:boolean = false;\n\tvalueHasChanged:boolean = false;\n\tliteralsHaveChanged:boolean = false;\n\tpointersHaveChanged:boolean = false;\n\tlistsHaveChanged:boolean = false;\n\n\tget propertyHasChanged():boolean { return this.nameHasChanged || this.valueHasChanged || this.literalsHaveChanged || this.pointersHaveChanged || this.listsHaveChanged; }\n\n\t// TODO: Add @lists and @sets support\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n\n\tngOnInit():void {\n\t\tif( Utils.isArray( this.value ) ) this.fillLiteralsAndPointers();\n\t}\n\n\tngAfterViewInit():void {\n\t\tthis.$element = $( this.element.nativeElement );\n\t\tthis.initializeAccordions();\n\t\tthis.initializePropertyButtons();\n\t\tthis.initializeDeletionDimmer();\n\t}\n\n\tgetDisplayName( uri:string ):string {\n\t\tif( this.commonToken.indexOf( uri ) > - 1 )return uri;\n\t\tif( URI.Util.hasFragment( uri ) )return this.unescape( this.getFragment( uri ) );\n\t\treturn this.unescape( URI.Util.getSlug( uri ) );\n\t}\n\n\tgetParentURI( uri:string ):string {\n\t\tlet slug:string = this.getSlug( uri );\n\t\treturn uri.substr( 0, uri.indexOf( slug ) );\n\t}\n\n\tgetSlug( uri:string ) {\n\t\treturn URI.Util.getSlug( uri );\n\t}\n\n\tgetFragment( uri:string ):string {\n\t\tlet parts:string[] = uri.split( \"#\" );\n\t\turi = \"\".concat( parts[ 0 ] ).concat( \"#\" + parts[ 1 ] );\n\t\treturn URI.Util.getFragment( uri );\n\t}\n\n\tisArray( property:any ):boolean {\n\t\treturn Utils.isArray( property );\n\t}\n\n\tisUrl( uri:string ):boolean {\n\t\tlet r = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n\t\treturn r.test( uri );\n\t}\n\n\tgoToBNode( id:string ):void {\n\t\tthis.onGoToBlankNode.emit( id );\n\t}\n\n\tgoToNamedFragment( id:string ):void {\n\t\tthis.onGoToNamedFragment.emit( id );\n\t}\n\n\tgetTypeIcon( type:string ):string {\n\t\tswitch( this.getDisplayName( type ) ) {\n\t\t\tcase \"RDFSource\":\n\t\t\t\treturn \"file outline\";\n\t\t\tcase \"Container\":\n\t\t\t\treturn \"cubes\";\n\t\t\tcase \"BasicContainer\":\n\t\t\t\treturn \"cube\";\n\t\t\tdefault:\n\t\t\t\treturn \"file excel outline\";\n\t\t}\n\t}\n\n\tinitializeAccordions():void {\n\t\tthis.$element.find( \".ui.accordion\" ).accordion();\n\t}\n\n\tinitializePropertyButtons():void {\n\t\tthis.$element.find( \".ui.options.dropdown.button\" ).dropdown( {\n\t\t\ttransition: \"swing up\"\n\t\t} );\n\t}\n\n\tinitializeDeletionDimmer():void {\n\t\tthis.$element.find( \".property.confirm-deletion.dimmer\" ).dimmer( { closable: false } );\n\t}\n\n\tonEditName():void {\n\t\tthis.mode = Modes.EDIT;\n\t\tthis.name = this.unescape( (this.name) );\n\t}\n\n\tonEditId():void {\n\t\tthis.mode = Modes.EDIT;\n\t\tthis.existingFragments = [];\n\t\tthis.namedFragments.forEach( ( nameFragment:NamedFragmentRow ) => { this.existingFragments.push( nameFragment.name ); } );\n\t\tthis.value = this.unescape( <string>this.value );\n\t}\n\n\tcancelDeletion():void {\n\t\tthis.$element.find( \".property.confirm-deletion.dimmer\" ).dimmer( \"hide\" );\n\t}\n\n\tcancelEdition():void {\n\t\tif( this.nameInputControl.valid ) {\n\t\t\tthis.mode = Modes.READ;\n\t\t}\n\t}\n\n\tcancelIdEdition():void {\n\t\tif( this.idInputControl.valid ) {\n\t\t\tthis.mode = Modes.READ;\n\t\t}\n\t}\n\n\taskToConfirmDeletion():void {\n\t\tthis.$element.find( \".property.confirm-deletion.dimmer\" ).dimmer( \"show\" );\n\t}\n\n\tdeleteProperty():void {\n\t\tif( typeof this.property.added !== \"undefined\" ) {\n\t\t\tthis.onDeleteNewProperty.emit( this.property );\n\t\t} else {\n\t\t\tthis.property.deleted = this.property.copy;\n\t\t\tthis.onDeleteProperty.emit( this.property );\n\t\t}\n\t}\n\n\tsave():void {\n\t\tthis.checkForChangesOnName( this.sanitize( this.name ) );\n\t\tthis.mode = Modes.READ;\n\t}\n\n\tsaveId():void {\n\t\tthis.checkForChangesOnId( this.sanitize( <string>this.value ) );//check changes on idInput\n\t\tthis.mode = Modes.READ;\n\t}\n\n\tsanitize( value:string ):string {\n\t\tlet sanitized:string = value;\n\t\tlet slug:string = this.getSlug( value );\n\t\tlet parts:string[] = value.split( slug );\n\t\tif( parts.length > 0 ) sanitized = parts[ 0 ] + this.escape( slug );\n\t\treturn sanitized;\n\t}\n\n\tfillLiteralsAndPointers():void {\n\t\tthis.literals = [];\n\t\tthis.tempLiterals = [];\n\t\tthis.pointers = [];\n\t\tthis.tempPointers = [];\n\t\tthis.lists = [];\n\t\tthis.tempLists = [];\n\t\tif( typeof this.property.modifiedLiterals !== \"undefined\" ) {\n\t\t\tthis.literals = this.property.modifiedLiterals;\n\t\t\tthis.tempLiterals = this.property.modifiedLiterals;\n\t\t} else {\n\t\t\tthis.property[ this.copyOrAdded ].value.forEach( ( literalOrRDFNode ) => {\n\t\t\t\tif( SDKLiteral.Factory.is( literalOrRDFNode ) ) {\n\t\t\t\t\tthis.literals.push( <LiteralRow>{ copy: literalOrRDFNode } );\n\t\t\t\t\tthis.tempLiterals.push( <LiteralRow>{ copy: literalOrRDFNode } );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\tif( typeof this.property.modifiedPointers !== \"undefined\" ) {\n\t\t\tthis.pointers = this.property.modifiedPointers;\n\t\t\tthis.tempPointers = this.property.modifiedPointers;\n\t\t} else {\n\t\t\tthis.property[ this.copyOrAdded ].value.forEach( ( literalOrRDFNode ) => {\n\t\t\t\tif( RDFNode.Factory.is( literalOrRDFNode ) ) {\n\t\t\t\t\tthis.pointers.push( <PointerRow>{ copy: literalOrRDFNode } );\n\t\t\t\t\tthis.tempPointers.push( <PointerRow>{ copy: literalOrRDFNode } );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\tif( typeof this.property.modifiedLists !== \"undefined\" ) {\n\t\t\tthis.lists = this.property.modifiedLists;\n\t\t\tthis.tempLists = this.property.modifiedLists;\n\t\t} else {\n\t\t\tthis.property[ this.copyOrAdded ].value.forEach( ( literalOrRDFNodeOrList ) => {\n\t\t\t\tif( SDKList.Factory.is( literalOrRDFNodeOrList ) ) {\n\t\t\t\t\tthis.lists.push( <ListRow>{ copy: literalOrRDFNodeOrList[ \"@list\" ].map( ( item ) => { return { copy: item } } ) } );\n\t\t\t\t\tthis.tempLists.push( <ListRow>{ copy: literalOrRDFNodeOrList } );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\taddLiteral():void {\n\t\t// Notify LiteralsComponent to add literal\n\t\tthis.addNewLiteral.emit( true );\n\t}\n\n\taddPointer():void {\n\t\t// Notify PointersComponent to add pointer\n\t\tthis.addNewPointer.emit( true );\n\t}\n\n\taddList():void {\n\t\t// Notify ListsComponent to add pointer\n\t\tthis.addNewList.emit( true );\n\t}\n\n\tcheckForChangesOnName( newName:string ):void {\n\t\tthis.name = newName;\n\t\tif( typeof this.name !== \"undefined\" && (this.name !== this.property[ this.copyOrAdded ].name || this.name !== this.tempProperty.name ) ) {\n\t\t\tthis.tempProperty.name = this.name;\n\t\t\tthis.changePropertyContent();\n\t\t}\n\t}\n\n\tcheckForChangesOnId( newId:string ):void {\n\t\tthis.value = newId;\n\t\tif( typeof this.value !== \"undefined\" && (this.value !== this.property[ this.copyOrAdded ].value || this.value !== this.tempProperty.value ) ) {\n\t\t\tthis.tempProperty.value = this.value;\n\t\t\tthis.changePropertyContent();\n\t\t}\n\t}\n\n\tcheckForChangesOnLiterals( literals:LiteralRow[] ):void {\n\t\tthis.tempLiterals = literals;\n\t\tthis.changePropertyContent();\n\t}\n\n\tcheckForChangesOnPointers( pointers:PointerRow[] ):void {\n\t\tthis.tempPointers = pointers;\n\t\tthis.changePropertyContent();\n\t}\n\n\tcheckForChangesOnLists( lists:ListRow[] ):void {\n\t\tthis.lists = lists;\n\t\tthis.tempLists = lists;\n\t\tthis.changePropertyContent();\n\t}\n\n\tconvertToListRow( lists:ListRow[] ):ListRow[] {\n\t\tlet resultingLists:ListRow[] = [];\n\t\tlists.forEach( ( list:ListRow ) => {\n\t\t\tlet resultingList:ListRow = {};\n\t\t\tif( list[ \"added\" ] ) {\n\t\t\t\tresultingList.added = { \"@list\": this.getRDFList( list, \"added\" ) };\n\t\t\t} else if( list[ \"deleted\" ] ) {\n\t\t\t\tresultingList.deleted = { \"@list\": this.getRDFList( list, \"deleted\" ) };\n\t\t\t} else if( list[ \"modified\" ] ) {\n\t\t\t\tresultingList.modified = { \"@list\": this.getRDFList( list, \"modified\" ) };\n\t\t\t} else if( list[ \"copy\" ] ) {\n\t\t\t\tresultingList.copy = { \"@list\": this.getRDFList( list, \"copy\" ) };\n\t\t\t}\n\t\t\tresultingLists.push( resultingList );\n\t\t} );\n\t\treturn resultingLists;\n\t}\n\n\tgetRDFList( list:ListRow, copyOrAddedOrModified:string ):any[] {\n\t\tlet resultingListContent:any[] = [];\n\t\tlist[ copyOrAddedOrModified ].forEach( ( literalOrPointer:any ) => {\n\t\t\tif( ! ! literalOrPointer[ \"deleted\" ] ) return;\n\t\t\tif( copyOrAddedOrModified === \"copy\" )\n\t\t\t\tresultingListContent.push( literalOrPointer[ \"copy\" ] );\n\t\t\telse\n\t\t\t\tresultingListContent.push( literalOrPointer[ ! ! literalOrPointer[ \"modified\" ] ? \"modified\" : ! ! literalOrPointer[ \"added\" ] ? \"added\" : \"copy\" ] );\n\t\t} );\n\t\treturn resultingListContent;\n\t}\n\n\tchangePropertyContent():void {\n\t\tthis.tempProperty.id = this.id;\n\t\tthis.tempProperty.name = this.name;\n\t\tthis.tempProperty.value = this.value;\n\n\t\tthis.nameHasChanged = false;\n\t\tthis.valueHasChanged = false;\n\n\t\t// Change name\n\t\tif( (! ! this.property.copy) ) {\n\t\t\tif( (this.tempProperty.name !== this.property.copy.name ) ) {\n\t\t\t\tthis.property.modified = this.tempProperty;\n\t\t\t\tthis.nameHasChanged = true;\n\t\t\t} else { this.nameHasChanged = false; }\n\t\t}\n\n\t\t// Change literals and pointers\n\t\tif( Utils.isArray( this.value ) ) {\n\t\t\tthis.tempProperty.value = [];\n\t\t\tlet tempLists:any[] = this.convertToListRow( this.tempLists );\n\t\t\t[].concat( this.tempLiterals ).concat( this.tempPointers ).concat( tempLists ).forEach( ( literalOrPointerOrListRow ) => {\n\t\t\t\tif( ! literalOrPointerOrListRow.deleted )\n\t\t\t\t\tthis.tempProperty.value.push( ! ! literalOrPointerOrListRow.added ? literalOrPointerOrListRow.added : ! ! literalOrPointerOrListRow.modified ? literalOrPointerOrListRow.modified : literalOrPointerOrListRow.copy );\n\t\t\t} );\n\t\t\tthis.literalsHaveChanged = ! ! this.tempLiterals.find( ( literalRow ) => {return ! ! literalRow.modified || ! ! literalRow.added || ! ! literalRow.deleted } );\n\t\t\tthis.pointersHaveChanged = ! ! this.tempPointers.find( ( pointerRow ) => {return ! ! pointerRow.modified || ! ! pointerRow.added || ! ! pointerRow.deleted } );\n\t\t\tthis.listsHaveChanged = ! ! tempLists.find( ( listRow ) => {return ! ! listRow.modified || ! ! listRow.added || ! ! listRow.deleted } );\n\n\t\t\tif( this.literalsHaveChanged ) { this.property.modifiedLiterals = this.tempLiterals; }\n\t\t\telse { delete this.property.modifiedLiterals; }\n\n\t\t\tif( this.pointersHaveChanged ) { this.property.modifiedPointers = this.tempPointers; }\n\t\t\telse { delete this.property.modifiedPointers; }\n\n\t\t\tif( this.listsHaveChanged ) { this.property.modifiedLists = this.tempLists; }\n\t\t\telse { delete this.property.modifiedLists; }\n\n\t\t} else {\n\n\t\t\t// Change value because it is a single string\n\t\t\tif( (! ! this.property.copy) ) {\n\t\t\t\tif( (this.tempProperty.value !== this.property.copy.value ) ) {\n\t\t\t\t\tthis.property.modified = this.tempProperty;\n\t\t\t\t\tthis.valueHasChanged = true;\n\t\t\t\t} else { this.valueHasChanged = false; }\n\t\t\t}\n\t\t}\n\n\t\tthis.property.isBeingCreated = false;\n\n\t\tif( ! ! this.property.copy ) {\n\t\t\tif( this.propertyHasChanged ) this.property.modified = this.tempProperty;\n\t\t\telse delete this.property.modified;\n\t\t\tthis.onChangeProperty.emit( this.tempProperty );\n\t\t} else if( ! ! this.property.added ) {\n\t\t\tif( (this.tempProperty.name !== this.property.added.name ) ) {\n\t\t\t\tthis.id = this.name;\n\t\t\t}\n\t\t\tthis.property.added = this.tempProperty;\n\t\t\tif( this.existingProperties.indexOf( this.tempProperty.id ) === - 1 )\n\t\t\t\tthis.onSaveNewProperty.emit( this.tempProperty );\n\t\t\telse\n\t\t\t\tthis.onChangeNewProperty.emit( this.tempProperty );\n\t\t}\n\t}\n\n\tprivate escape( uri:string ):string {\n\t\treturn encodeURI( uri );\n\t}\n\n\tprivate unescape( uri:string ):string {\n\t\treturn decodeURI( uri );\n\t}\n}\n\nexport interface PropertyRow {\n\tcopy?:any;\n\tadded?:any;\n\tmodified?:any;\n\tdeleted?:any;\n\n\tisBeingCreated?:boolean;\n\tisBeingModified?:boolean;\n\tisBeingDeleted?:boolean;\n\n\tmodifiedLiterals?:LiteralRow[];\n\tmodifiedPointers?:PointerRow[];\n\tmodifiedLists?:ListRow[];\n}\nexport interface Property {\n\tid:string;\n\tname:string;\n\tvalue:any;\n}\n\nexport class Modes {\n\tstatic EDIT:string = \"EDIT\";\n\tstatic READ:string = \"READ\";\n}\n\nexport default PropertyComponent;\n"]}