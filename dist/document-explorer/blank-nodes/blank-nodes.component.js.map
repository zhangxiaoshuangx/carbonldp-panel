{"version":3,"sources":["document-explorer/blank-nodes/blank-nodes.component.ts"],"names":[],"mappings":"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","file":"blank-nodes.component.js","sourcesContent":["import { Component, ElementRef, Input, Output, EventEmitter, SimpleChange, AfterViewInit, OnChanges } from \"@angular/core\";\n\nimport * as RDFNode from \"carbonldp/RDF/Node\";\nimport * as Utils from \"carbonldp/Utils\";\n\nimport { BlankNodeRow } from \"./blank-node.component\"\n\nimport * as $ from \"jquery\";\nimport \"semantic-ui/semantic\";\n\n@Component( {\n\tselector: \"cp-blank-nodes\",\n\ttemplateUrl: \"./blank-nodes.component.html\",\n\tstyleUrls: [  \"./blank-nodes.component.scss\"  ],\n} )\n\nexport class BlankNodesComponent implements AfterViewInit, OnChanges {\n\n\telement:ElementRef;\n\t$element:JQuery;\n\n\tnodesTab:JQuery;\n\topenedBlankNodes:BlankNodeRow[] = [];\n\tblankNodesRecords:BlankNodesRecords = new BlankNodesRecords();\n\taskingDeletionBlankNode:BlankNodeRow;\n\n\t@Input() blankNodes:BlankNodeRow[] = [];\n\t@Input() namedFragments:RDFNode.Class[] = [];\n\t@Input() documentURI:string = \"\";\n\n\t@Output() onChanges:EventEmitter<BlankNodesRecords> = new EventEmitter<BlankNodesRecords>();\n\t@Output() onOpenBlankNode:EventEmitter<string> = new EventEmitter<string>();\n\t@Output() onOpenNamedFragment:EventEmitter<string> = new EventEmitter<string>();\n\n\tconstructor( element:ElementRef ) {\n\t\tthis.element = element;\n\t}\n\n\tngAfterViewInit():void {\n\t\tthis.$element = $( this.element.nativeElement );\n\t\tthis.nodesTab = this.$element.find( \".tabular.blank-nodes.menu\" ).tab();\n\t\tthis.initializeDeletionDimmer();\n\t}\n\n\tngOnChanges( changes:{ [propName:string]:SimpleChange } ):void {\n\t\tif( ( changes[ \"blankNodes\" ].currentValue !== changes[ \"blankNodes\" ].previousValue ) ) {\n\t\t\tthis.openedBlankNodes = [];\n\t\t\tthis.goToBlankNode( \"all\" );\n\t\t\tthis.blankNodesRecords.clear();\n\t\t}\n\t}\n\n\topenBlankNode( nodeOrId:RDFNode.Class|string ):void {\n\t\tlet node:BlankNodeRow;\n\t\tif( typeof nodeOrId === \"string\" ) {\n\t\t\tnode = this.blankNodes.find( ( node ) => { return node.id === nodeOrId} );\n\t\t} else {\n\t\t\tnode = nodeOrId;\n\t\t}\n\t\tif( this.openedBlankNodes.indexOf( node ) === - 1 ) this.openedBlankNodes.push( node );\n\t\tsetTimeout( () => {\n\t\t\tthis.refreshTabs();\n\t\t\tthis.goToBlankNode( \"blankNode_\" + this.escape( node.id ) );\n\t\t}, 50 );\n\t}\n\n\topenNamedFragment( id:string ):void {\n\t\tthis.onOpenNamedFragment.emit( id );\n\t}\n\n\tgoToBlankNode( id:string ) {\n\t\tif( ! this.nodesTab ) return;\n\t\tthis.nodesTab.find( \"> [data-tab='\" + id + \"']\" ).click();\n\t\tthis.onOpenBlankNode.emit( \"bNodes\" );\n\t}\n\n\tcloseBlankNode( blankNode:BlankNodeRow, index?:number ):void {\n\t\tthis.openedBlankNodes.splice( index, 1 );\n\t\tthis.goToBlankNode( \"all\" );\n\t}\n\n\tgetShortId( id:string ):string {\n\t\tif( ! id )return;\n\t\treturn id.substr( 0, id.indexOf( \"-\" ) ) + \"...\";\n\t}\n\n\trefreshTabs():void {\n\t\tthis.nodesTab.find( \">.item\" ).tab();\n\t}\n\n\tescape( value:string ):string {\n\t\treturn value === \"all\" ? value : value.substr( value.indexOf( \"_:\" ) + 2 );\n\t}\n\n\tchangeBlankNode( blankNodeRow:BlankNodeRow, index?:number ):void {\n\t\tif( typeof this.blankNodesRecords === \"undefined\" ) this.blankNodesRecords = new BlankNodesRecords();\n\t\tif( typeof blankNodeRow.modified !== \"undefined\" ) {\n\t\t\tthis.blankNodesRecords.changes.set( blankNodeRow.id, blankNodeRow );\n\t\t} else if( typeof blankNodeRow.added === \"undefined\" ) {\n\t\t\tthis.blankNodesRecords.changes.delete( blankNodeRow.id );\n\t\t}\n\t\tthis.onChanges.emit( this.blankNodesRecords );\n\t}\n\n\tdeleteBlankNode( blankNodeRow:BlankNodeRow, index?:number ):void {\n\t\tindex = this.openedBlankNodes.indexOf( blankNodeRow );\n\t\tthis.openedBlankNodes.splice( index, 1 );\n\t\tif( typeof this.blankNodesRecords === \"undefined\" ) this.blankNodesRecords = new BlankNodesRecords();\n\t\tif( typeof blankNodeRow.added !== \"undefined\" ) {\n\t\t\tthis.blankNodesRecords.additions.delete( blankNodeRow.id );\n\t\t} else if( typeof blankNodeRow.modified !== \"undefined\" ) {\n\t\t\tthis.blankNodesRecords.changes.delete( blankNodeRow.id );\n\t\t\tthis.blankNodesRecords.deletions.set( blankNodeRow.id, blankNodeRow );\n\t\t} else {\n\t\t\tthis.blankNodesRecords.deletions.set( blankNodeRow.id, blankNodeRow );\n\t\t}\n\t\tindex = this.blankNodes.indexOf( blankNodeRow );\n\t\tthis.blankNodes.splice( index, 1 );\n\t\tthis.onChanges.emit( this.blankNodesRecords );\n\t}\n\n\tcreateBlankNode():void {\n\t\tlet id:string = \"_:\" + this.generateUUID(),\n\t\t\tbNodeIdentifier:string = this.generateUUID();\n\t\tlet newBlankNode:BlankNodeRow = <BlankNodeRow>{\n\t\t\tid: id,\n\t\t\tbNodeIdentifier: bNodeIdentifier,\n\t\t\tcopy: {\n\t\t\t\t\"@id\": id,\n\t\t\t\t\"https://carbonldp.com/ns/v1/platform#bNodeIdentifier\": [ { \"@value\": bNodeIdentifier } ]\n\t\t\t}\n\t\t};\n\t\tnewBlankNode.added = newBlankNode.copy;\n\t\tthis.blankNodes.splice( 0, 0, newBlankNode );\n\t\tthis.blankNodesRecords.additions.set( id, newBlankNode );\n\t\tthis.onChanges.emit( this.blankNodesRecords );\n\t\tthis.openBlankNode( id );\n\t}\n\n\tgenerateUUID():string {\n\t\treturn Utils.UUID.generate();\n\t}\n\n\tinitializeDeletionDimmer():void {\n\t\tthis.$element.find( \".confirm-deletion.dimmer\" ).dimmer( { closable: false } );\n\t}\n\n\taskToConfirmDeletion( clickEvent:Event, blankNode:BlankNodeRow ):void {\n\t\tclickEvent.stopPropagation();\n\t\tthis.askingDeletionBlankNode = blankNode;\n\t\tthis.$element.find( \".confirm-deletion.dimmer\" ).dimmer( \"show\" );\n\t}\n\n\tconfirmDeletion():void {\n\t\tthis.deleteBlankNode( this.askingDeletionBlankNode );\n\t\tthis.$element.find( \".confirm-deletion.dimmer\" ).dimmer( \"hide\" );\n\t}\n\n\tcancelDeletion():void {\n\t\tthis.askingDeletionBlankNode = null;\n\t\tthis.$element.find( \".confirm-deletion.dimmer\" ).dimmer( \"hide\" );\n\t}\n\n}\n\nexport class BlankNodesRecords {\n\tchanges:Map<string,BlankNodeRow> = new Map<string, BlankNodeRow>();\n\tdeletions:Map<string,BlankNodeRow> = new Map<string, BlankNodeRow>();\n\tadditions:Map<string,BlankNodeRow> = new Map<string, BlankNodeRow>();\n\n\tclear():void {\n\t\tthis.changes.clear();\n\t\tthis.deletions.clear();\n\t\tthis.additions.clear();\n\t}\n}\n\nexport default BlankNodesComponent;"]}