{"version":3,"sources":["menu-bar.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAmBA;gBASC,0BAAa,OAAkB,EAAE,MAAa,EAAE,aAA2B,EAAE,cAA6B;oBAR1G,gBAAW,GAAc,EAAE,CAAC;oBAS3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;oBACnC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;oBAErC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAE,UAAE,aAAa;wBAC5C,OAAO,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;wBAC7B,gCAAgC;oBACjC,CAAC,CAAE,CAAC;gBACL,CAAC;gBAED;;;;;;;;;;;;;;;;;mBAiBG;gBAEH,wCAAa,GAAb;oBACC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B;;;;;;;;mCAQe;gBAChB,CAAC;gBAED,yDAAyD;gBACzD,yCAAc,GAAd,UAAgB,kBAAsB;oBACrC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAC9B;;;;;;0BAMM;gBACP,CAAC;gBAED,2CAAgB,GAAhB;oBACC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAChC;;;;;;;yCAOqB;gBACtB,CAAC;gBAED,wCAAa,GAAb;oBACC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;gBAC9B,CAAC;gBArFF;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,aAAa;wBACvB,QAAQ,EAAE,iCAAQ;wBAClB,MAAM,EAAE,CAAE,qCAAK,CAAE;qBAEjB,CAAE;;oCAAA;gBAiFH,uBAAC;YAAD,CAhFA,AAgFC,IAAA;YAhFD,+CAgFC,CAAA;YAED,oBAAe,gBAAgB,EAAC","file":"menu-bar.component.js","sourcesContent":["import { Component, ElementRef } from \"@angular/core\";\n//import { ROUTER_DIRECTIVES, Router, Instruction } from \"@angular/router-deprecated\";\nimport { Router } from \"@angular/router\";\n\nimport { RouterService } from \"carbon-panel/router.service\";\nimport { SidebarService } from \"carbon-panel/sidebar.service\";\n\nimport $ from \"jquery\";\nimport \"semantic-ui/semantic\";\n\nimport template from \"./menu-bar.component.html!\";\nimport style from \"./menu-bar.component.css!text\";\n\n@Component( {\n\tselector: \"cp-menu-bar\",\n\ttemplate: template,\n\tstyles: [ style ],\n\t//directives: [ ROUTER_DIRECTIVES ]\n} )\nexport class MenuBarComponent {\n\tbreadCrumbs:Array<any> = [];\n\t//instructions:Instruction[] = [];\n\n\tprivate element:ElementRef;\n\tprivate router:Router;\n\tprivate routerService:RouterService;\n\tprivate sidebarService:SidebarService;\n\n\tconstructor( element:ElementRef, router:Router, routerService:RouterService, sidebarService:SidebarService ) {\n\t\tthis.element = element;\n\t\tthis.router = router;\n\t\tthis.routerService = routerService;\n\t\tthis.sidebarService = sidebarService;\n\n\t\tthis.router.events.subscribe( ( NavigationEnd )=> {\n\t\t\tconsole.log( NavigationEnd );\n\t\t\t//this.updateBreadcrumbs( url );\n\t\t} );\n\t}\n\n\t/*updateBreadcrumbs( url:string ):void {\n\t\tthis.instructions = [];\n\t\tthis.breadCrumbs = [];\n\n\t\tlet workingInstruction:Instruction;\n\t\tthis.router.recognize( url ).then( ( instruction )=> {\n\t\t\tif( ! instruction ) return;\n\n\t\t\tworkingInstruction = instruction;\n\t\t\twhile( workingInstruction.child ) {\n\t\t\t\tthis.addInstruction( workingInstruction );\n\t\t\t\tworkingInstruction = workingInstruction.child;\n\t\t\t}\n\t\t\tif( ! workingInstruction.child && ! ! workingInstruction.urlPath ) {\n\t\t\t\tthis.addInstruction( workingInstruction );\n\t\t\t}\n\t\t} );\n\t}*/\n\n\tgetRouteAlias():any {\n\t\tconsole.log(\"getRouteAlias\");\n\t\t/*let alias:any[] = [], params:{name:string} = { name: \"\" };\n\t\tthis.instructions.forEach( ( instruction )=> {\n\t\t\tif( ! instruction ) return;\n\n\t\t\talias.push( instruction.component.routeData.data[ \"alias\" ] );\n\t\t\tparams = instruction.component.routeData.data[ \"params\" ];\n\t\t\tif( params ) alias.push( { [params.name]: instruction.urlPath } );\n\t\t} );\n\t\treturn alias;*/\n\t}\n\n\t//addInstruction( workingInstruction:Instruction ):void {\n\taddInstruction( workingInstruction:any ):void {\n\t\tconsole.log(\"addInstruction\");\n\t\t/*this.instructions.push( workingInstruction );\n\t\tthis.breadCrumbs.push( {\n\t\t\turl: workingInstruction.urlPath,\n\t\t\tdisplayName: workingInstruction.component.routeData.data[ \"displayName\" ],\n\t\t\talias: this.getRouteAlias(),\n\t\t\tfriendlyAlias: this.getFriendlyAlias()\n\t\t} );*/\n\t}\n\n\tgetFriendlyAlias():any {\n\t\tconsole.log(\"getFriendlyAlias\");\n\t\t/*let friendlyURL:string = \"\";\n\t\tthis.instructions.forEach( ( instruction )=> {\n\t\t\tif( ! instruction ) return;\n\n\t\t\tfriendlyURL += instruction.component.routeData.data[ \"alias\" ];\n\t\t\tfriendlyURL += instruction.child ? \"/\" : \"\";\n\t\t} );\n\t\treturn friendlyURL;*/\n\t}\n\n\ttoggleSidebar():void {\n\t\tthis.sidebarService.toggle();\n\t}\n}\n\nexport default MenuBarComponent;\n"],"sourceRoot":"/source/"}