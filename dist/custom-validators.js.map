{"version":3,"sources":["custom-validators.ts"],"names":[],"mappings":"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","file":"custom-validators.js","sourcesContent":["import { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AbstractControl, Validator, NG_VALIDATORS } from \"@angular/forms\";\nimport * as URI from \"carbonldp/RDF/URI\";\n\n@Directive( {\n\tselector: \"[cp-email]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: EmailValidator, multi: true } ]\n} )\nexport class EmailValidator implements Validator {\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\t\t// RFC 2822 compliant regex\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/ ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { \"invalidEmailAddress\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-slug]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: SlugValidator, multi: true } ]\n} )\nexport class SlugValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^[a-z0-9]+(?:-[a-z0-9]*)*(?:\\/*)$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { \"invalidSlug\": true };\n\t\t}\n\t}\n}\n\n\n@Directive( {\n\tselector: \"[cp-match]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: MatchValidator, multi: true } ]\n} )\nexport class MatchValidator implements Validator,OnChanges {\n\t@Input() matchTo;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{ [ key:string ]:any; } {\n\t\tif( control.value ) {\n\t\t\tif( control.value === this.matchTo )\n\t\t\t\treturn null;\n\t\t\telse {\n\t\t\t\treturn { \"matchError\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-domain]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: DomainValidator, multi: true } ]\n} )\nexport class DomainValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^((cc:|https:|http:|[/][/])([a-z]|[A-Z]|[:0-9]|[/.-]){3,})$/g ) )\n\t\t\t\treturn null;\n\t\t\telse {\n\t\t\t\treturn { \"invalidURLAddress\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-uri]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: URIValidator, multi: true } ]\n} )\nexport class URIValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^(ftp|https?):\\/\\/(\\w+:{0,1}\\w*@)?((?![^\\/]+\\/(?:ftp|https?):)\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//if( control.touched && ! ! control.value ) {\n\t\t\t\treturn { \"invalidURIAddress\": true };\n\t\t\t}\n\t\t}\n\t\treturn { \"emptyURIAddress\": true };\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-fragment]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: FragmentValidator, multi: true } ]\n} )\nexport class FragmentValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\t\tif( ! control.value ) return null;\n\t\tif( ! control.value.match( /^(ftp|https?):\\/\\/(\\w+:{0,1}\\w*@)?((?![^\\/]+\\/(?:ftp|https?):)\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/ ) ) return { \"invalidURIAddress\": true };\n\t\tif( ! URI.Util.hasFragment( control.value ) ) return { \"missingFragment\": true };\n\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"multipleFragment\": true };\n\t\tif( URI.Util.getFragment( control.value ).trim().length === 0 ) return { \"missingFragment\": true };\n\n\t\treturn null;\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-uri-fragment]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: URIFragmentValidator, multi: true } ]\n} )\nexport class URIFragmentValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any; } {\n\t\tif( ! control.value ) return null;\n\t\tif( ! control.value.match( /^(ftp|https?):\\/\\/(\\w+:{0,1}\\w*@)?((?![^\\/]+\\/(?:ftp|https?):)\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/ ) ) return { \"invalidURIAddress\": true };\n\t\tif( ! URI.Util.hasFragment( control.value ) ) return;\n\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"multipleFragment\": true };\n\t\tif( URI.Util.getFragment( control.value ).trim().length === 0 ) return { \"missingFragment\": true };\n\n\t\treturn null;\n\t}\n}\n\n@Directive( {\n\tselector: '[cp-required-if]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: RequiredIfValidator, multi: true } ]\n} )\nexport class RequiredIfValidator {\n\t@Input() condition:boolean;\n\n\tvalidate( control:AbstractControl ):{ [key:string]:any } {\n\t\tif( this.condition && ! control.value ) return { \"requiredIf\": true };\n\t\treturn null;\n\t}\n}"]}