{"version":3,"sources":["custom-validators.ts"],"names":[],"mappings":"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","file":"custom-validators.js","sourcesContent":["import { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AbstractControl, Validator, NG_VALIDATORS } from \"@angular/forms\";\n\n@Directive( {\n\tselector: \"[cp-email]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: EmailValidator, multi: true } ]\n} )\nexport class EmailValidator implements Validator {\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// RFC 2822 compliant regex\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/ ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { \"invalidEmailAddress\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-slug]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: SlugValidator, multi: true } ]\n} )\nexport class SlugValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^[a-z0-9]+(?:-[a-z0-9]*)*(?:\\/*)$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { \"invalidSlug\": true };\n\t\t}\n\t}\n}\n\n\n@Directive( {\n\tselector: \"[cp-match]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: MatchValidator, multi: true } ]\n} )\nexport class MatchValidator implements Validator,OnChanges {\n\t@Input() matchTo;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// {6,100}           - Assert password is between 6 and 100 characters\n\t\t// (?=.*[0-9])       - Assert a string has at least one number\n\t\t//if( controlGroup.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n\t\tif( control.value ) {\n\t\t\tif( control.value === this.matchTo )\n\t\t\t\treturn null;\n\t\t\telse {\n\t\t\t\treturn { \"matchError\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-domain]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: DomainValidator, multi: true } ]\n} )\nexport class DomainValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^http(s?):\\/\\/((\\w+\\.)?\\w+\\.\\w+|((2[0-5]{2}|1[0-9]{2}|[0-9]{1,2})\\.){3}(2[0-5]{2}|1[0-9]{2}|[0-9]{1,2}))(\\/)?$/gm ) )\n\t\t\t\treturn null;\n\t\t\telse {\n\t\t\t\treturn { \"invalidURLAddress\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: \"[cp-uri]\",\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: URIValidator, multi: true } ]\n} )\nexport class URIValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^(ftp|https?):\\/\\/(\\w+:{0,1}\\w*@)?((?![^\\/]+\\/(?:ftp|https?):)\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//if( control.touched && ! ! control.value ) {\n\t\t\t\treturn { \"invalidURIAddress\": true };\n\t\t\t}\n\t\t}\n\t\treturn { \"emptyURIAddress\": true };\n\t}\n}\n"],"sourceRoot":"/source/"}