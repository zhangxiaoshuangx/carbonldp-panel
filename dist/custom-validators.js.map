{"version":3,"sources":["custom-validators.ts"],"names":[],"mappings":"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","file":"custom-validators.js","sourcesContent":["// import { AbstractControl } from \"@angular/common\";\n// import { ValidatorFn } from \"@angular/common/src/forms-deprecated/directives/validators\";\n//\n// export let EmailValidator:ValidatorFn = function EmailValidator( control:AbstractControl ):{ [key:string]:any } {\n// \t// RFC 2822 compliant regex\n// \tif( control.value.match( /[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/ ) ) {\n// \t\treturn null;\n// \t} else {\n// \t\treturn { \"invalidEmailAddress\": true };\n// \t}\n// };\n//\n// export let PasswordValidator:ValidatorFn = function PasswordValidator( control:AbstractControl ):{ [key:string]:any } {\n// \t// {6,100}           - Assert password is between 6 and 100 characters\n// \t// (?=.*[0-9])       - Assert a string has at least one number\n// \tif( control.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n// \t\treturn null;\n// \t} else {\n// \t\treturn { \"invalidPassword\": true };\n// \t}\n// };\n//\n// export let SameAsValidator:( controlToCompare:AbstractControl ) => ValidatorFn = function SameAsValidator( controlToCompare:AbstractControl ):ValidatorFn {\n// \treturn function SameAsValidator( control:AbstractControl ):{ [key:string]:any } {\n// \t\tif( controlToCompare.value !== control.value ) return { \"notTheSame\": true };\n// \t\telse return null;\n// \t}\n// };\nimport * as NS from \"carbonldp/NS\";\nimport * as Utils from \"carbonldp/Utils\";\nimport * as SDKLiteral from \"carbonldp/RDF/Literal\";\nimport * as URI from \"carbonldp/RDF/URI\";\n\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AbstractControl, Validator, NG_VALIDATORS, FormGroup } from \"@angular/forms\";\n\n@Directive( {\n\tselector: '[email]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: EmailValidator, multi: true } ]\n} )\nexport class EmailValidator implements Validator {\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// RFC 2822 compliant regex\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/ ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { \"invalidEmailAddress\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: '[password]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: PasswordValidator, multi: true } ]\n} )\nexport class PasswordValidator implements Validator {\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// {6,100}           - Assert password is between 6 and 100 characters\n\t\t// (?=.*[0-9])       - Assert a string has at least one number\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { \"invalidPassword\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n@Directive( {\n\tselector: '[slug]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: SlugValidator, multi: true } ]\n} )\nexport class SlugValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^[a-z0-9]+(?:-[a-z0-9]*)*(?:\\/*)$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { \"invalidSlug\": true };\n\t\t}\n\t}\n}\n\n\n@Directive( {\n\tselector: '[match]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: MatchValidator, multi: true } ]\n} )\nexport class MatchValidator implements Validator,OnChanges {\n\t@Input() matchTo;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// {6,100}           - Assert password is between 6 and 100 characters\n\t\t// (?=.*[0-9])       - Assert a string has at least one number\n\t\t//if( controlGroup.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n\t\tif( control.value ) {\n\t\t\tif( control.value === this.matchTo )\n\t\t\t\treturn null;\n\t\t\telse {\n\t\t\t\treturn { \"matchError\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: '[domain]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: DomainValidator, multi: true } ]\n} )\nexport class DomainValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^http(s?):\\/\\/((\\w+\\.)?\\w+\\.\\w+|((2[0-5]{2}|1[0-9]{2}|[0-9]{1,2})\\.){3}(2[0-5]{2}|1[0-9]{2}|[0-9]{1,2}))(\\/)?$/gm ) )\n\t\t\t\treturn null;\n\t\t\telse {\n\t\t\t\treturn { \"invalidURLAddress\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: '[uri]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: URIValidator, multi: true } ]\n} )\nexport class URIValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^(ftp|https?):\\/\\/(\\w+:{0,1}\\w*@)?((?![^\\/]+\\/(?:ftp|https?):)\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//if( control.touched && ! ! control.value ) {\n\t\t\t\treturn { \"invalidURIAddress\": true };\n\t\t\t}\n\t\t}\n\t\treturn { \"emptyURIAddress\": true };\n\t}\n}\n\n@Directive( {\n\tselector: '[existing-backup]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: ExistingBackupValidator, multi: true } ]\n} )\nexport class ExistingBackupValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) return null;\n\t\treturn { \"invalidExistingBackupAddress\": true };\n\t}\n}\n@Directive( {\n\tselector: '[backup-file]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: BackupFileValidator, multi: true } ]\n} )\nexport class BackupFileValidator implements Validator, OnChanges {\n\t@Input() backupFileBlob;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.backupFileBlob = changes[ \"backupFileBlob\" ].currentValue;\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):any {\n\t\tif( ! ! this.backupFileBlob && this.backupFileBlob.type === \"application/zip\" ) return null;\n\t\tif( ! this.backupFileBlob ) return { \"emptyBackupFile\": true };\n\t\treturn { \"invalidBackupFileFormat\": true };\n\t}\n}\n\n@Directive( {\n\tselector: '[one-control-valid]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: OneControlValidValidator, multi: true } ]\n} )\nexport class OneControlValidValidator implements Validator {\n\n\tvalidate( formGroup:FormGroup ):{[key:string]:any;} {\n\t\tfor ( let control in formGroup.controls ) {\n\t\t\tif( ! ! formGroup.controls[ control ].valid ) return null;\n\t\t}\n\t\treturn { \"invalidForm\": true };\n\t}\n}\n\n@Directive( {\n\tselector: '[name-explorer-validator]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: NameExplorerValidator, multi: true } ]\n} )\nexport class NameExplorerValidator implements Validator, OnChanges {\n\t@Input() existingProperties;\n\t@Input() property;\n\t@Input() id;\n\t@Input() name;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\n\t\tif( ! ! control ) {\n\t\t\tif( typeof control.value === \"undefined\" || control.value === null || ! control.value ) return null;\n\t\t\tif( this.existingProperties.indexOf( control.value ) !== - 1 && (this.property.added ? this.id !== control.value : this.name !== control.value) ) return { \"duplicatedPropertyName\": true };\n\t\t\tlet url = new RegExp( \"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\", \"g\" );\n\t\t\tif( ! url.test( control.value ) ) return { \"invalidName\": true };\n\t\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"duplicatedHashtag\": true };\n\t\t}\n\t\treturn null;\n\t}\n}\n\n@Directive( {\n\tselector: '[id-validator]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: IdValidator, multi: true } ]\n} )\nexport class IdValidator implements Validator, OnChanges {\n\t@Input() existingFragments;\n\t@Input() property;\n\t@Input() documentURI;\n\t@Input() id;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\t// if(changes[\"value\"].currentValue) this.control.control.setValue( this.value );\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\n\t\tif( ! ! control ) {\n\t\t\tif( typeof control.value === \"undefined\" || control.value === null || ! control.value ) return null;\n\t\t\tif( typeof control.value === \"string\" && ! control.value.startsWith( this.documentURI ) ) return { \"invalidParent\": true };\n\t\t\tif( this.existingFragments.indexOf( control.value ) !== - 1 && (this.property.added ? this.id !== control.value : true) ) return { \"duplicatedNamedFragmentName\": true };\n\t\t\tlet url = new RegExp( \"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\", \"g\" );\n\t\t\tif( ! url.test( control.value ) ) return { \"invalidValue\": true };\n\t\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"duplicatedHashtag\": true };\n\t\t}\n\t\treturn null;\n\t}\n}\n\n@Directive( {\n\tselector: '[value-validator]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: ValueValidator, multi: true } ]\n} )\n\nexport class ValueValidator implements Validator, OnChanges {\n\t@Input() type;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tlet valid:boolean;\n\t\tswitch ( this.type ) {\n\t\t\t// Boolean\n\t\t\tcase NS.XSD.DataType.boolean:\n\t\t\t\tswitch ( control.value ) {\n\t\t\t\t\tcase \"true\":\n\t\t\t\t\tcase \"yes\":\n\t\t\t\t\tcase \"y\":\n\t\t\t\t\tcase \"1\":\n\t\t\t\t\tcase \"false\":\n\t\t\t\t\tcase \"no\":\n\t\t\t\t\tcase \"n\":\n\t\t\t\t\tcase \"0\":\n\t\t\t\t\t\tvalid = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// Numbers\n\t\t\tcase NS.XSD.DataType.int :\n\t\t\tcase NS.XSD.DataType.integer :\n\t\t\t\tvalid = ! isNaN( control.value ) && ! isNaN( SDKLiteral.Factory.parse( control.value, this.type ) ) && Utils.isInteger( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\tcase NS.XSD.DataType.byte :\n\t\t\tcase NS.XSD.DataType.decimal :\n\t\t\tcase NS.XSD.DataType.long :\n\t\t\tcase NS.XSD.DataType.negativeInteger :\n\t\t\tcase NS.XSD.DataType.nonNegativeInteger :\n\t\t\tcase NS.XSD.DataType.nonPositiveInteger :\n\t\t\tcase NS.XSD.DataType.positiveInteger :\n\t\t\tcase NS.XSD.DataType.short :\n\t\t\tcase NS.XSD.DataType.unsignedLong :\n\t\t\tcase NS.XSD.DataType.unsignedInt :\n\t\t\tcase NS.XSD.DataType.unsignedShort :\n\t\t\tcase NS.XSD.DataType.unsignedByte :\n\t\t\tcase NS.XSD.DataType.double :\n\t\t\tcase NS.XSD.DataType.float :\n\t\t\t\tvalid = ! isNaN( control.value ) && ! isNaN( SDKLiteral.Factory.parse( control.value, this.type ) ) && Utils.isNumber( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\t// Dates\n\t\t\tcase NS.XSD.DataType.date:\n\t\t\tcase NS.XSD.DataType.dateTime:\n\t\t\tcase NS.XSD.DataType.time:\n\t\t\t\tvalid = Utils.isDate( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\tcase NS.XSD.DataType.string:\n\t\t\t\tvalid = Utils.isString( SDKLiteral.Factory.parse( control.value, this.type ) );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalid = Utils.isString( control.value );\n\t\t\t\tbreak;\n\t\t}\n\t\tif( ! valid ) {\n\t\t\treturn { \"invalidTypeError\": true };\n\t\t}\n\t\treturn null;\n\n\t}\n}\n\n\n@Directive( {\n\tselector: '[id-pointer-validator]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: IdPointerValidator, multi: true } ]\n} )\nexport class IdPointerValidator implements Validator {\n\t@Input() documentURI;\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( ! ! control && typeof control.value === \"undefined\" ) {\n\t\t\t//if( ! ! control && (typeof control.value === \"undefined\" || control.value.trim().length === 0) ) {\n\t\t\treturn { \"emptyControl\": true };\n\t\t}\n\t\tif( ! ! control.value ) {\n\t\t\tif( ! control.value.match( \"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\", \"g\") ){\n\t\t\t\t\t\tif( ! URI.Util.isBNodeID( control.value ) ){\n\t\t\t\t\t\t\treturn { \"invalidId\": true };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\telse{\n\t\t\t\tif( typeof control.value === \"string\" && ! control.value.startsWith( this.documentURI ) ) return { \"invalidParent\": true };\n\t\t\t\tif( control.value.split( \"#\" ).length > 2 ) return { \"duplicatedHashtag\": true };\n\t\t\t}\n\t\t}\n\t\treturn null;\n\n\t}\n}"],"sourceRoot":"/source/"}