{"version":3,"sources":["custom-validators.ts"],"names":[],"mappings":"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","file":"custom-validators.js","sourcesContent":["// import { AbstractControl } from \"@angular/common\";\n// import { ValidatorFn } from \"@angular/common/src/forms-deprecated/directives/validators\";\n//\n// export let EmailValidator:ValidatorFn = function EmailValidator( control:AbstractControl ):{ [key:string]:any } {\n// \t// RFC 2822 compliant regex\n// \tif( control.value.match( /[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/ ) ) {\n// \t\treturn null;\n// \t} else {\n// \t\treturn { \"invalidEmailAddress\": true };\n// \t}\n// };\n//\n// export let PasswordValidator:ValidatorFn = function PasswordValidator( control:AbstractControl ):{ [key:string]:any } {\n// \t// {6,100}           - Assert password is between 6 and 100 characters\n// \t// (?=.*[0-9])       - Assert a string has at least one number\n// \tif( control.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n// \t\treturn null;\n// \t} else {\n// \t\treturn { \"invalidPassword\": true };\n// \t}\n// };\n//\n// export let SameAsValidator:( controlToCompare:AbstractControl ) => ValidatorFn = function SameAsValidator( controlToCompare:AbstractControl ):ValidatorFn {\n// \treturn function SameAsValidator( control:AbstractControl ):{ [key:string]:any } {\n// \t\tif( controlToCompare.value !== control.value ) return { \"notTheSame\": true };\n// \t\telse return null;\n// \t}\n// };\n\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AbstractControl, Validator, NG_VALIDATORS, FormGroup } from \"@angular/forms\";\n\n@Directive( {\n\tselector: '[email]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: EmailValidator, multi: true } ]\n} )\nexport class EmailValidator implements Validator {\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// RFC 2822 compliant regex\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/ ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { \"invalidEmailAddress\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: '[password]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: PasswordValidator, multi: true } ]\n} )\nexport class PasswordValidator implements Validator {\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// {6,100}           - Assert password is between 6 and 100 characters\n\t\t// (?=.*[0-9])       - Assert a string has at least one number\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { \"invalidPassword\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n@Directive( {\n\tselector: '[slug]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: SlugValidator, multi: true } ]\n} )\nexport class SlugValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^[a-z0-9]+(?:-[a-z0-9]*)*(?:\\/*)$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { \"invalidSlug\": true };\n\t\t}\n\t}\n}\n\n\n@Directive( {\n\tselector: '[match]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: MatchValidator, multi: true } ]\n} )\nexport class MatchValidator implements Validator {\n\t@Input() matchTo;\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// {6,100}           - Assert password is between 6 and 100 characters\n\t\t// (?=.*[0-9])       - Assert a string has at least one number\n\t\t//if( controlGroup.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n\t\tif( control.value ) {\n\t\t\tif( control.value === this.matchTo )\n\t\t\t\treturn null;\n\t\t\telse {\n\t\t\t\treturn { \"matchError\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: '[domain]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: DomainValidator, multi: true } ]\n} )\nexport class DomainValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^http(s?):\\/\\/((\\w+\\.)?\\w+\\.\\w+|((2[0-5]{2}|1[0-9]{2}|[0-9]{1,2})\\.){3}(2[0-5]{2}|1[0-9]{2}|[0-9]{1,2}))(\\/)?$/gm ) )\n\t\t\t\treturn null;\n\t\t\telse {\n\t\t\t\treturn { \"invalidURLAddress\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: '[uri]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: URIValidator, multi: true } ]\n} )\nexport class URIValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^(ftp|https?):\\/\\/(\\w+:{0,1}\\w*@)?((?![^\\/]+\\/(?:ftp|https?):)\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//if( control.touched && ! ! control.value ) {\n\t\t\t\treturn { \"invalidURIAddress\": true };\n\t\t\t}\n\t\t}\n\t\treturn { \"emptyURIAddress\": true };\n\t}\n}\n\n@Directive( {\n\tselector: '[existing-backup]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: ExistingBackupValidator, multi: true } ]\n} )\nexport class ExistingBackupValidator implements Validator {\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\tif( control.value ) return null;\n\t\treturn { \"invalidExistingBackupAddress\": true };\n\t}\n}\n@Directive( {\n\tselector: '[backup-file]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: BackupFileValidator, multi: true } ]\n} )\nexport class BackupFileValidator implements Validator, OnChanges {\n\t@Input() backupFileBlob;\n\t@Input() control;\n\n\tngOnChanges( changes:SimpleChanges ) {\n\t\tthis.backupFileBlob = changes[ \"backupFileBlob\" ].currentValue;\n\t\tthis.control.control.updateValueAndValidity( false, true );\n\t}\n\n\tvalidate( control:AbstractControl ):any {\n\t\tif( ! ! this.backupFileBlob && this.backupFileBlob.type === \"application/zip\" ) return null;\n\t\tif( ! this.backupFileBlob ) return { \"emptyBackupFile\": true };\n\t\treturn { \"invalidBackupFileFormat\": true };\n\t}\n}\n\n@Directive( {\n\tselector: '[one-control-valid]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: OneControlValidValidator, multi: true } ]\n} )\nexport class OneControlValidValidator implements Validator {\n\n\tvalidate( formGroup:FormGroup ):{[key:string]:any;} {\n\t\tfor ( let control in formGroup.controls ) {\n\t\t\tif( ! ! formGroup.controls[ control ].valid ) return null;\n\t\t}\n\t\treturn { \"invalidForm\": true };\n\t}\n}"],"sourceRoot":"/source/"}