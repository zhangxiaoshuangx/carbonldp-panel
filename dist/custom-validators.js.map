{"version":3,"sources":["custom-validators.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAOA;gBAAA;gBASA,CAAC;gBARA,iCAAQ,GAAR,UAAU,OAAuB;oBAChC,2BAA2B;oBAC3B,EAAE,CAAA,CAAE,OAAO,CAAC,KAAK,CAAC,KAAK,CAAE,uIAAuI,CAAG,CAAC,CAAC,CAAC;wBACrK,MAAM,CAAC,IAAI,CAAC;oBACb,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,MAAM,CAAC,EAAC,qBAAqB,EAAE,uBAAuB,EAAC,CAAC;oBACzD,CAAC;gBACF,CAAC;gBAZF;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,SAAS;wBACnB,SAAS,EAAE,CAAE,EAAC,OAAO,EAAE,qBAAa,EAAE,WAAW,EAAE,cAAc,EAAE,KAAK,EAAE,IAAI,EAAC,CAAE;qBACjF,CAAE;;kCAAA;gBAUH,qBAAC;YAAD,CATA,AASC,IAAA;YATD,2CASC,CAAA;YAMD;gBAAA;gBAUA,CAAC;gBATA,oCAAQ,GAAR,UAAU,OAAuB;oBAChC,sEAAsE;oBACtE,8DAA8D;oBAC9D,EAAE,CAAA,CAAE,OAAO,CAAC,KAAK,CAAC,KAAK,CAAE,yCAAyC,CAAG,CAAC,CAAC,CAAC;wBACvE,MAAM,CAAC,IAAI,CAAC;oBACb,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,MAAM,CAAC,EAAC,iBAAiB,EAAE,IAAI,EAAC,CAAC;oBAClC,CAAC;gBACF,CAAC;gBAbF;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,YAAY;wBACtB,SAAS,EAAE,CAAE,EAAC,OAAO,EAAE,qBAAa,EAAE,WAAW,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAC,CAAE;qBACpF,CAAE;;qCAAA;gBAWH,wBAAC;YAAD,CAVA,AAUC,IAAA;YAVD,iDAUC,CAAA","file":"custom-validators.js","sourcesContent":["import {Directive} from \"@angular/core\";\nimport {AbstractControl, Validator, NG_VALIDATORS} from \"@angular/forms\";\n\n@Directive( {\n\tselector: '[email]',\n\tproviders: [ {provide: NG_VALIDATORS, useExisting: EmailValidator, multi: true} ]\n} )\nexport class EmailValidator implements Validator {\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// RFC 2822 compliant regex\n\t\tif( control.value.match( /[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/ ) ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn {\"invalidEmailAddress\": \"Invalid email address\"};\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: '[password]',\n\tproviders: [ {provide: NG_VALIDATORS, useExisting: PasswordValidator, multi: true} ]\n} )\nexport class PasswordValidator {\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// {6,100}           - Assert password is between 6 and 100 characters\n\t\t// (?=.*[0-9])       - Assert a string has at least one number\n\t\tif( control.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn {\"invalidPassword\": true};\n\t\t}\n\t}\n}\n"],"sourceRoot":"/source/"}