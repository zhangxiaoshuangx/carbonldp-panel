{"version":3,"sources":["custom-validators.ts"],"names":[],"mappings":"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","file":"custom-validators.js","sourcesContent":["// import { AbstractControl } from \"@angular/common\";\n// import { ValidatorFn } from \"@angular/common/src/forms-deprecated/directives/validators\";\n//\n// export let EmailValidator:ValidatorFn = function EmailValidator( control:AbstractControl ):{ [key:string]:any } {\n// \t// RFC 2822 compliant regex\n// \tif( control.value.match( /[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/ ) ) {\n// \t\treturn null;\n// \t} else {\n// \t\treturn { \"invalidEmailAddress\": true };\n// \t}\n// };\n//\n// export let PasswordValidator:ValidatorFn = function PasswordValidator( control:AbstractControl ):{ [key:string]:any } {\n// \t// {6,100}           - Assert password is between 6 and 100 characters\n// \t// (?=.*[0-9])       - Assert a string has at least one number\n// \tif( control.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n// \t\treturn null;\n// \t} else {\n// \t\treturn { \"invalidPassword\": true };\n// \t}\n// };\n//\n// export let SameAsValidator:( controlToCompare:AbstractControl ) => ValidatorFn = function SameAsValidator( controlToCompare:AbstractControl ):ValidatorFn {\n// \treturn function SameAsValidator( control:AbstractControl ):{ [key:string]:any } {\n// \t\tif( controlToCompare.value !== control.value ) return { \"notTheSame\": true };\n// \t\telse return null;\n// \t}\n// };\n\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AbstractControl, Validator, NG_VALIDATORS } from \"@angular/forms\";\n\n@Directive( {\n\tselector: '[email]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: EmailValidator, multi: true } ]\n} )\nexport class EmailValidator implements Validator {\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// RFC 2822 compliant regex\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/ ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { \"invalidEmailAddress\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n@Directive( {\n\tselector: '[password]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: PasswordValidator, multi: true } ]\n} )\nexport class PasswordValidator implements Validator {\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// {6,100}           - Assert password is between 6 and 100 characters\n\t\t// (?=.*[0-9])       - Assert a string has at least one number\n\t\tif( control.value ) {\n\t\t\tif( control.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn { \"invalidPassword\": true };\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n@Directive( {\n\tselector: '[match]',\n\tproviders: [ { provide: NG_VALIDATORS, useExisting: MatchValidator, multi: true } ]\n} )\nexport class MatchValidator implements Validator {\n\t@Input() matchTo;\n\n\tvalidate( control:AbstractControl ):{[key:string]:any;} {\n\t\t// {6,100}           - Assert password is between 6 and 100 characters\n\t\t// (?=.*[0-9])       - Assert a string has at least one number\n\t\t//if( controlGroup.value.match( /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/ ) ) {\n\t\tif( control.value ) {\n\t\t\tif( control.value === this.matchTo)\n\t\t\t\treturn null;\n\t\t\telse {\n\t\t\t\treturn { \"matchError\": true };\n\t\t\t}\n\t\t}\n\t}\n}"],"sourceRoot":"/source/"}