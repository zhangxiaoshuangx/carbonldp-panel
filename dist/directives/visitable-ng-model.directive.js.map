{"version":3,"sources":["directives/visitable-ng-model.directive.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAOA;gBAgBC,yBAAyC,OAAe;oBAAf,YAAO,GAAP,OAAO,CAAQ;oBAHhD,aAAQ,GAAW,KAAK,CAAC;oBACzB,eAAU,GAAW,KAAK,CAAC;oBAGlC,OAAO,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;gBACxB,CAAC;gBAfD,sBAAI,oCAAO;yBAAX;wBACC,EAAE,CAAA,CAAE,CAAE,IAAI,CAAC,OAAQ,CAAC;4BAAC,MAAM,CAAC,IAAI,CAAC;wBACjC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;oBAC7B,CAAC;;;mBAAA;gBAED,sBAAI,kCAAK;yBAAT;wBACC,EAAE,CAAA,CAAE,CAAE,IAAI,CAAC,OAAQ,CAAC;4BAAC,MAAM,CAAC,IAAI,CAAC;wBACjC,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;oBACjE,CAAC;;;mBAAA;gBAUD,iCAAO,GAAP;oBACC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACxB,CAAC;gBAGD,gCAAM,GAAN;oBACC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACvB,CAAC;gBA5BD;oBAAC,YAAK,CAAE,cAAc,CAAE;;8DAAA;gBAmBxB;oBAAC,mBAAY,CAAE,OAAO,EAAE,CAAE,QAAQ,CAAE,CAAE;;;;8DAAA;gBAMtC;oBAAC,mBAAY,CAAE,MAAM,EAAE,CAAE,QAAQ,CAAE,CAAE;;;;6DAAA;gBA9BtC;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,6CAA6C;wBACvD,QAAQ,EAAE,cAAc;qBACxB,CAAE;+BAiBY,eAAQ,EAAE;+BAAE,WAAI,EAAE;;mCAjB9B;gBA+BH,sBAAC;YAAD,CA9BA,AA8BC,IAAA;YA9BD,6CA8BC,CAAA;YAED,oBAAe,eAAe,EAAC","file":"visitable-ng-model.directive.js","sourcesContent":["import { Directive, HostListener, Input, Optional, Host } from \"@angular/core\";\nimport { NgModel, AbstractControl } from \"@angular/forms\";\n\n@Directive( {\n\tselector: \"input[cpValidation], textarea[cpValidation]\",\n\texportAs: \"cpValidation\",\n} )\nexport class InputValidation {\n\t@Input( \"cpValidation\" ) input:any;\n\n\tget control():AbstractControl {\n\t\tif( ! this.ngModel ) return null;\n\t\treturn this.ngModel.control;\n\t}\n\n\tget valid():boolean {\n\t\tif( ! this.ngModel ) return true;\n\t\treturn this.hasFocus || ! this.wasFocused || this.ngModel.valid;\n\t}\n\n\tprivate hasFocus:boolean = false;\n\tprivate wasFocused:boolean = false;\n\n\tconstructor( @Optional() @Host() private ngModel:NgModel ) {\n\t\tconsole.log( ngModel );\n\t}\n\n\t@HostListener( \"focus\", [ \"$event\" ] )\n\tonFocus():void {\n\t\tthis.hasFocus = true;\n\t\tthis.wasFocused = true;\n\t}\n\n\t@HostListener( \"blur\", [ \"$event\" ] )\n\tonBlur():void {\n\t\tthis.hasFocus = false;\n\t}\n}\n\nexport default InputValidation;"]}