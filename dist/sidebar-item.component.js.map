{"version":3,"sources":["sidebar-item.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAkBA;gBAKC,6BAAqB,OAAkB,EAAU,MAAa;oBAAzC,YAAO,GAAP,OAAO,CAAW;oBAAU,WAAM,GAAN,MAAM,CAAO;gBAAI,CAAC;gBAEnE,6CAAe,GAAf;oBACC,IAAI,CAAC,QAAQ,GAAG,gBAAC,CAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAE,CAAC;oBAChD,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC5B,CAAC;gBAED,sCAAQ,GAAR,UAAU,KAAY;oBACrB,IAAI,WAAW,GAAe,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAE,KAAK,CAAE,CAAE,CAAC;oBAChE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAE,WAAW,CAAE,CAAC;gBACjD,CAAC;gBAED,iDAAmB,GAAnB;oBACC,EAAE,CAAA,CAAE,CAAE,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC;wBAAC,MAAM,CAAC;oBAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,cAAc,CAAE,CAAC,QAAQ,CAAE;wBAC9C,EAAE,EAAE,OAAO;qBACX,CAAE,CAAC;gBACL,CAAC;gBArBD;oBAAC,YAAK,CAAE,MAAM,CAAE;;iEAAA;gBAPjB;oBAAC,gBAAS,CAAE;wBACX,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,oCAAQ;wBAClB,MAAM,EAAE,CAAE,wCAAK,CAAE;wBACjB,UAAU,EAAE,CAAE,wBAAe,EAAE,qCAAiB,CAAE;qBAClD,CAAE;;uCAAA;gBAwBH,0BAAC;YAAD,CAvBA,AAuBC,IAAA;YAvBD,qDAuBC,CAAA;YAED,oBAAe,mBAAmB,EAAC","file":"sidebar-item.component.js","sourcesContent":["import {Component, ElementRef, Input, AfterViewInit} from \"@angular/core\";\nimport {CORE_DIRECTIVES} from \"@angular/common\";\nimport {ROUTER_DIRECTIVES, Router, Instruction} from \"@angular/router-deprecated\";\n\nimport {HeaderItem} from \"carbon-panel/header.service\";\n\nimport $ from \"jquery\";\nimport \"semantic-ui/semantic\";\n\nimport template from \"./header-item.component.html!\";\nimport style from \"./header-item.component.css!text\";\n\n@Component( {\n\tselector: \"cp-header-item\",\n\ttemplate: template,\n\tstyles: [ style ],\n\tdirectives: [ CORE_DIRECTIVES, ROUTER_DIRECTIVES ]\n} )\nexport class HeaderItemComponent implements AfterViewInit {\n\t@Input( \"item\" ) item:HeaderItem;\n\n\tprivate $element:JQuery;\n\n\tconstructor( private element:ElementRef, private router:Router ) {}\n\n\tngAfterViewInit():void {\n\t\tthis.$element = $( this.element.nativeElement );\n\t\tthis.createDropdownMenus();\n\t}\n\n\tisActive( route:string ):boolean {\n\t\tlet instruction:Instruction = this.router.generate( [ route ] );\n\t\treturn this.router.isRouteActive( instruction );\n\t}\n\n\tcreateDropdownMenus():void {\n\t\tif( ! this.item.children ) return;\n\t\tthis.$element.find( \".ui.dropdown\" ).dropdown( {\n\t\t\ton: \"hover\",\n\t\t} );\n\t}\n}\n\nexport default HeaderItemComponent;\n"],"sourceRoot":"/source/"}